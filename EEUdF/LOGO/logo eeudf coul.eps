%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: logo eeudf coul.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Sandrine Galia
%%CreationDate: 7/24/14
%%BoundingBox: 0 0 298 412
%%HiResBoundingBox: 0 0 297.6392 411.0235
%%CropBox: 0 0 297.6392 411.0235
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x409 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 96 128 8%%BeginData: 11204 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFDFCFFFDF3FFA7A6A7FD59FFCFA68156805681FD57%FFA7A67A8156817A8181FD55FFAE7B5C5681568056805681A8FD52FFAE81%56817A8156817A81568156AEFD51FF8280568056805680568056805680A7%FD4FFFCF7B817A8156817A8156817A815681A6FD4FFFAD56805680568056%8056805680565C7BFD4FFFA656817A8156817A8156817A81568156ADFD4E%FFA65680568056805680568056805682A7CFFD1AFFCFFD33FFA656815681%7A815681568181ADADFD1CFFCFA5CCCFFD31FFA6568156805681565C56A6%A7FD17FFA7CDA5CECFFFFFCDA4A4A4FD31FFAD56815681568156A6A7FD18%FFCDA4AAA4A4A4FECECDA4FEA4FD31FFAE56805656568182CFFD18FFA8A5%FD0BA4CCA6CDA6CEA7FD2CFF81817A8181CFFD1AFFCFCCA4FEA4FEA4FEA4%FEA4FEA4FEA4AAA4FEA4AAA5CFFD29FF82565681A6FD1BFFCFA5FD15A4CE%FD27FFA781568156CFFD0BFFCF82FD0EFFCDA4A4A4FEA4A4A4FEA4A4A4FE%A4A4A4FEA4A4A4FEA4A4A4FD27FF8156805680A7FD09FF82570A1183FFFF%CF82FD08FFCEA4A5A7CFA8CEFD12A4A7FD25FFCF56817A8156CFFD06FFA7%82333332333357A8FF831157FD07FFA4CCFD05FFCFA4FEA4FEA4FEA4FEA4%FEA4FEA4FEA4AAA4CFFD25FF7B8056805681A8FD04FFAE33330A33323332%33323382821033A8FD05FFCFA5AEFD05FFCFFD11A4AEFD24FFA7817A8156%8181FD05FF831133333233333332573333323333AEFD0DFFCDA4A4A4CCA4%A4A4FEA4A4A4FEA4A4A4AAA6FD25FF82568056805681FD05FF830A333233%3233323332333233323383FD0BFFA8A5A4CDCFFFA8CEFD0BA4CFFD25FF7A%817A81568181FD05FF82333333325733333257333332573383FD0AFFCEAA%A4CDFD05FFCFA4FEA4FEA4FEA4AAA4CFFD25FFA75C568056805682FD05FF%820A3332333233323332333233323357FD09FFA5A4A4A4A8FD06FFA5FD07%A4CEFD26FFA6568156817A8181FD05FF5E33323333333233333332333333%325DFD08FFA6A4A4AAA5FD06FFCFA4A4A4FEA4A4A4CFFD27FF5680568056%805682FD05FF82103332333233323332333233323332FD07FFA8FD04A4CD%FD06FFFD06A4A6FD28FFAE817A8156817A8182FD05FF5733325733333257%33333257333357FD09FFCEAAA4FECEFD05FFA4AAA4FEA5CEFD2AFFA75680%568056805682FD05FF5E1033323332333233323332331083FD0AFFCFCDA4%CEFD04FFA6CDA7CFCFFD2CFFA68156817A81568182FD05FF573333333233%333332333333323383FD0DFFCFFD15FFCFAEA6A681FD1BFF825680568056%8056A6FD05FF833233323332333233323332330A33A7FD20FFA756805656%5680A8FD1AFF818156817A81568182FD07FF82333257333332573333575D%113382FD1FFF56817A81568156CFFD19FFAE815680568056805682FD08FF%5733323332331057A7FFA8831033A8FD1DFF7B5C568056805681A7FD1AFF%7B817A8156817A8181FD06FFAE335733333233113357FD04FFAE83FD1DFF%CF81568156817A8156CFFD19FFAE815680568056805681AEFD05FF83110A%333358588383AEFD16FFCFCFC9CECFFD09FF568056805680567AA7FD1AFF%81817A8156817A817BFD07FFA8CFCFFD17FFCFCEC8CDC7FEC6FEC6CEFD09%FF81568156817A8156CFFD19FFCF8156805680568181CFFD1BFFCFC9FD04%FFCDC6C6C6FEC6FEC6CCCEFD09FF7B81568056805680A7FD1AFF81815681%7A8182FD17FFA7C9FD04FFC7FEC7CFFFCFC6FEC6FEC6FEC6CCFD0BFF8156%817A81568156CFFD1AFF82568056807BFD0FFFCACAA1A0A1FFFFFFA16968%FD04FFCFC6C6C6FEC6C6C6FEC6C6C6FEC6CDCAFD09FF7B7A568056805680%A8FD1AFF8281568156A6FD0BFFCAA09A939369936993A7FFC9936893FD05%FFCEC6FEC6FEC6FEC6FEC6FEC6FEC6CCCDCDC8FD06FF8256817A81568181%FD1BFFAD568056805681A8FD08FFCA6869688D6869688D6869688D6869A0%FD06FFCEC6FEC6FEC6FEC6FEC6FEC6FEC6FEC6CCFD06FF81805680568056%81FD1BFFA7817A81568156817BADFD06FFCA936F93688D698D688D698D68%8D6FFD06FFCDC7FEC6FEC6FEC6FEC6FEC6FEC6FEC6FEC7FD06FF82568156%817A8182FD1BFFCF568056805680565656FD09FF68696869686968696869%68936F9AFD04FFC6FEC6C6C6FEC6C6C6FEC6C6C6FEC6C6C6CDFD06FF7B80%5680568056A7FD1CFFA6568156817A815681A7FD07FFA18D6993698D6993%698D6993698D6FFD04FFCDC6FEC6FEC6FEC6FEC6FEC6FEC6FEC6FECDFD06%FF81568156817A81AEFD1CFF828156805680568056A6FD06FFA08D686968%8D6869688D6869688D686FCAFFFFFFC8FEC6FEC6FEC6FEC6FEC6FEC6FEC6%FEC6CDFD06FF5681568056817BFD1DFFCF56817A8156817A817BFD05FFA7%8D688D698D688D698D688D698D688D69CAFFFFFFCEC6FEC6FEC6FEC6FEC6%FEC6FEC6FEC6FEC9FD06FF8156817A8156ADFD1EFF815680568056805680%A7FD05FF6F696869686968696869686968696869A1FFFFFFC9C6C6FEC6C6%C6FEC6C6C6FEC6C6C6FEC6CEFD06FF568056805680A7FD1EFFA7817A8156%817A8156ADFD05FFA06893698D6993698D6993698D699369C3FD04FFC6FE%C6FEC6FEC6FEC6FEC6FEC6FEC6FECEFD05FFCF8156817A8181FD20FF5681%5680568056807BFD05FFA869688D6869688D6869688D6869686999FD04FF%CCC6FEC6FEC6FEC6FEC6FEC6FEC6FEC6CFFD05FFCF5680568056ADFD20FF%AD56817A8156815681A7FD05FF998D688D698D688D698D688D698D689AFD%04FFC7FEC6CDC6FEC6FEC6FEC6FEC6FEC6FECFFD05FFA78156815681FD21%FFAE8156805680568056A6FD05FFC9686968696869686968696869686968%FD04FFCEC6CCFFFFC6C6C6FEC6C6C6FEC6CDC9FD06FFA756805656A7FD22%FFA7817A8156817A817AFD06FF936893698D6993698D699393A16893CAFF%FFFFCFCDC8FFFFCFC6FEC6FEC6CDCEFD09FFA7817A8181FD24FF7B815680%5680565CA7FD05FFA069688D6869688D686968FFFF936FFD0AFFCCC6CCC8%CFFD0BFF82568156CFFD24FFCF56817A8156815682FD06FF698D688D698D%688D68A1FD0EFFCFCFFD0CFFA781568156ADFD26FFA756805680568056AE%FD05FFA06869686968696869A0FD19FFA8A6565656805681FD28FFA65681%56817A8182FD05FFCA9A939A6F936F9369C3FD17FFCF8281568156815681%CFFD28FFAE81568056805681A8FD0BFFCAFFCFFD14FFCF8281565C568056%805681A7FD2AFFAE815681568156ADFD20FFA7A67A8156817A8156815681%A7FD2CFFA881568056807AFD1CFFCF8282565656805680568056805680A7%FD2EFFCF8156817A81A7FD18FFCFA6815681568156817A8156817A815681%A7FD30FFCF8156815680568281A6A6ADA7CFA8FFCFFFAEFFCFFFAEFFA8FD%04FFA756815680568056805680568056805680A7FD33FFA656817A815681%568156815681568180817A818081568182FFFFFF818156817A8156817A81%56817A815682CFFD35FFAD56805680568056805680568056805680568056%80568081CF828056805680568056805680568056A6FD39FF828156817A81%56817A8156817A8156817A8156817A8156817A8156817A8156817A815681%81CFFD3BFFA8825681568056805680568056805680568056805680568056%805680568056815681A7FD3FFFCF8181568156817A8156817A8156817A81%56817A8156817A815681568181AEFD43FFA8A77B80568056805680568056%805680568056805680568056A6A7FD48FFAEAD82817A8156815681568156%815681568181ADA7FD4FFFCFA7ADA6A682A682A682ADA7CFAEFD95FFA781%A7FD5BFFCFA78181AEAEFD07FFCFFD51FFA7568056815681A8FD06FF8281%FD09FFA8CFFD45FF8281CFFFAEFFCFFD07FF81A6FD09FFA682FD45FFA67B%FD07FFA8A782CFFF8281FFFFFFA7A682FFFFFFA7AEFFADA8AD82AEFFFFA8%A782CFFFFFA7CFFFFFFFADA8FFA8A782CFFFFFFFCF82A7A8FFFFFFA8A782%CFFD05FFCFAEFFA8CFFD13FF8281AECFA7FFFFFFA7817A8156FF82A6FFFF%82817A8181FFFFA6A6FF5681808181FFA7817A8156CFFF8182FFFFFF80AD%AE81818156ADFFCF56818081A7FFAD817A8156ADFD04FFA6CFAECF82FD13%FFA65681568081FFAE8082FFCFADAEA681FFA781A7FFA88181FF81A6AE80%7BFFFFFFA88182FFFFA656FF7BA6FFFFFF81A7A756CFFFADA7FF5682FFFF%8280AEA656CFFFADA7FD04FFA682A6A7A6FD13FF8281CFFD04FFCF7AFD05%FF81A6FFA681FFFFFFA781FFA682FF56CFFFFFFFAE568181817B81AEA682%FFFFFF7BADFF825681A7FFA88181817B8156CFCF815681A7FD05FFA7A682%ADA7FD13FFA67BFD05FFA780A7FD04FF8281FF8280A8FFFF8256FF81A6A8%80A7FFFFFFA75681AEA7A7A7FF8181FFFFA880A7FFA8CF828082FF56A6A7%ADA7ADAEFFA8CF825682FD04FFADAEFFA7FD14FF8281A7CFA7ADA7FF8181%A7AD81CF8281FFFF5681A7A65681FFA682FF56CFFD04FF8181A7AD81FFFF%CF56A6A78156CFA781A7CF7AA6FFA67AADA782AEFF8281A7AE56A6FD04FF%81FFFFADA6FD13FFAD568056815681AEFF828056A7FFA756ADFFCF7B817B%A681FF82A7AE81A8FD05FF818156A6AEFFFFAE7B818181A7FF828056A6AE%FFFFA6568081FFFFFF828156A6A8FD04FFA682FFA7A6FD17FFCFFD07FFAE%CFFD3BFFAD82A7AEFD1EFFA65682FD3AFFA782A782AEFD1BFFAEAD828156%A682FD07FFAEADFD30FFA8CF8181AEFD1BFFA7568181827B82A8FD06FFA7%7AFD09FFA7A6FD26FF81A6AEFD1CFFA781CFFD0BFFA681FD09FFAD82FD25%FFA68182A7A7FD1BFFAD56FD07FF828156A6CFA77BFFFFFF7B8156A7FFFF%A7A6FFA682815681FFFF82815682A8FFA7A6FFFFFFA682CF81A65681A7FF%828156A6A8FD07FF82AEFD1BFFA78181A681A6FFFFA68182AD80CFA782FF%FF8181A7A656ADFFA781FF818181ADA6FFA681A7AE81A6FFA681FFFFFF81%ACA7817AADA6CFA681A7AD56ACFD04FFAEAD81ADCFFD1BFFAD568281A682%FFA881A7FD04FFA77BFFA780A8FFFFA756FF8281CF8181FFFFFFAE807BCF%A7A656CF8281FFFFFF8282AD56CFFFFFFFA756A7AECFA8FD04FFA65681CF%FD1CFFA781FD05FFCF56CFFD04FFA681FFAD81FFFFFFAE81CFAD81FF56AD%FD04FF7A8156818181A7AD81FFFFFF81A6A781FD05FFAD7B8181CFFD06FF%82A6AEFD1BFFA756FD06FF817BFFFFAEA8A77BFFA75DA6FFA88256FF8281%CF8082FFFFFFA8817BFFA8AEA8FFA780A7FFA78082A756FD04FFADA7FFA8%8081FD07FFA7A6FD1BFFA7818182818281FFAE817A8156CFA75DA7FFA681%7A815681FFAD81FF56ADFD04FFAE817A8156CFFFFF82817B8156ADA781FD%04FFA7817B817AAEFD04FF81A6FFADA7FD1BFFCF82A782A682A7AEFFA8A7%82AEFFCF82AEFFFFA7A6A6CFA7FFA8AEFFADA8FD05FFA8A782CFFD04FFA7%A6A7AEA8CFA7FD05FFA8A682CFFD05FFA7A782A6FD5CFF828256A6A8FD5B%FFAEA7CFA7CFFD5BFFA7CFA7FD15FFCAA1FFFFFFCAC9A8C9FD05FFC9A8FF%A1FD04FFC39AA1A8FFFFFFA1CAFD04FFA8CAFFC9A8FFFFC99ACAFFCF9AA1%A0A19AA1A1FFA0A1A0A19AA1CAFFA8A1A0FD06FFA6A6A6A8FD14FF6F93FF%FFFFC369C9689AFD04FF69C3A193FFFFA793688D688D9AFFFF9969CFFFFF%FFA06FFF69A1FFA0688D68CACA936993699368A0A16969936F9369CAFF93%688D6FFD05FFA6A682A6A7FD13FF936FFFFFFFA08DA16968A1FFFFA893A0%A168FFA86968CAFFFF9A6999FF6F696FFFFFFF9A93A893A0FF68A0FF9A9A%FFFFFF9A69A8FFFFA068CFFFFFCFFFFFA068CAA799A8FD1CFF6F9AFFFFFF%C969C9699969CAFFFF69C9A193FF9A69FD05FFA08DCA9A698D99FFFFA06F%FF6FC3FF939AFD06FFC369FFFFFFA093FD06FF9A8DA7FD09FFCFFD15FF93%6FFFFFFFA093A16FA89368FFFF93A1C368FF689AFD06FF68A16F9AA1699A%FF9A93CA93A0FF9A6968A0FD04FF9A93CAFFFFA1689A9A9AA0FFFFFF6F69%6FCAFD06FFA78182A7FD13FF9393FFFFFFC369C969CFFF8D93FF69C9A193%CA939AFD06FF93A19A6FFF9A69A8C36FFF69C3FFFFA79A68A0FFFFFFA168%FFFFFFA08D6993689AFD04FFA19368FD06FFCF56A682FD13FF936FFFFFFF%A069A08DA7FFA1696F93A0C968FF6F93FD05FFC968CA6F93FFFF6F696F93%CA6F9AFD04FF9A68FFFFFF9A69A8FFFFA068FD0AFF699AFD06FFAE82CFFD%13FF9A8DCAFFFF996FCA69CAFFFFA08D68CAA193FFCA69A0FFFFFFCF6993%FF996FFFFFFF699393FF69C9CAA0FFFF9993FFFFFFC369FFFFFF9A93FD06%FF9ACAFFFF68C2FD04FFA7A682A6AEFD14FF69696F9368C9A869A7FFFFFF%9969A1C968FFFFA068936F996893A8FF6F93FFFFFFCA6893CF69A0CA6893%6F699AFFFFFF9A69A8FFFFA0689A6F996F9AA893689A6869A8FD05FFA782%82ADFD15FF9A936FCAFFFF99FD05FF99CAA8A0FFFFFFCA99936FA1FFFFFF%A1A0FD04FFC39AFF9ACAFFC99393A1FD04FFCA9AFFFFFFC9996F936F936F%CFFFA06F9ACAFD07FFA6A682FD5EFFA7FDFCFFFDFCFFFDFCFFFDFCFFFD9A%FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">logo eeudf accents2b</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2014-07-24T11:32:45+02:00</xap:CreateDate>
         <xap:ModifyDate>2014-07-24T14:36:53+02:00</xap:ModifyDate>
         <xap:MetadataDate>2014-07-24T14:36:53+02:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>188</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAC8AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVOe4t7eIy3EqQxL9qSRgqj5k0GRnOMR&#xA;cjQ81Y3qH5k+VrQlUne7cdVgSo/4JuK/cc1Gbt3TQ5Ey934DA5Anei6rBq2mQahApSKcEqrUqOLF&#xA;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</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:F04C8564B814E411A6E0DF66913F42AE</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:24551C31D214E411A6E0DF66913F42AE</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:EF4C8564B814E411A6E0DF66913F42AE</stRef:instanceID>
            <stRef:documentID>uuid:EE4C8564B814E411A6E0DF66913F42AE</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>104.999997</stDim:w>
            <stDim:h>144.999989</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Groupe de nuances par défaut</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Blanc</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Noir</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>100.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Rouge CMJN</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Jaune CMJN</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Vert CMJN</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Cyan CMJN</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Bleu CMJN</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Magenta CMJN</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=15 M=100 J=90 N=10</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>14.999998</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>90.000000</xapG:yellow>
                           <xapG:black>10.000002</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=90 J=85 N=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>90.000000</xapG:magenta>
                           <xapG:yellow>85.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=80 J=95 N=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>80.000000</xapG:magenta>
                           <xapG:yellow>95.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=50 J=100 N=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=35 J=85 N=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>35.000004</xapG:magenta>
                           <xapG:yellow>85.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=5 M=0 J=90 N=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>5.000001</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>90.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=20 M=0 J=100 N=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>19.999998</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=0 J=100 N=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=0 J=100 N=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=85 M=10 J=100 N=10</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>85.000000</xapG:cyan>
                           <xapG:magenta>10.000002</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>10.000002</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=90 M=30 J=95 N=30</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>90.000000</xapG:cyan>
                           <xapG:magenta>30.000002</xapG:magenta>
                           <xapG:yellow>95.000000</xapG:yellow>
                           <xapG:black>30.000002</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=0 J=75 N=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=80 M=10 J=45 N=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>80.000000</xapG:cyan>
                           <xapG:magenta>10.000002</xapG:magenta>
                           <xapG:yellow>45.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=70 M=15 J=0 N=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>70.000000</xapG:cyan>
                           <xapG:magenta>14.999998</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=85 M=50 J=0 N=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>85.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=95 J=5 N=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>95.000000</xapG:magenta>
                           <xapG:yellow>5.000001</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=100 J=25 N=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>25.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=100 J=0 N=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=100 J=0 N=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=35 M=100 J=35 N=10</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>35.000004</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>35.000004</xapG:yellow>
                           <xapG:black>10.000002</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=10 M=100 J=50 N=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>10.000002</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=95 J=20 N=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>95.000000</xapG:magenta>
                           <xapG:yellow>19.999998</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=25 J=40 N=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>39.999996</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=40 M=45 J=50 N=5</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.999996</xapG:cyan>
                           <xapG:magenta>45.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>5.000001</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=50 J=60 N=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>60.000004</xapG:yellow>
                           <xapG:black>25.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=55 M=60 J=65 N=40</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>55.000000</xapG:cyan>
                           <xapG:magenta>60.000004</xapG:magenta>
                           <xapG:yellow>65.000000</xapG:yellow>
                           <xapG:black>39.999996</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=40 J=65 N=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>39.999996</xapG:magenta>
                           <xapG:yellow>65.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=30 M=50 J=75 N=10</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>30.000002</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>10.000002</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=35 M=60 J=80 N=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>35.000004</xapG:cyan>
                           <xapG:magenta>60.000004</xapG:magenta>
                           <xapG:yellow>80.000000</xapG:yellow>
                           <xapG:black>25.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=40 M=65 J=90 N=35</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.999996</xapG:cyan>
                           <xapG:magenta>65.000000</xapG:magenta>
                           <xapG:yellow>90.000000</xapG:yellow>
                           <xapG:black>35.000004</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=40 M=70 J=100 N=50</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.999996</xapG:cyan>
                           <xapG:magenta>70.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>50.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=70 J=80 N=70</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>70.000000</xapG:magenta>
                           <xapG:yellow>80.000000</xapG:yellow>
                           <xapG:black>70.000000</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Niveaux de gris</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=90</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>229</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=80</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>203</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=70</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>178</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=60</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>152</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=50</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>127</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=40</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>101</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=30</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>76</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=20</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>50</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=10</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>25</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=5</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>12</xapG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -411.023 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 411.023 li
297.639 411.023 li
297.639 0 li
cp
clp
[1 0 0 1 0 0 ]ct
297.639 411.023 mo
0 411.023 li
0 0 li
297.639 0 li
297.639 411.023 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
48.6372 284.817 mo
49.1694 284.817 49.623 285.005 49.9985 285.38 cv
50.3735 285.755 50.561 286.209 50.561 286.741 cv
50.561 287.273 50.3735 287.728 49.9985 288.103 cv
49.623 288.478 49.1694 288.665 48.6372 288.665 cv
31.8496 288.665 li
31.5708 288.665 31.3169 288.617 31.0874 288.52 cv
30.8574 288.423 30.6543 288.287 30.479 288.111 cv
30.3037 287.937 30.1675 287.733 30.0708 287.504 cv
29.9741 287.273 29.9258 287.02 29.9258 286.741 cv
29.9258 261.551 li
29.9258 261.284 29.9741 261.033 30.0708 260.798 cv
30.1675 260.562 30.3037 260.355 30.479 260.181 cv
30.6543 260.005 30.8574 259.869 31.0874 259.771 cv
31.3169 259.675 31.5708 259.627 31.8496 259.627 cv
48.6372 259.627 li
49.1694 259.627 49.623 259.814 49.9985 260.189 cv
50.3735 260.564 50.561 261.019 50.561 261.551 cv
50.561 262.083 50.3735 262.537 49.9985 262.912 cv
49.623 263.287 49.1694 263.475 48.6372 263.475 cv
33.7734 263.475 li
33.7734 272.222 li
44.4448 272.222 li
44.9771 272.222 45.4307 272.41 45.8062 272.785 cv
46.1807 273.16 46.3687 273.613 46.3687 274.146 cv
46.3687 274.679 46.1807 275.132 45.8062 275.507 cv
45.4307 275.882 44.9771 276.069 44.4448 276.069 cv
33.7734 276.069 li
33.7734 284.817 li
48.6372 284.817 li
cp
0.5 0 1 0 cmyk
f
68.1631 282.912 mo
68.7075 282.912 69.1577 283.091 69.5151 283.447 cv
69.8716 283.805 70.0503 284.255 70.0503 284.8 cv
70.0503 285.332 69.8506 285.798 69.4512 286.197 cv
67.5757 287.843 65.3677 288.665 62.8271 288.665 cv
60.02 288.665 57.6245 287.673 55.6401 285.688 cv
53.6558 283.704 52.6636 281.309 52.6636 278.502 cv
52.6636 275.694 53.6558 273.299 55.6401 271.314 cv
57.6245 269.33 60.02 268.338 62.8271 268.338 cv
65.3799 268.338 67.5879 269.161 69.4512 270.807 cv
69.8872 271.194 70.105 271.672 70.105 272.24 cv
70.105 272.785 69.9263 273.238 69.5693 273.602 cv
69.2124 273.965 68.7617 274.146 68.2173 274.146 cv
67.7573 274.146 67.3462 274.001 66.9834 273.71 cv
66.3662 273.19 65.7188 272.797 65.041 272.53 cv
64.3633 272.265 63.6255 272.132 62.8271 272.132 cv
61.9438 272.132 61.1147 272.298 60.3408 272.631 cv
59.5664 272.964 58.8887 273.417 58.3081 273.991 cv
57.7271 274.566 57.2705 275.241 56.9375 276.016 cv
56.605 276.79 56.4385 277.618 56.4385 278.502 cv
56.4385 279.385 56.605 280.214 56.9375 280.988 cv
57.2705 281.763 57.7271 282.438 58.3081 283.012 cv
58.8887 283.587 59.5664 284.04 60.3408 284.373 cv
61.1147 284.706 61.9438 284.872 62.8271 284.872 cv
63.6255 284.872 64.3633 284.742 65.041 284.481 cv
65.7188 284.222 66.3599 283.831 66.9648 283.312 cv
67.3037 283.057 67.7031 282.924 68.1631 282.912 cv
cp
f
73.5146 286.777 mo
73.5146 261.532 li
73.5146 261 73.6929 260.55 74.0498 260.181 cv
74.4067 259.812 74.8574 259.627 75.4019 259.627 cv
75.9463 259.627 76.397 259.812 76.7539 260.181 cv
77.1108 260.55 77.2896 261 77.2896 261.532 cv
77.2896 284.872 li
78.1606 284.872 li
78.6807 284.872 79.1255 285.057 79.4946 285.426 cv
79.8638 285.795 80.0483 286.245 80.0483 286.777 cv
80.0483 287.298 79.8638 287.742 79.4946 288.111 cv
79.1255 288.48 78.6807 288.665 78.1606 288.665 cv
75.3838 288.665 li
74.8638 288.665 74.4219 288.48 74.0591 288.111 cv
73.6963 287.742 73.5146 287.298 73.5146 286.777 cv
cp
f
93.2397 272.132 mo
92.3442 272.132 91.5093 272.301 90.7354 272.64 cv
89.9609 272.979 89.2896 273.436 88.7207 274.01 cv
88.1519 274.585 87.7012 275.259 87.3687 276.033 cv
87.0356 276.808 86.8696 277.631 86.8696 278.502 cv
86.8696 279.373 87.0356 280.195 87.3687 280.97 cv
87.7012 281.744 88.1519 282.419 88.7207 282.993 cv
89.2896 283.568 89.9609 284.025 90.7354 284.363 cv
91.5093 284.702 92.3442 284.872 93.2397 284.872 cv
94.123 284.872 94.9517 284.702 95.7261 284.363 cv
96.5005 284.025 97.1748 283.565 97.75 282.984 cv
98.3242 282.403 98.7783 281.729 99.1108 280.961 cv
99.4438 280.192 99.6099 279.373 99.6099 278.502 cv
99.6099 277.631 99.4438 276.811 99.1108 276.042 cv
98.7783 275.274 98.3242 274.6 97.75 274.019 cv
97.1748 273.438 96.5005 272.979 95.7261 272.64 cv
94.9517 272.301 94.123 272.132 93.2397 272.132 cv
cp
99.6099 286.777 mo
99.6099 286.415 li
98.7026 287.141 97.7163 287.697 96.6519 288.084 cv
95.5869 288.472 94.4497 288.665 93.2397 288.665 cv
90.4326 288.665 88.0371 287.673 86.0527 285.688 cv
84.0684 283.704 83.0767 281.309 83.0767 278.502 cv
83.0767 275.694 84.0684 273.299 86.0527 271.314 cv
88.0371 269.33 90.4326 268.338 93.2397 268.338 cv
96.0225 268.338 98.4185 269.33 100.427 271.314 cv
102.411 273.299 103.403 275.694 103.403 278.502 cv
103.403 286.777 li
103.403 287.298 103.219 287.742 102.85 288.111 cv
102.48 288.48 102.036 288.665 101.516 288.665 cv
100.983 288.665 100.533 288.48 100.164 288.111 cv
99.7944 287.742 99.6099 287.298 99.6099 286.777 cv
cp
f
107.993 286.76 mo
107.993 270.244 li
107.993 269.712 108.177 269.261 108.546 268.892 cv
108.915 268.522 109.36 268.338 109.88 268.338 cv
110.4 268.338 110.845 268.522 111.214 268.892 cv
111.583 269.261 111.773 269.712 111.786 270.244 cv
111.786 286.76 li
111.773 287.292 111.583 287.742 111.214 288.111 cv
110.845 288.48 110.4 288.665 109.88 288.665 cv
109.36 288.665 108.915 288.48 108.546 288.111 cv
108.177 287.742 107.993 287.292 107.993 286.76 cv
cp
112.112 264.727 mo
112.112 265.344 111.895 265.87 111.459 266.306 cv
111.023 266.741 110.497 266.959 109.88 266.959 cv
109.263 266.959 108.737 266.741 108.301 266.306 cv
107.866 265.87 107.648 265.344 107.648 264.727 cv
107.648 264.109 107.866 263.583 108.301 263.147 cv
108.737 262.712 109.263 262.494 109.88 262.494 cv
110.497 262.494 111.023 262.712 111.459 263.147 cv
111.895 263.583 112.112 264.109 112.112 264.727 cv
cp
f
120.077 270.226 mo
120.077 270.589 li
120.985 269.862 121.971 269.307 123.036 268.919 cv
124.1 268.532 125.237 268.338 126.447 268.338 cv
126.98 268.338 127.551 268.375 128.163 268.447 cv
128.773 268.52 129.336 268.649 129.851 268.837 cv
130.365 269.025 130.791 269.282 131.13 269.608 cv
131.469 269.936 131.638 270.359 131.638 270.879 cv
131.638 271.146 131.586 271.394 131.484 271.623 cv
131.381 271.854 131.245 272.056 131.076 272.231 cv
130.906 272.406 130.706 272.543 130.477 272.64 cv
130.247 272.736 129.999 272.785 129.732 272.785 cv
129.502 272.785 129.236 272.719 128.934 272.585 cv
128.172 272.283 127.343 272.132 126.447 272.132 cv
125.564 272.132 124.735 272.298 123.961 272.631 cv
123.187 272.964 122.512 273.417 121.938 273.991 cv
121.363 274.566 120.909 275.241 120.576 276.016 cv
120.243 276.79 120.077 277.618 120.077 278.502 cv
120.077 286.777 li
120.077 287.298 119.893 287.742 119.524 288.111 cv
119.154 288.48 118.71 288.665 118.19 288.665 cv
117.657 288.665 117.207 288.48 116.837 288.111 cv
116.468 287.742 116.284 287.298 116.284 286.777 cv
116.284 270.226 li
116.284 269.706 116.468 269.261 116.837 268.892 cv
117.207 268.522 117.657 268.338 118.19 268.338 cv
118.71 268.338 119.154 268.522 119.524 268.892 cv
119.893 269.261 120.077 269.706 120.077 270.226 cv
cp
f
150.728 276.614 mo
150.523 275.949 150.216 275.341 149.812 274.79 cv
149.406 274.24 148.934 273.768 148.396 273.375 cv
147.857 272.981 147.265 272.676 146.617 272.458 cv
145.97 272.24 145.302 272.132 144.612 272.132 cv
143.922 272.132 143.25 272.24 142.597 272.458 cv
141.944 272.676 141.345 272.981 140.801 273.375 cv
140.256 273.768 139.784 274.24 139.385 274.79 cv
138.986 275.341 138.689 275.949 138.496 276.614 cv
150.728 276.614 li
cp
149.912 282.948 mo
150.456 282.948 150.907 283.127 151.262 283.483 cv
151.621 283.841 151.799 284.291 151.799 284.836 cv
151.799 285.368 151.618 285.822 151.254 286.197 cv
149.379 287.843 147.165 288.665 144.612 288.665 cv
141.805 288.665 139.409 287.673 137.425 285.688 cv
135.44 283.704 134.449 281.309 134.449 278.502 cv
134.449 275.694 135.44 273.299 137.425 271.314 cv
139.409 269.33 141.805 268.338 144.612 268.338 cv
147.395 268.338 149.791 269.33 151.799 271.314 cv
152.791 272.295 153.534 273.387 154.03 274.591 cv
154.526 275.795 154.774 277.099 154.774 278.502 cv
154.774 279.046 154.591 279.497 154.221 279.854 cv
153.853 280.211 153.401 280.389 152.871 280.389 cv
138.496 280.389 li
138.701 281.055 139.004 281.663 139.403 282.213 cv
139.802 282.764 140.271 283.235 140.81 283.629 cv
141.348 284.022 141.941 284.327 142.588 284.545 cv
143.235 284.763 143.91 284.872 144.612 284.872 cv
145.411 284.872 146.143 284.751 146.808 284.509 cv
147.473 284.267 148.09 283.904 148.659 283.42 cv
149.022 283.118 149.439 282.96 149.912 282.948 cv
cp
f
175.372 288.665 mo
174.828 288.665 174.379 288.483 174.029 288.12 cv
173.678 287.758 173.496 287.316 173.484 286.796 cv
172.649 287.449 171.766 287.924 170.834 288.221 cv
169.904 288.517 168.892 288.665 167.803 288.665 cv
166.508 288.665 165.287 288.414 164.137 287.912 cv
162.988 287.41 161.984 286.729 161.125 285.87 cv
160.266 285.011 159.584 284.007 159.083 282.857 cv
158.581 281.708 158.33 280.486 158.33 279.191 cv
158.33 270.226 li
158.33 269.706 158.515 269.261 158.883 268.892 cv
159.253 268.522 159.704 268.338 160.237 268.338 cv
160.756 268.338 161.2 268.522 161.57 268.892 cv
161.938 269.261 162.124 269.706 162.124 270.226 cv
162.124 279.191 li
162.124 279.978 162.271 280.716 162.569 281.405 cv
162.864 282.095 163.27 282.697 163.784 283.211 cv
164.298 283.726 164.9 284.131 165.59 284.428 cv
166.279 284.724 167.017 284.872 167.803 284.872 cv
168.579 284.872 169.311 284.724 170 284.428 cv
170.69 284.131 171.295 283.723 171.815 283.202 cv
172.334 282.683 172.743 282.08 173.041 281.396 cv
173.336 280.713 173.484 279.978 173.484 279.191 cv
173.484 270.226 li
173.484 269.706 173.669 269.261 174.038 268.892 cv
174.408 268.522 174.858 268.338 175.391 268.338 cv
175.911 268.338 176.354 268.522 176.724 268.892 cv
177.092 269.261 177.278 269.706 177.278 270.226 cv
177.278 286.777 li
177.278 287.298 177.092 287.742 176.724 288.111 cv
176.354 288.48 175.904 288.665 175.372 288.665 cv
cp
f
184.499 278.991 mo
183.361 278.556 182.562 278.108 182.103 277.648 cv
182.121 277.648 li
181.201 276.717 180.741 275.622 180.741 274.363 cv
180.741 273.444 180.987 272.612 181.477 271.868 cv
181.966 271.124 182.604 270.492 183.391 269.972 cv
184.178 269.451 185.063 269.049 186.049 268.765 cv
187.037 268.48 188.024 268.338 189.017 268.338 cv
192.042 268.338 194.637 269.555 196.803 271.986 cv
197.057 272.301 197.184 272.682 197.184 273.13 cv
197.184 273.674 197.006 274.125 196.649 274.481 cv
196.292 274.839 195.841 275.017 195.296 275.017 cv
194.909 275.017 194.58 274.908 194.308 274.69 cv
194.036 274.473 193.773 274.236 193.517 273.982 cv
192.284 272.748 190.783 272.132 189.017 272.132 cv
187.274 272.132 185.883 272.664 184.842 273.729 cv
184.649 273.922 184.553 274.188 184.553 274.527 cv
184.553 274.866 184.709 275.096 185.024 275.217 cv
193.517 278.012 li
194.704 278.472 195.502 278.919 195.915 279.354 cv
195.895 279.354 li
196.815 280.286 197.274 281.382 197.274 282.64 cv
197.274 283.571 197.03 284.406 196.541 285.145 cv
196.049 285.882 195.412 286.515 194.625 287.041 cv
193.838 287.567 192.955 287.97 191.975 288.248 cv
190.996 288.526 190.008 288.665 189.017 288.665 cv
185.967 288.665 183.374 287.461 181.232 285.054 cv
180.965 284.702 180.833 284.31 180.833 283.874 cv
180.833 283.329 181.011 282.879 181.367 282.521 cv
181.724 282.165 182.174 281.986 182.72 281.986 cv
183.12 281.986 183.458 282.104 183.736 282.34 cv
184.013 282.576 184.267 282.803 184.499 283.021 cv
185.733 284.255 187.238 284.872 189.017 284.872 cv
190.747 284.872 192.138 284.327 193.191 283.238 cv
193.374 283.033 193.463 282.785 193.463 282.494 cv
193.463 282.156 193.299 281.92 192.974 281.786 cv
184.499 278.991 li
cp
f
216.983 276.614 mo
216.776 275.949 216.47 275.341 216.066 274.79 cv
215.661 274.24 215.188 273.768 214.65 273.375 cv
214.112 272.981 213.518 272.676 212.872 272.458 cv
212.224 272.24 211.555 272.132 210.866 272.132 cv
210.176 272.132 209.504 272.24 208.852 272.458 cv
208.199 272.676 207.599 272.981 207.054 273.375 cv
206.511 273.768 206.04 274.24 205.64 274.79 cv
205.241 275.341 204.944 275.949 204.75 276.614 cv
216.983 276.614 li
cp
216.167 282.948 mo
216.709 282.948 217.162 283.127 217.517 283.483 cv
217.875 283.841 218.053 284.291 218.053 284.836 cv
218.053 285.368 217.872 285.822 217.508 286.197 cv
215.632 287.843 213.419 288.665 210.866 288.665 cv
208.059 288.665 205.663 287.673 203.679 285.688 cv
201.695 283.704 200.704 281.309 200.704 278.502 cv
200.704 275.694 201.695 273.299 203.679 271.314 cv
205.663 269.33 208.059 268.338 210.866 268.338 cv
213.649 268.338 216.045 269.33 218.053 271.314 cv
219.045 272.295 219.79 273.387 220.286 274.591 cv
220.782 275.795 221.029 277.099 221.029 278.502 cv
221.029 279.046 220.845 279.497 220.477 279.854 cv
220.107 280.211 219.657 280.389 219.125 280.389 cv
204.75 280.389 li
204.956 281.055 205.257 281.663 205.658 282.213 cv
206.057 282.764 206.525 283.235 207.065 283.629 cv
207.603 284.022 208.195 284.327 208.842 284.545 cv
209.491 284.763 210.165 284.872 210.866 284.872 cv
211.666 284.872 212.396 284.751 213.062 284.509 cv
213.728 284.267 214.345 283.904 214.913 283.42 cv
215.276 283.118 215.695 282.96 216.167 282.948 cv
cp
f
228.304 278.991 mo
227.167 278.556 226.37 278.108 225.909 277.648 cv
225.926 277.648 li
225.007 276.717 224.547 275.622 224.547 274.363 cv
224.547 273.444 224.792 272.612 225.283 271.868 cv
225.773 271.124 226.412 270.492 227.198 269.972 cv
227.984 269.451 228.871 269.049 229.857 268.765 cv
230.842 268.48 231.831 268.338 232.825 268.338 cv
235.849 268.338 238.444 269.555 240.609 271.986 cv
240.863 272.301 240.991 272.682 240.991 273.13 cv
240.991 273.674 240.812 274.125 240.455 274.481 cv
240.099 274.839 239.648 275.017 239.104 275.017 cv
238.716 275.017 238.387 274.908 238.114 274.69 cv
237.841 274.473 237.579 274.236 237.325 273.982 cv
236.091 272.748 234.59 272.132 232.825 272.132 cv
231.081 272.132 229.691 272.664 228.649 273.729 cv
228.456 273.922 228.359 274.188 228.359 274.527 cv
228.359 274.866 228.516 275.096 228.831 275.217 cv
237.325 278.012 li
238.511 278.472 239.308 278.919 239.72 279.354 cv
239.703 279.354 li
240.621 280.286 241.081 281.382 241.081 282.64 cv
241.081 283.571 240.836 284.406 240.346 285.145 cv
239.857 285.882 239.217 286.515 238.432 287.041 cv
237.645 287.567 236.762 287.97 235.783 288.248 cv
234.801 288.526 233.816 288.665 232.825 288.665 cv
229.774 288.665 227.179 287.461 225.038 285.054 cv
224.771 284.702 224.638 284.31 224.638 283.874 cv
224.638 283.329 224.817 282.879 225.174 282.521 cv
225.53 282.165 225.982 281.986 226.526 281.986 cv
226.925 281.986 227.263 282.104 227.542 282.34 cv
227.82 282.576 228.075 282.803 228.304 283.021 cv
229.54 284.255 231.045 284.872 232.825 284.872 cv
234.553 284.872 235.945 284.327 236.999 283.238 cv
237.179 283.033 237.27 282.785 237.27 282.494 cv
237.27 282.156 237.107 281.92 236.78 281.786 cv
228.304 278.991 li
cp
f
74.3521 321.986 mo
74.8843 321.986 75.3379 322.174 75.7134 322.549 cv
76.0884 322.924 76.2759 323.378 76.2759 323.91 cv
76.2759 324.442 76.0884 324.896 75.7134 325.271 cv
75.3379 325.646 74.8843 325.834 74.3521 325.834 cv
57.5645 325.834 li
57.2856 325.834 57.0317 325.786 56.8022 325.688 cv
56.5723 325.592 56.3691 325.456 56.1938 325.28 cv
56.0186 325.105 55.8823 324.902 55.7856 324.673 cv
55.689 324.442 55.6406 324.188 55.6406 323.91 cv
55.6406 298.72 li
55.6406 298.453 55.689 298.202 55.7856 297.967 cv
55.8823 297.73 56.0186 297.524 56.1938 297.35 cv
56.3691 297.174 56.5723 297.038 56.8022 296.94 cv
57.0317 296.844 57.2856 296.796 57.5645 296.796 cv
74.3521 296.796 li
74.8843 296.796 75.3379 296.983 75.7134 297.358 cv
76.0884 297.733 76.2759 298.188 76.2759 298.72 cv
76.2759 299.252 76.0884 299.706 75.7134 300.081 cv
75.3379 300.456 74.8843 300.644 74.3521 300.644 cv
59.4883 300.644 li
59.4883 309.391 li
70.1597 309.391 li
70.6919 309.391 71.1455 309.579 71.521 309.954 cv
71.8955 310.329 72.0835 310.782 72.0835 311.314 cv
72.0835 311.848 71.8955 312.301 71.521 312.676 cv
71.1455 313.051 70.6919 313.238 70.1597 313.238 cv
59.4883 313.238 li
59.4883 321.986 li
74.3521 321.986 li
cp
f
93.8779 320.081 mo
94.4224 320.081 94.8726 320.26 95.23 320.616 cv
95.5864 320.974 95.7651 321.424 95.7651 321.969 cv
95.7651 322.501 95.5654 322.967 95.166 323.366 cv
93.2905 325.012 91.0825 325.834 88.542 325.834 cv
85.7349 325.834 83.3394 324.842 81.355 322.857 cv
79.3706 320.873 78.3784 318.478 78.3784 315.671 cv
78.3784 312.863 79.3706 310.468 81.355 308.483 cv
83.3394 306.499 85.7349 305.507 88.542 305.507 cv
91.0947 305.507 93.3027 306.33 95.166 307.976 cv
95.6021 308.363 95.8198 308.841 95.8198 309.409 cv
95.8198 309.954 95.6411 310.407 95.2842 310.771 cv
94.9272 311.134 94.4766 311.314 93.9321 311.314 cv
93.4722 311.314 93.061 311.17 92.6982 310.879 cv
92.0811 310.359 91.4336 309.966 90.7559 309.699 cv
90.0781 309.434 89.3403 309.301 88.542 309.301 cv
87.6587 309.301 86.8296 309.467 86.0557 309.8 cv
85.2813 310.133 84.6035 310.586 84.0229 311.16 cv
83.4419 311.735 82.9854 312.41 82.6523 313.185 cv
82.3198 313.959 82.1533 314.787 82.1533 315.671 cv
82.1533 316.554 82.3198 317.383 82.6523 318.157 cv
82.9854 318.932 83.4419 319.606 84.0229 320.181 cv
84.6035 320.756 85.2813 321.209 86.0557 321.542 cv
86.8296 321.875 87.6587 322.041 88.542 322.041 cv
89.3403 322.041 90.0781 321.911 90.7559 321.65 cv
91.4336 321.391 92.0747 321 92.6797 320.48 cv
93.0186 320.226 93.418 320.093 93.8779 320.081 cv
cp
f
99.2295 323.946 mo
99.2295 298.701 li
99.2295 298.169 99.4077 297.719 99.7646 297.35 cv
100.122 296.98 100.572 296.796 101.117 296.796 cv
101.661 296.796 102.112 296.98 102.469 297.35 cv
102.826 297.719 103.004 298.169 103.004 298.701 cv
103.004 322.041 li
103.875 322.041 li
104.396 322.041 104.84 322.226 105.209 322.595 cv
105.579 322.964 105.763 323.414 105.763 323.946 cv
105.763 324.467 105.579 324.911 105.209 325.28 cv
104.84 325.649 104.396 325.834 103.875 325.834 cv
101.099 325.834 li
100.579 325.834 100.137 325.649 99.7739 325.28 cv
99.4111 324.911 99.2295 324.467 99.2295 323.946 cv
cp
f
118.955 309.301 mo
118.059 309.301 117.224 309.47 116.45 309.809 cv
115.676 310.147 115.004 310.604 114.436 311.179 cv
113.867 311.754 113.416 312.428 113.083 313.202 cv
112.75 313.977 112.584 314.8 112.584 315.671 cv
112.584 316.542 112.75 317.364 113.083 318.139 cv
113.416 318.913 113.867 319.588 114.436 320.162 cv
115.004 320.737 115.676 321.194 116.45 321.532 cv
117.224 321.871 118.059 322.041 118.955 322.041 cv
119.838 322.041 120.667 321.871 121.441 321.532 cv
122.215 321.194 122.89 320.734 123.465 320.153 cv
124.039 319.572 124.493 318.898 124.826 318.13 cv
125.159 317.361 125.325 316.542 125.325 315.671 cv
125.325 314.8 125.159 313.979 124.826 313.211 cv
124.493 312.443 124.039 311.769 123.465 311.188 cv
122.89 310.607 122.215 310.147 121.441 309.809 cv
120.667 309.47 119.838 309.301 118.955 309.301 cv
cp
125.325 323.946 mo
125.325 323.584 li
124.417 324.31 123.431 324.866 122.367 325.253 cv
121.302 325.641 120.165 325.834 118.955 325.834 cv
116.147 325.834 113.752 324.842 111.768 322.857 cv
109.783 320.873 108.792 318.478 108.792 315.671 cv
108.792 312.863 109.783 310.468 111.768 308.483 cv
113.752 306.499 116.147 305.507 118.955 305.507 cv
121.737 305.507 124.133 306.499 126.142 308.483 cv
128.126 310.468 129.118 312.863 129.118 315.671 cv
129.118 323.946 li
129.118 324.467 128.934 324.911 128.564 325.28 cv
128.195 325.649 127.75 325.834 127.23 325.834 cv
126.698 325.834 126.248 325.649 125.878 325.28 cv
125.509 324.911 125.325 324.467 125.325 323.946 cv
cp
f
133.708 323.929 mo
133.708 307.413 li
133.708 306.881 133.892 306.43 134.261 306.061 cv
134.63 305.691 135.075 305.507 135.595 305.507 cv
136.115 305.507 136.56 305.691 136.929 306.061 cv
137.298 306.43 137.488 306.881 137.5 307.413 cv
137.5 323.929 li
137.488 324.461 137.298 324.911 136.929 325.28 cv
136.56 325.649 136.115 325.834 135.595 325.834 cv
135.075 325.834 134.63 325.649 134.261 325.28 cv
133.892 324.911 133.708 324.461 133.708 323.929 cv
cp
137.827 301.896 mo
137.827 302.513 137.609 303.039 137.174 303.475 cv
136.738 303.91 136.212 304.128 135.595 304.128 cv
134.978 304.128 134.452 303.91 134.016 303.475 cv
133.581 303.039 133.363 302.513 133.363 301.896 cv
133.363 301.278 133.581 300.752 134.016 300.316 cv
134.452 299.881 134.978 299.663 135.595 299.663 cv
136.212 299.663 136.738 299.881 137.174 300.316 cv
137.609 300.752 137.827 301.278 137.827 301.896 cv
cp
f
145.792 307.395 mo
145.792 307.758 li
146.7 307.031 147.686 306.476 148.75 306.088 cv
149.815 305.701 150.953 305.507 152.163 305.507 cv
152.695 305.507 153.266 305.544 153.878 305.616 cv
154.487 305.688 155.051 305.818 155.566 306.006 cv
156.079 306.194 156.507 306.451 156.845 306.777 cv
157.183 307.104 157.353 307.528 157.353 308.048 cv
157.353 308.314 157.301 308.563 157.199 308.792 cv
157.096 309.022 156.959 309.225 156.791 309.4 cv
156.621 309.575 156.42 309.712 156.191 309.809 cv
155.961 309.905 155.713 309.954 155.449 309.954 cv
155.217 309.954 154.95 309.888 154.649 309.754 cv
153.886 309.452 153.058 309.301 152.163 309.301 cv
151.279 309.301 150.45 309.467 149.676 309.8 cv
148.901 310.133 148.227 310.586 147.652 311.16 cv
147.078 311.735 146.624 312.41 146.291 313.185 cv
145.958 313.959 145.792 314.787 145.792 315.671 cv
145.792 323.946 li
145.792 324.467 145.607 324.911 145.239 325.28 cv
144.869 325.649 144.425 325.834 143.905 325.834 cv
143.372 325.834 142.921 325.649 142.552 325.28 cv
142.183 324.911 141.999 324.467 141.999 323.946 cv
141.999 307.395 li
141.999 306.875 142.183 306.43 142.552 306.061 cv
142.921 305.691 143.372 305.507 143.905 305.507 cv
144.425 305.507 144.869 305.691 145.239 306.061 cv
145.607 306.43 145.792 306.875 145.792 307.395 cv
cp
f
176.444 313.783 mo
176.237 313.118 175.932 312.51 175.528 311.959 cv
175.121 311.409 174.649 310.937 174.112 310.544 cv
173.574 310.15 172.979 309.845 172.333 309.627 cv
171.686 309.409 171.016 309.301 170.328 309.301 cv
169.637 309.301 168.966 309.409 168.312 309.627 cv
167.659 309.845 167.061 310.15 166.516 310.544 cv
165.971 310.937 165.5 311.409 165.1 311.959 cv
164.701 312.51 164.404 313.118 164.211 313.783 cv
176.444 313.783 li
cp
175.627 320.117 mo
176.17 320.117 176.622 320.296 176.979 320.652 cv
177.336 321.01 177.515 321.46 177.515 322.005 cv
177.515 322.537 177.333 322.991 176.97 323.366 cv
175.094 325.012 172.879 325.834 170.328 325.834 cv
167.52 325.834 165.125 324.842 163.141 322.857 cv
161.157 320.873 160.165 318.478 160.165 315.671 cv
160.165 312.863 161.157 310.468 163.141 308.483 cv
165.125 306.499 167.52 305.507 170.328 305.507 cv
173.111 305.507 175.506 306.499 177.515 308.483 cv
178.506 309.464 179.25 310.556 179.746 311.76 cv
180.242 312.964 180.491 314.268 180.491 315.671 cv
180.491 316.215 180.305 316.666 179.937 317.022 cv
179.567 317.38 179.117 317.558 178.584 317.558 cv
164.211 317.558 li
164.417 318.224 164.719 318.832 165.118 319.382 cv
165.517 319.933 165.987 320.404 166.525 320.798 cv
167.063 321.191 167.657 321.496 168.303 321.714 cv
168.951 321.932 169.625 322.041 170.328 322.041 cv
171.125 322.041 171.858 321.92 172.524 321.678 cv
173.188 321.436 173.805 321.073 174.375 320.589 cv
174.737 320.287 175.155 320.129 175.627 320.117 cv
cp
f
201.086 325.834 mo
200.542 325.834 200.095 325.652 199.745 325.289 cv
199.392 324.927 199.211 324.485 199.2 323.965 cv
198.364 324.618 197.482 325.093 196.549 325.39 cv
195.618 325.686 194.608 325.834 193.518 325.834 cv
192.224 325.834 191.002 325.583 189.853 325.081 cv
188.704 324.579 187.7 323.898 186.84 323.039 cv
185.981 322.18 185.299 321.176 184.798 320.026 cv
184.295 318.877 184.045 317.655 184.045 316.36 cv
184.045 307.395 li
184.045 306.875 184.229 306.43 184.599 306.061 cv
184.967 305.691 185.417 305.507 185.951 305.507 cv
186.47 305.507 186.916 305.691 187.286 306.061 cv
187.654 306.43 187.837 306.875 187.837 307.395 cv
187.837 316.36 li
187.837 317.146 187.987 317.885 188.283 318.574 cv
188.579 319.264 188.984 319.866 189.5 320.38 cv
190.012 320.895 190.616 321.3 191.304 321.597 cv
191.995 321.893 192.733 322.041 193.518 322.041 cv
194.292 322.041 195.025 321.893 195.715 321.597 cv
196.404 321.3 197.01 320.892 197.529 320.371 cv
198.049 319.852 198.458 319.249 198.754 318.565 cv
199.05 317.882 199.2 317.146 199.2 316.36 cv
199.2 307.395 li
199.2 306.875 199.383 306.43 199.753 306.061 cv
200.122 305.691 200.573 305.507 201.106 305.507 cv
201.625 305.507 202.07 305.691 202.44 306.061 cv
202.808 306.43 202.992 306.875 202.992 307.395 cv
202.992 323.946 li
202.992 324.467 202.808 324.911 202.44 325.28 cv
202.07 325.649 201.62 325.834 201.086 325.834 cv
cp
f
210.232 307.395 mo
210.232 307.758 li
211.138 307.031 212.125 306.476 213.19 306.088 cv
214.253 305.701 215.391 305.507 216.602 305.507 cv
217.133 305.507 217.705 305.544 218.316 305.616 cv
218.926 305.688 219.491 305.818 220.003 306.006 cv
220.518 306.194 220.945 306.451 221.284 306.777 cv
221.622 307.104 221.792 307.528 221.792 308.048 cv
221.792 308.314 221.741 308.563 221.637 308.792 cv
221.536 309.022 221.399 309.225 221.229 309.4 cv
221.059 309.575 220.861 309.712 220.629 309.809 cv
220.4 309.905 220.153 309.954 219.887 309.954 cv
219.657 309.954 219.39 309.888 219.087 309.754 cv
218.325 309.452 217.496 309.301 216.602 309.301 cv
215.717 309.301 214.888 309.467 214.116 309.8 cv
213.341 310.133 212.667 310.586 212.091 311.16 cv
211.516 311.735 211.062 312.41 210.731 313.185 cv
210.398 313.959 210.232 314.787 210.232 315.671 cv
210.232 323.946 li
210.232 324.467 210.046 324.911 209.678 325.28 cv
209.308 325.649 208.863 325.834 208.344 325.834 cv
207.811 325.834 207.361 325.649 206.991 325.28 cv
206.622 324.911 206.437 324.467 206.437 323.946 cv
206.437 307.395 li
206.437 306.875 206.622 306.43 206.991 306.061 cv
207.361 305.691 207.811 305.507 208.344 305.507 cv
208.863 305.507 209.308 305.691 209.678 306.061 cv
210.046 306.43 210.232 306.875 210.232 307.395 cv
cp
f
228.305 316.16 mo
227.167 315.725 226.371 315.277 225.911 314.817 cv
225.928 314.817 li
225.008 313.886 224.549 312.791 224.549 311.532 cv
224.549 310.613 224.794 309.781 225.284 309.037 cv
225.774 308.293 226.412 307.661 227.199 307.141 cv
227.985 306.62 228.871 306.218 229.858 305.934 cv
230.844 305.649 231.833 305.507 232.825 305.507 cv
235.849 305.507 238.445 306.724 240.61 309.155 cv
240.864 309.47 240.992 309.851 240.992 310.299 cv
240.992 310.843 240.813 311.294 240.456 311.65 cv
240.099 312.008 239.649 312.186 239.104 312.186 cv
238.716 312.186 238.387 312.077 238.116 311.859 cv
237.842 311.642 237.58 311.405 237.325 311.151 cv
236.091 309.917 234.591 309.301 232.825 309.301 cv
231.083 309.301 229.691 309.833 228.65 310.897 cv
228.458 311.091 228.36 311.357 228.36 311.696 cv
228.36 312.035 228.517 312.265 228.833 312.386 cv
237.325 315.181 li
238.512 315.641 239.309 316.088 239.721 316.523 cv
239.704 316.523 li
240.622 317.455 241.083 318.551 241.083 319.809 cv
241.083 320.74 240.837 321.575 240.348 322.313 cv
239.858 323.051 239.219 323.684 238.433 324.21 cv
237.646 324.736 236.762 325.139 235.783 325.417 cv
234.803 325.695 233.816 325.834 232.825 325.834 cv
229.775 325.834 227.18 324.63 225.04 322.223 cv
224.773 321.871 224.64 321.479 224.64 321.043 cv
224.64 320.498 224.819 320.048 225.174 319.69 cv
225.532 319.334 225.983 319.155 226.528 319.155 cv
226.926 319.155 227.265 319.273 227.542 319.509 cv
227.821 319.745 228.075 319.972 228.305 320.189 cv
229.541 321.424 231.045 322.041 232.825 322.041 cv
234.554 322.041 235.946 321.496 237 320.407 cv
237.18 320.202 237.271 319.954 237.271 319.663 cv
237.271 319.325 237.108 319.089 236.782 318.955 cv
228.305 316.16 li
cp
f
261.903 363.794 mo
261.903 365.478 264.729 367.806 266.454 367.806 cv
267.077 367.806 267.534 367.598 267.534 366.828 cv
267.534 365.811 266.787 364.771 265.872 363.898 cv
265.062 363.088 264.458 362.464 263.274 362.464 cv
262.484 362.464 261.903 362.9 261.903 363.773 cv
261.903 363.794 li
cp
256.893 362.423 mo
256.791 362.631 256.52 362.714 256.187 362.714 cv
255.667 362.714 255.294 362.173 255.294 361.467 cv
255.294 360.781 255.75 360.428 256.25 360.428 cv
256.956 360.49 li
267.659 360.49 li
267.721 360.386 267.928 360.22 268.178 360.22 cv
268.824 360.22 269.051 360.614 269.051 361.487 cv
269.051 362.194 268.782 362.526 268.22 362.526 cv
268.012 362.526 267.825 362.526 267.742 362.423 cv
266.308 362.423 li
267.887 363.441 269.3 365.665 269.3 367.493 cv
269.3 368.72 268.47 369.779 266.849 369.779 cv
263.586 369.779 260.324 366.454 260.324 363.815 cv
260.324 363.233 260.426 362.797 260.675 362.423 cv
256.893 362.423 li
cp
f
261.279 352.63 mo
261.279 353.814 262.234 354.937 263.586 355.561 cv
262.941 351.882 262.629 351.362 262.338 351.362 cv
261.84 351.362 261.279 351.716 261.279 352.609 cv
261.279 352.63 li
cp
259.7 352.547 mo
259.7 350.198 261.445 349.513 262.256 349.513 cv
263.191 349.513 264.043 350.157 264.895 354.979 cv
265.062 355.935 li
265.393 356.038 265.767 356.08 266.183 356.08 cv
267.223 356.08 267.639 355.539 267.639 354.646 cv
267.639 353.212 266.807 352.007 266.246 351.632 cv
265.767 351.694 265.331 351.279 265.331 350.593 cv
265.331 349.824 265.83 349.658 266.246 349.658 cv
266.829 349.658 269.258 351.466 269.258 354.874 cv
269.258 356.641 268.511 357.992 266.349 357.992 cv
262.484 357.992 259.7 355.27 259.7 352.567 cv
259.7 352.547 li
cp
f
267.305 340.406 mo
267.454 340.28 267.727 340.133 268.106 340.133 cv
268.737 340.133 269.075 340.807 269.075 341.564 cv
269.053 342.386 268.779 342.786 268.148 342.786 cv
267.684 342.786 267.348 342.639 267.116 342.428 cv
263.304 342.428 li
263.074 342.659 262.672 342.786 262.336 342.786 cv
262.02 342.786 261.514 342.617 261.303 342.428 cv
258.167 342.428 li
258.104 342.597 257.62 342.849 257.241 342.849 cv
256.84 342.849 256.483 342.723 256.44 342.428 cv
255.746 342.47 255.408 341.733 255.408 341.102 cv
255.408 340.575 255.704 340.217 256.125 340.386 cv
255.428 335.563 li
255.387 335.247 255.198 335.079 255.198 334.784 cv
255.198 334.132 255.534 333.604 256.103 333.626 cv
257.071 333.626 257.387 333.942 257.387 334.763 cv
257.387 335.058 257.325 335.29 257.199 335.542 cv
257.915 340.406 li
261.241 340.406 li
260.587 335.9 li
260.441 335.731 260.315 335.437 260.315 334.995 cv
260.315 334.595 260.924 334.216 261.346 334.216 cv
262.252 334.216 262.525 334.531 262.525 335.227 cv
262.525 335.479 262.503 335.711 262.399 335.964 cv
263.03 340.406 li
267.305 340.406 li
cp
f
261.136 329.097 mo
260.441 325.812 259.387 323.116 257.872 323.116 cv
257.366 323.116 257.05 323.643 257.05 324.484 cv
257.05 325.664 257.345 327.307 258.187 329.097 cv
261.136 329.097 li
cp
267.917 331.35 mo
267.705 331.35 267.412 331.181 267.242 331.075 cv
259.114 331.075 li
259.157 331.139 259.157 331.181 259.157 331.266 cv
259.157 331.476 258.904 331.729 258.357 331.729 cv
257.639 331.729 257.303 331.434 257.176 331.075 cv
256.734 331.075 li
256.586 331.139 256.334 331.223 256.125 331.223 cv
255.513 331.223 255.135 330.634 255.135 330.022 cv
255.135 329.37 255.64 328.864 256.356 329.097 cv
256.566 329.097 li
255.766 327.307 255.387 325.622 255.387 323.938 cv
255.387 322.231 256.187 321.011 257.577 321.011 cv
259.704 321.011 261.43 323.369 262.167 327.644 cv
267.095 320.821 li
266.841 320.126 267.432 319.452 267.937 319.452 cv
268.758 319.452 269.179 320.104 269.179 320.716 cv
269.179 321.115 268.991 321.516 268.632 321.705 cv
263.22 329.097 li
267.327 329.097 li
267.454 329.033 267.727 328.907 267.979 328.907 cv
268.8 328.907 269.033 329.644 269.033 330.359 cv
269.033 331.055 268.484 331.35 267.937 331.35 cv
267.917 331.35 li
cp
f
262.273 310.773 mo
258.399 312.479 li
262.525 314.458 li
262.273 310.773 li
cp
264.188 315.279 mo
266.442 316.416 266.883 316.647 267.22 316.711 cv
267.516 316.753 267.875 316.732 268.148 316.732 cv
268.612 316.732 269.033 317.006 269.033 317.975 cv
269.033 318.754 268.569 319.069 268.063 319.069 cv
267.6 319.069 266.841 318.669 265.284 317.911 cv
258.083 314.247 li
257.283 313.806 256.756 313.595 256.334 313.511 cv
255.598 313.531 254.924 313.068 254.924 312.289 cv
254.924 311.573 255.366 311.194 255.724 311.194 cv
256.083 311.194 256.208 311.342 256.503 311.342 cv
257.157 311.342 260.567 309.488 261.725 308.983 cv
264.905 307.425 267.053 306.456 267.791 306.456 cv
268.569 306.456 269.033 306.94 269.033 307.698 cv
269.033 308.352 268.695 308.814 268.231 308.814 cv
267.895 308.814 267.663 308.688 267.474 308.688 cv
267.158 308.688 266.462 308.899 263.852 310.078 cv
264.188 315.279 li
cp
f
257.029 303.947 mo
256.862 304.052 256.608 304.115 256.398 304.115 cv
255.871 304.115 255.345 303.758 255.345 302.957 cv
255.345 302.073 255.618 301.82 256.145 301.82 cv
256.586 301.82 257.429 301.462 258.208 301.041 cv
259.262 300.451 260.799 299.272 262 298.135 cv
263.074 297.124 264.252 296.177 264.905 295.861 cv
264.905 295.819 li
262.188 295.882 259.452 295.882 256.629 295.882 cv
256.503 295.924 256.292 296.093 256.061 296.093 cv
255.366 296.093 255.113 295.587 255.113 295.082 cv
255.113 294.492 255.387 293.84 255.913 293.84 cv
256.25 293.84 256.44 293.944 256.586 294.008 cv
267.747 294.008 li
267.875 293.902 268.042 293.755 268.316 293.755 cv
268.842 293.755 269.033 294.05 269.033 294.913 cv
269.033 295.566 268.506 295.84 267.895 296.093 cv
266.799 296.598 264.757 298.135 263.683 299.146 cv
262.315 300.431 260.735 301.631 259.704 302.094 cv
259.704 302.136 li
262.231 302.094 264.841 302.073 267.454 302.073 cv
267.579 301.988 267.811 301.862 268.084 301.862 cv
268.716 301.862 269.033 302.178 269.033 302.894 cv
269.033 303.631 268.779 304.199 268.021 304.199 cv
267.833 304.199 267.558 304.052 267.454 303.947 cv
257.029 303.947 li
cp
f
255.113 284.782 mo
255.113 282.424 256.25 280.823 257.261 280.823 cv
257.978 280.823 258.377 281.286 258.377 281.939 cv
258.377 282.529 258.104 282.803 257.536 282.929 cv
257.157 282.992 256.84 283.708 256.84 284.677 cv
256.84 287.288 260.966 289.183 263.621 289.183 cv
266.316 289.183 267.537 287.814 267.537 286.509 cv
267.537 285.225 266.716 283.813 265.874 283.203 cv
265.327 283.16 264.672 282.971 264.672 282.087 cv
264.672 281.329 265.22 280.991 265.558 280.991 cv
265.895 280.991 266.274 281.076 266.863 281.581 cv
267.853 282.508 269.327 284.571 269.305 286.782 cv
269.305 289.372 267.432 291.226 263.495 291.226 cv
260.334 291.226 255.113 288.741 255.113 284.803 cv
255.113 284.782 li
cp
f
267.178 276.062 mo
266.757 270.249 li
266.59 270.081 266.462 269.85 266.462 269.575 cv
266.462 268.859 266.989 268.396 267.454 268.396 cv
268.358 268.396 268.526 268.986 268.526 270.102 cv
268.949 276.04 li
269.137 276.209 269.305 276.63 269.305 277.24 cv
269.305 277.83 268.949 278.356 268.231 278.356 cv
267.875 278.356 267.537 278.23 267.284 278.083 cv
263.346 278.083 li
263.116 278.335 262.779 278.462 262.378 278.462 cv
261.978 278.462 261.579 278.251 261.409 278.083 cv
258.041 278.083 li
257.872 278.398 257.555 278.524 257.219 278.524 cv
256.82 278.524 256.545 278.398 256.398 278.209 cv
256.313 278.293 256.187 278.314 256.061 278.314 cv
255.618 278.314 255.303 277.788 255.303 277.135 cv
255.303 276.44 255.64 276.062 256.083 276.062 cv
255.64 271.05 li
255.492 270.839 255.325 270.523 255.325 270.271 cv
255.325 269.471 255.787 269.07 256.292 269.07 cv
257.029 269.07 257.536 269.555 257.536 270.292 cv
257.536 270.565 257.471 270.775 257.366 271.008 cv
257.808 276.062 li
261.346 276.062 li
260.841 272.039 li
260.694 271.829 260.545 271.555 260.545 271.281 cv
260.545 270.586 261.094 270.123 261.641 270.123 cv
262.378 270.123 262.715 270.586 262.715 271.365 cv
262.715 271.534 262.651 271.702 262.567 271.85 cv
263.094 276.062 li
267.178 276.062 li
cp
f
33.5024 341.166 mo
33.5024 357.953 li
33.5024 358.837 33.6714 359.672 34.0103 360.458 cv
34.3491 361.245 34.8091 361.932 35.3896 362.518 cv
35.9707 363.105 36.6538 363.57 37.4404 363.915 cv
38.2271 364.261 39.0679 364.433 39.9634 364.433 cv
40.8584 364.433 41.6992 364.264 42.4858 363.925 cv
43.2725 363.586 43.959 363.12 44.5459 362.527 cv
45.1328 361.935 45.5952 361.248 45.9341 360.467 cv
46.2729 359.687 46.4424 358.849 46.4424 357.953 cv
46.4424 341.166 li
46.4424 340.634 46.6299 340.18 47.0049 339.805 cv
47.3799 339.43 47.8335 339.242 48.3662 339.242 cv
48.8984 339.242 49.3521 339.43 49.7275 339.805 cv
50.1025 340.18 50.29 340.634 50.29 341.166 cv
50.29 357.953 li
50.29 358.897 50.166 359.805 49.918 360.676 cv
49.6699 361.547 49.3218 362.367 48.8745 363.135 cv
48.4268 363.903 47.8882 364.603 47.2593 365.231 cv
46.6299 365.86 45.9312 366.402 45.1631 366.855 cv
44.3945 367.31 43.5718 367.66 42.6948 367.908 cv
41.8174 368.156 40.9072 368.28 39.9634 368.28 cv
37.1079 368.28 34.6821 367.271 32.6855 365.249 cv
30.665 363.229 29.6548 360.797 29.6548 357.953 cv
29.6548 341.166 li
29.6548 340.634 29.8423 340.18 30.2173 339.805 cv
30.5923 339.43 31.0459 339.242 31.5786 339.242 cv
32.1108 339.242 32.5645 339.43 32.9395 339.805 cv
33.3145 340.18 33.5024 340.634 33.5024 341.166 cv
cp
0.15 1 0.9 0.1 cmyk
f
53.1265 366.356 mo
53.1265 341.166 li
53.1265 340.899 53.1748 340.648 53.2715 340.413 cv
53.3682 340.177 53.5044 339.971 53.6802 339.796 cv
53.8555 339.62 54.0581 339.484 54.2881 339.387 cv
54.5176 339.29 54.772 339.242 55.0503 339.242 cv
55.6187 339.242 56.1147 339.478 56.5386 339.95 cv
72.7275 360.767 li
72.7275 341.166 li
72.7275 340.634 72.9146 340.18 73.29 339.805 cv
73.665 339.43 74.1187 339.242 74.6509 339.242 cv
75.1836 339.242 75.6372 339.43 76.0122 339.805 cv
76.3872 340.18 76.5747 340.634 76.5747 341.166 cv
76.5747 366.356 li
76.5747 366.635 76.5264 366.889 76.4297 367.119 cv
76.3325 367.349 76.1968 367.552 76.0215 367.727 cv
75.8457 367.902 75.6401 368.038 75.4043 368.135 cv
75.1685 368.232 74.917 368.28 74.6509 368.28 cv
74.082 368.28 73.5923 368.057 73.1812 367.608 cv
56.9741 346.792 li
56.9741 366.356 li
56.9741 366.889 56.7861 367.343 56.4116 367.718 cv
56.0361 368.093 55.5825 368.28 55.0503 368.28 cv
54.5176 368.28 54.064 368.093 53.689 367.718 cv
53.314 367.343 53.1265 366.889 53.1265 366.356 cv
cp
f
84.5835 366.356 mo
84.5835 366.889 84.396 367.343 84.021 367.718 cv
83.646 368.093 83.1924 368.28 82.6602 368.28 cv
82.1274 368.28 81.6738 368.093 81.2988 367.718 cv
80.9238 367.343 80.7363 366.889 80.7363 366.356 cv
80.7363 341.166 li
80.7363 340.634 80.9238 340.18 81.2988 339.805 cv
81.6738 339.43 82.1274 339.242 82.6602 339.242 cv
83.1924 339.242 83.646 339.43 84.021 339.805 cv
84.396 340.18 84.5835 340.634 84.5835 341.166 cv
84.5835 366.356 li
cp
f
102.992 343.09 mo
101.492 343.09 100.122 343.35 98.8813 343.87 cv
97.6411 344.391 96.4946 345.177 95.4419 346.229 cv
94.3896 347.282 93.606 348.426 93.0918 349.659 cv
92.5776 350.894 92.3203 352.261 92.3203 353.761 cv
92.3203 356.714 93.3608 359.23 95.4419 361.312 cv
97.5229 363.393 100.04 364.433 102.992 364.433 cv
105.944 364.433 108.461 363.393 110.542 361.312 cv
112.623 359.23 113.664 356.714 113.664 353.761 cv
113.664 350.821 112.623 348.311 110.542 346.229 cv
108.449 344.137 105.932 343.09 102.992 343.09 cv
cp
117.511 353.761 mo
117.511 357.766 116.089 361.19 113.246 364.033 cv
110.415 366.864 106.997 368.28 102.992 368.28 cv
98.9751 368.28 95.5508 366.864 92.7197 364.033 cv
89.8887 361.202 88.4731 357.778 88.4731 353.761 cv
88.4731 349.757 89.8887 346.338 92.7197 343.507 cv
95.563 340.664 98.9873 339.242 102.992 339.242 cv
106.985 339.242 110.403 340.664 113.246 343.507 cv
114.674 344.935 115.742 346.496 116.45 348.189 cv
117.157 349.884 117.511 351.74 117.511 353.761 cv
cp
f
120.583 366.356 mo
120.583 341.166 li
120.583 340.899 120.632 340.648 120.729 340.413 cv
120.825 340.177 120.961 339.971 121.137 339.796 cv
121.313 339.62 121.515 339.484 121.745 339.387 cv
121.975 339.29 122.229 339.242 122.507 339.242 cv
123.076 339.242 123.572 339.478 123.996 339.95 cv
140.185 360.767 li
140.185 341.166 li
140.185 340.634 140.372 340.18 140.747 339.805 cv
141.122 339.43 141.576 339.242 142.108 339.242 cv
142.641 339.242 143.094 339.43 143.469 339.805 cv
143.844 340.18 144.032 340.634 144.032 341.166 cv
144.032 366.356 li
144.032 366.635 143.983 366.889 143.887 367.119 cv
143.79 367.349 143.654 367.552 143.479 367.727 cv
143.303 367.902 143.097 368.038 142.861 368.135 cv
142.625 368.232 142.374 368.28 142.108 368.28 cv
141.539 368.28 141.049 368.057 140.638 367.608 cv
124.431 346.792 li
124.431 366.356 li
124.431 366.889 124.243 367.343 123.869 367.718 cv
123.493 368.093 123.04 368.28 122.507 368.28 cv
121.975 368.28 121.521 368.093 121.146 367.718 cv
120.771 367.343 120.583 366.889 120.583 366.356 cv
cp
f
152.041 366.356 mo
152.041 366.889 151.853 367.343 151.478 367.718 cv
151.103 368.093 150.649 368.28 150.117 368.28 cv
149.584 368.28 149.131 368.093 148.756 367.718 cv
148.381 367.343 148.193 366.889 148.193 366.356 cv
148.193 341.166 li
148.193 340.634 148.381 340.18 148.756 339.805 cv
149.131 339.43 149.584 339.242 150.117 339.242 cv
150.649 339.242 151.103 339.43 151.478 339.805 cv
151.853 340.18 152.041 340.634 152.041 341.166 cv
152.041 366.356 li
cp
f
159.613 352.128 mo
158.717 351.305 158.091 350.461 157.736 349.596 cv
157.378 348.731 157.2 347.814 157.2 346.847 cv
157.2 345.661 157.424 344.587 157.871 343.625 cv
158.32 342.663 158.979 341.808 159.849 341.057 cv
159.831 341.057 li
161.223 339.847 162.857 339.242 164.732 339.242 cv
165.336 339.242 165.941 339.317 166.546 339.469 cv
167.151 339.62 167.736 339.85 168.298 340.158 cv
168.861 340.467 169.387 340.852 169.877 341.311 cv
170.367 341.771 170.805 342.31 171.192 342.926 cv
171.375 343.241 171.465 343.586 171.465 343.961 cv
171.465 344.239 171.417 344.493 171.32 344.723 cv
171.223 344.953 171.086 345.155 170.912 345.331 cv
170.737 345.507 170.53 345.643 170.294 345.739 cv
170.058 345.836 169.808 345.885 169.542 345.885 cv
169.299 345.885 169.083 345.849 168.896 345.775 cv
168.708 345.703 168.541 345.601 168.388 345.467 cv
168.237 345.334 168.091 345.18 167.954 345.004 cv
167.813 344.829 167.667 344.626 167.508 344.396 cv
167.217 343.973 166.821 343.655 166.32 343.443 cv
165.817 343.231 165.276 343.126 164.695 343.126 cv
164.236 343.126 163.788 343.22 163.353 343.407 cv
162.917 343.595 162.529 343.852 162.191 344.179 cv
161.852 344.505 161.576 344.893 161.366 345.34 cv
161.154 345.788 161.048 346.271 161.048 346.792 cv
161.048 347.724 161.304 348.459 161.819 348.997 cv
162.333 349.535 163.219 349.986 164.478 350.35 cv
166.608 350.954 168.276 351.789 169.487 352.854 cv
170.696 353.919 171.52 354.965 171.955 355.993 cv
172.391 357.022 172.608 358.104 172.608 359.242 cv
172.608 362.073 171.562 364.372 169.469 366.139 cv
169.487 366.139 li
167.804 367.566 165.893 368.28 163.752 368.28 cv
163.037 368.28 162.325 368.192 161.611 368.018 cv
160.896 367.842 160.209 367.585 159.549 367.246 cv
158.891 366.907 158.274 366.483 157.7 365.976 cv
157.125 365.467 156.625 364.893 156.203 364.251 cv
155.948 363.925 155.82 363.537 155.82 363.09 cv
155.82 362.823 155.87 362.572 155.966 362.337 cv
156.062 362.101 156.199 361.895 156.375 361.72 cv
156.549 361.544 156.752 361.408 156.983 361.312 cv
157.211 361.215 157.466 361.166 157.745 361.166 cv
158.458 361.166 158.997 361.463 159.359 362.056 cv
159.868 362.842 160.503 363.435 161.266 363.834 cv
162.028 364.233 162.85 364.433 163.733 364.433 cv
164.423 364.433 165.074 364.297 165.684 364.024 cv
166.295 363.752 166.829 363.387 167.282 362.927 cv
167.736 362.467 168.095 361.926 168.362 361.302 cv
168.628 360.679 168.761 360.017 168.761 359.314 cv
168.761 358.649 168.637 358.023 168.388 357.437 cv
168.141 356.85 167.663 356.269 166.955 355.694 cv
166.247 355.119 165.125 354.603 163.587 354.143 cv
161.833 353.622 160.508 352.95 159.613 352.128 cv
cp
f
195.445 343.09 mo
188.276 343.09 li
188.276 366.356 li
188.276 366.889 188.088 367.343 187.713 367.718 cv
187.337 368.093 186.885 368.28 186.353 368.28 cv
185.82 368.28 185.366 368.093 184.991 367.718 cv
184.616 367.343 184.428 366.889 184.428 366.356 cv
184.428 343.09 li
177.26 343.09 li
176.728 343.09 176.274 342.902 175.899 342.527 cv
175.524 342.152 175.336 341.698 175.336 341.166 cv
175.336 340.634 175.524 340.18 175.899 339.805 cv
176.274 339.43 176.728 339.242 177.26 339.242 cv
195.445 339.242 li
195.978 339.242 196.43 339.43 196.805 339.805 cv
197.18 340.18 197.37 340.634 197.37 341.166 cv
197.37 341.698 197.18 342.152 196.805 342.527 cv
196.43 342.902 195.978 343.09 195.445 343.09 cv
cp
f
218.936 364.433 mo
219.467 364.433 219.921 364.62 220.296 364.995 cv
220.671 365.37 220.859 365.824 220.859 366.356 cv
220.859 366.889 220.671 367.343 220.296 367.718 cv
219.921 368.093 219.467 368.28 218.936 368.28 cv
202.148 368.28 li
201.87 368.28 201.616 368.232 201.386 368.135 cv
201.155 368.038 200.954 367.902 200.778 367.727 cv
200.603 367.552 200.466 367.349 200.37 367.119 cv
200.273 366.889 200.224 366.635 200.224 366.356 cv
200.224 341.166 li
200.224 340.899 200.273 340.648 200.37 340.413 cv
200.466 340.177 200.603 339.971 200.778 339.796 cv
200.954 339.62 201.155 339.484 201.386 339.387 cv
201.616 339.29 201.87 339.242 202.148 339.242 cv
218.936 339.242 li
219.467 339.242 219.921 339.43 220.296 339.805 cv
220.671 340.18 220.859 340.634 220.859 341.166 cv
220.859 341.698 220.671 342.152 220.296 342.527 cv
219.921 342.902 219.467 343.09 218.936 343.09 cv
204.071 343.09 li
204.071 351.837 li
214.743 351.837 li
215.275 351.837 215.729 352.025 216.104 352.4 cv
216.479 352.775 216.667 353.229 216.667 353.761 cv
216.667 354.294 216.479 354.747 216.104 355.122 cv
215.729 355.497 215.275 355.685 214.743 355.685 cv
204.071 355.685 li
204.071 364.433 li
218.936 364.433 li
cp
f
227.433 352.128 mo
226.538 351.305 225.912 350.461 225.555 349.596 cv
225.199 348.731 225.02 347.814 225.02 346.847 cv
225.02 345.661 225.245 344.587 225.691 343.625 cv
226.14 342.663 226.799 341.808 227.67 341.057 cv
227.651 341.057 li
229.042 339.847 230.676 339.242 232.551 339.242 cv
233.158 339.242 233.762 339.317 234.367 339.469 cv
234.971 339.62 235.555 339.85 236.118 340.158 cv
236.68 340.467 237.208 340.852 237.698 341.311 cv
238.187 341.771 238.625 342.31 239.012 342.926 cv
239.195 343.241 239.286 343.586 239.286 343.961 cv
239.286 344.239 239.237 344.493 239.14 344.723 cv
239.042 344.953 238.908 345.155 238.732 345.331 cv
238.557 345.507 238.35 345.643 238.114 345.739 cv
237.878 345.836 237.628 345.885 237.362 345.885 cv
237.12 345.885 236.904 345.849 236.716 345.775 cv
236.529 345.703 236.36 345.601 236.208 345.467 cv
236.058 345.334 235.912 345.18 235.774 345.004 cv
235.633 344.829 235.487 344.626 235.329 344.396 cv
235.038 343.973 234.641 343.655 234.14 343.443 cv
233.637 343.231 233.096 343.126 232.516 343.126 cv
232.055 343.126 231.608 343.22 231.172 343.407 cv
230.737 343.595 230.349 343.852 230.011 344.179 cv
229.671 344.505 229.396 344.893 229.186 345.34 cv
228.974 345.788 228.868 346.271 228.868 346.792 cv
228.868 347.724 229.125 348.459 229.638 348.997 cv
230.154 349.535 231.04 349.986 232.297 350.35 cv
234.428 350.954 236.096 351.789 237.307 352.854 cv
238.516 353.919 239.34 354.965 239.775 355.993 cv
240.211 357.022 240.428 358.104 240.428 359.242 cv
240.428 362.073 239.382 364.372 237.29 366.139 cv
237.307 366.139 li
235.625 367.566 233.713 368.28 231.573 368.28 cv
230.858 368.28 230.145 368.192 229.43 368.018 cv
228.716 367.842 228.03 367.585 227.371 367.246 cv
226.711 366.907 226.094 366.483 225.52 365.976 cv
224.945 365.467 224.445 364.893 224.023 364.251 cv
223.767 363.925 223.641 363.537 223.641 363.09 cv
223.641 362.823 223.69 362.572 223.787 362.337 cv
223.882 362.101 224.018 361.895 224.195 361.72 cv
224.371 361.544 224.573 361.408 224.803 361.312 cv
225.033 361.215 225.287 361.166 225.565 361.166 cv
226.279 361.166 226.817 361.463 227.179 362.056 cv
227.688 362.842 228.324 363.435 229.086 363.834 cv
229.848 364.233 230.67 364.433 231.553 364.433 cv
232.243 364.433 232.893 364.297 233.504 364.024 cv
234.116 363.752 234.649 363.387 235.102 362.927 cv
235.555 362.467 235.916 361.926 236.182 361.302 cv
236.449 360.679 236.581 360.017 236.581 359.314 cv
236.581 358.649 236.458 358.023 236.208 357.437 cv
235.961 356.85 235.483 356.269 234.775 355.694 cv
234.067 355.119 232.945 354.603 231.408 354.143 cv
229.654 353.622 228.329 352.95 227.433 352.128 cv
cp
f
257.262 122.331 mo
250.384 123.704 244.063 124.933 238.145 126.058 cv
238.15 126.064 238.171 126.082 238.171 126.085 cv
236.816 128.886 234.76 131.748 232.604 133.911 cv
234.678 157.631 232.812 177.659 231.025 198.136 cv
212.161 207.28 192.034 215.681 169.371 221.124 cv
168.279 225.259 166.227 228.638 163.349 231.376 cv
163.196 231.397 163.041 231.409 162.879 231.437 cv
159.404 229.798 156.573 227.349 154.096 224.435 cv
131.128 226.147 112.542 224.198 92.873 221.548 cv
84.7129 202.81 76.8457 184.152 71.5752 162.069 cv
65.8184 161.303 61.1553 159.128 57.751 155.375 cv
57.7402 155.268 57.7324 155.16 57.7178 155.06 cv
59.96 150.239 63.4619 146.379 68.8604 144.008 cv
67.1719 120.805 68.4502 100.676 70.5293 80.5684 cv
88.5088 73.0947 106.34 65.8643 126.547 60.6543 cv
127.5 56.3809 130.412 52.4595 133.226 49.6069 cv
131.559 39.1543 130.71 33.1455 130.71 33.1455 cv
79.7695 42.2178 41.0947 86.7305 41.0947 140.277 cv
41.0947 200.378 89.8145 249.097 149.915 249.097 cv
210.015 249.097 258.734 200.378 258.734 140.277 cv
258.734 134.164 258.231 128.169 257.262 122.331 cv
cp
0.5 0 1 0 cmyk
f
207.1 75.3457 mo
201.819 75.6123 207.437 74.4326 209.782 69.2754 cv
211.408 65.7012 210.756 65.2129 210.756 65.2129 cv
210.756 65.2129 210.27 63.4248 203.607 66.3506 cv
197.779 68.9082 194.669 74.3125 194.669 74.3125 cv
194.669 74.3125 187.659 63.7666 173.033 71.2891 cv
167.241 74.2686 162.17 79.6094 158.675 84.582 cv
153.349 92.1641 151.691 98.8926 156.738 95.1094 cv
157.504 94.5332 158.058 93.6875 158.675 92.7441 cv
160.076 90.6035 161.803 87.9678 167.079 86.8809 cv
170.212 86.4121 172.479 87.0801 173.815 87.5869 cv
181.799 90.6055 179.3 96.4404 177.89 97.8506 cv
176.4 99.8877 164.678 105.556 160.917 111.825 cv
157.157 118.092 173.868 122.688 173.868 122.688 cv
173.868 122.688 173.561 93.4355 191.836 100.123 cv
208.971 106.391 188.495 120.601 188.495 120.601 cv
200.557 120.599 211.705 116.652 219.987 111.105 cv
236.412 100.104 243.533 73.5078 207.1 75.3457 cv
cp
0.2 0 1 0 cmyk
f
136.798 165.396 mo
137.362 163.462 138.275 161.684 139.099 159.723 cv
140.371 156.743 142.232 154.405 140.753 150.015 cv
139.299 150.188 137.842 150.371 136.386 150.54 cv
134.919 152.01 133.604 155.19 131.125 156.743 cv
127.251 159.186 121.343 157.086 120.792 152.634 cv
111.896 153.855 104.015 155.052 95.9463 156.823 cv
94.6074 158.072 93.2109 159.983 94.3857 162.086 cv
95.5371 164.134 99.2002 163.369 101.288 162.812 cv
100.912 168.203 98.4482 171.968 93.459 173.769 cv
97.4375 185.84 102.396 196.664 107.301 207.546 cv
115.687 207.868 124.713 208.351 133.71 208.405 cv
131.548 200.706 134.519 194.816 140.648 192.648 cv
140.884 194.964 141.162 197.496 142.774 198.415 cv
145.171 199.779 147.528 197.402 148.104 195.374 cv
146.366 185.195 144.902 174.648 143.173 164.441 cv
140.884 164.551 138.675 165.442 136.798 165.396 cv
cp
0.15 1 0.9 0.1 cmyk
f
128.53 131.867 mo
131.102 132.98 133.578 135.963 135.237 136.11 cv
135.886 136.172 138.026 135.313 138.487 135.546 cv
138.313 134.144 138.147 132.747 137.971 131.336 cv
135.986 128.974 130.561 127.314 130.058 122.495 cv
129.752 119.52 131.572 115.351 135.317 115.022 cv
134.637 109.563 133.287 101.821 132.229 96.376 cv
131.83 94.3564 131.689 91.7373 130.998 90.3555 cv
130.396 89.1064 128.262 87.9521 126.922 88.1729 cv
123.914 88.6631 124.116 92.9541 124.985 95.5313 cv
119.067 95.2959 115.447 92.0859 113.586 86.6416 cv
113.326 86.0713 113.782 84.5869 112.891 84.8223 cv
104.015 87.9248 95.4199 91.2354 87.1885 94.832 cv
86.249 105.326 85.6953 116.265 85.792 127.167 cv
91.0293 127.45 94.4697 130.027 96.2393 134.749 cv
93.4473 134.997 90.4043 135.795 90.1221 137.891 cv
89.8174 140.247 91.5664 141.307 93.1875 142.099 cv
101.771 141.092 110.534 139.461 118.573 138.493 cv
116.575 132.109 123.938 129.886 128.53 131.867 cv
cp
0.75 0 1 0 cmyk
f
196.54 147.384 mo
199.265 147.773 202.622 146.577 202.824 144.39 cv
203.012 142.207 200.989 140.4 199.298 140.24 cv
197.513 140.058 194.928 140.775 192.586 141.071 cv
186.253 141.845 179.417 143.134 174.571 144.086 cv
175.944 149.075 170.919 151.316 167.186 151.016 cv
161.786 150.566 160.658 145.121 155.208 147.753 cv
155.316 149.182 155.795 150.142 155.854 151.627 cv
157.276 153.124 158.517 154.668 159.908 156.206 cv
161.243 157.683 162.936 159.105 163.838 161.099 cv
161.574 161.3 159.566 161.71 157.463 162.053 cv
158.895 172.754 160.559 183.155 162.698 192.93 cv
163.838 194.556 166.598 195.844 168.395 194.125 cv
169.955 192.66 169.124 189.693 168.724 187.753 cv
175.606 187.975 180.053 192.265 180.407 200.261 cv
190.903 197.106 200.567 193.319 210.312 189.587 cv
211.799 178.006 212.658 166.337 213.102 154.534 cv
205.604 157.428 198.053 153.909 196.54 147.384 cv
cp
0 0.05 1 0 cmyk
f
0.1 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
196.54 147.384 mo
199.265 147.773 202.622 146.577 202.824 144.39 cv
203.012 142.207 200.989 140.4 199.298 140.24 cv
197.513 140.058 194.928 140.775 192.586 141.071 cv
186.253 141.845 179.417 143.134 174.571 144.086 cv
175.944 149.075 170.919 151.316 167.186 151.016 cv
161.786 150.566 160.658 145.121 155.208 147.753 cv
155.316 149.182 155.795 150.142 155.854 151.627 cv
157.276 153.124 158.517 154.668 159.908 156.206 cv
161.243 157.683 162.936 159.105 163.838 161.099 cv
161.574 161.3 159.566 161.71 157.463 162.053 cv
158.895 172.754 160.559 183.155 162.698 192.93 cv
163.838 194.556 166.598 195.844 168.395 194.125 cv
169.955 192.66 169.124 189.693 168.724 187.753 cv
175.606 187.975 180.053 192.265 180.407 200.261 cv
190.903 197.106 200.567 193.319 210.312 189.587 cv
211.799 178.006 212.658 166.337 213.102 154.534 cv
205.604 157.428 198.053 153.909 196.54 147.384 cv
cp
0 0.07 1 0 cmyk
@
44.3301 257.314 mo
40.0591 259.785 li
39.6606 260.018 39.2139 260.067 38.7192 259.934 cv
38.2134 259.797 37.8394 259.517 37.5972 259.092 cv
37.354 258.669 37.3003 258.202 37.4355 257.693 cv
37.5649 257.204 37.8184 256.842 38.1948 256.604 cv
42.4648 254.134 li
42.918 253.879 43.3809 253.815 43.8525 253.943 cv
44.3584 254.08 44.731 254.365 44.9702 254.801 cv
45.21 255.236 45.2632 255.702 45.1309 256.201 cv
44.9956 256.711 44.728 257.081 44.3301 257.314 cv
cp
0.5 0 1 0 cmyk
f
70.4614 294.599 mo
66.1919 297.069 li
65.792 297.302 65.3457 297.352 64.8516 297.218 cv
64.3457 297.082 63.9712 296.802 63.729 296.378 cv
63.4858 295.953 63.4326 295.486 63.5684 294.978 cv
63.6973 294.49 63.9507 294.126 64.3267 293.889 cv
68.5972 291.418 li
69.0498 291.163 69.5127 291.101 69.9849 291.228 cv
70.4902 291.364 70.8633 291.649 71.1025 292.085 cv
71.3418 292.521 71.3955 292.986 71.2632 293.485 cv
71.1279 293.996 70.8604 294.367 70.4614 294.599 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.0%%For: (Sandrine Galia) ()%%Title: (logo eeudf coul.eps)%%CreationDate: 7/24/14 2:36 PM%AI9_DataStream%Gb",K$"=jm''R)\mN<Pf&eZ_D1Her#U,=39<]^U!+H3/%/L!hS$]oS,cbBZ#qmCP=N+CT_"VOIW6H#%%HE!pI]mE4Q>ID;Shs'hF%CP+iiQFBk>>:[2L`_kD<D/F^UI?BP&><!A<;*+3OTrL)TVkJ68$+qsf/r`/DHCX[VcUNP13ZclX]tnB0ZWr!PoZN;Z6b&;D^JB3i%_&qcB0580OD,h\QDd2%(g)>p1P=[d;3!`INgY0$hlTCRVn#)qMAaRDAp>45R0?5a\N/F5Fr1Ms89fqSq(c1PA3/5Ud]F_fRcb&FP%![Iai$?3(2rr,b95Cf3SPrCAEiST-ETZ^,BFd7a=994kAA<IQ-P`@7TNm$1['3+n?YGOGoA(^$+Pot*uX+',2I&4]cG,'qm6=!X-%2'#+,pW;'Rrn^BL\-]f_GPdT?pkT6*enm4@Wh[[RpV/u*iHeH]lO`RY(Xl\OHJ.a^R+CPTQj7jukbLB*AOgJ-''+g809uLt#(+JU%0V-#E%sl\rGL4*-NZ<*H<b*S'TAll^4MfKTg><j^,.tB"0Z*Fg?NuBNcN=p`Rudjei9J`1+?dl0.2@CJO,YCC3&6$im+H[hX7:;]%4m_l\DT=/T%SC(B<HOlY?KD!YDC8ZKcn.ccLF/ug\UUm^A(6&;P=aIe]E4e-5L.8gSBBktSm_!mjKP7uJVA)?<c1lkRC?o[+Os"0%$1q<%UW_PlJ!Om=-Ra=lVW2ss2[Jnk*95q&?(etP&-(WhcblfTa&cIsm*34q!*]U-IL?3n'a3/=#[/et1QJ_7*+PHTrkmT4N32(V%>N$t-Mll8eCfRZKc[$V8eEbbae\\Ah<Y/[-<XZ+?>24lfApbI<Srp3c:UuM/Kn$?BdY*+T("+@lnhm3Ks'cqC#lc+)_?oXg1uVg>%L(rTR*/XL0,9oYP([8q`KHa,M-ZbL7a&Y_Irl$dt(;aU1&9HtgF-4"dJ%6q*cIar@N#U*'R*-C>$iUZ@+as,%8)b7oWqdR:(qsK1%Ueb$Y\\`cW55^>rO?-]tr6(HP"TMp]U_!Lr.^G9m?[7*j;.KY](\s1NA,M_[fS]JOHst/8Hc2HEid#f[=YFY9s'ZkB:*^LP_qn'E%?Uah\0=G?c7f&K"g_^!")l0XD-'Bjk_joa)=LpqU792h1&9F-OQ3GYD=]=HEA&hj;H'rT,\ZCV6`jfM/R@Qk2rd:::A'A(3=djW\%R5[5pMuI5^c*X&=PdWta1X-OrA[9Y1/TRK*+83uj82NJ6A`7[<%Z$6d&pn9H&6oBGR?ttUSk;$8+25']<9?EsjX]"Gs/.`(ceeK4%d['>X,^\_S_N;NFn,-N,nb4Gp\Kg]Q[E;RVGQ+dHj6tY_s&[oh1`2Cho7,"3J'[!I5KEcDp)MZos73blGPT8I5bG+Cg2AiPaNrPS%^tEI)%B<j;i?R5aeK@b=&395U!A)0S_%pIEi!SB+M@]2g=S(j-eq89K,Im$ueHig[oZ=lF6+%#9<3$bE[blpk<Lg[pEOB"ZmGo\d%?4FDE[4sa0Be05.YD5!a/m'r&%^uYLCD,I>Bt1uD[i,;U)leej[2LHg4>QmdD.V`N^T%__<RlrD4pcGN;n3qZ^EY\<(imH=W":sr%Da=1H.ft+LpbI7:1;:So<`);]9A$Ob=uW.)"5dtAVVqj+*k=[/"RrAT,L;oa<S-Qe!."hA-B<sXO:GUqN,E=Jj-kJE4801=0^h4!%EFW6nSeY=$eX.HJabLark7*cV(7MIo6`hOK4uICDB[4?pf+q_e0f'\9H5spMFK.r%T!A,S#OnFI4agSmC/bF0<A&Yh0)15o-7smV%JG=_t\J2!h?QUo<pmtAIc@lr55N*:KTB4^7XqA.929>`T?9&p*O!:@!RE_S\#X3el\I'lL[H![&e2.(4<%&S&^:TgobVT=^UsI[#%1!Z`5G<a<cdo_TG"`WjskOTYu$3J3h=$*0BAeEf!F'#<]rkWp-R\M^V/.Ihl?3cWdiCjt@(G2t'T>3Sh:*WhSIB/0L]s2fVngdNG%ahh2_k8q.ifa=8Ik8P:+$Kr3B8b#Y!BPq(3+E''SZJtY.1VX:'n&RB$_3,-dci!K^I&&%&&juoEh[-@I$GTDH:8>[INV&Cp+hu)Z%THAp'0KuX[`0Pkl5FBiTpUM$s-se%5,?t\d;V]IL%A.lEV)88.ad:5RKASd#J*#>5-A_p)DArI>]*>i@]W&BYj(5N\a54.c3k#_Y%HGaD3b>8jQK;9LS>$gcfkK#6@s3pb&&k-u`&Xq*J1>TGEBQI$?:1,"Zae+cC5P/C':oCQ5)#fgcj66jDR+H95]<Qb"ggQeP@+e'l%^eu"BUDdgBAopG'+0&f=H,!)E*O$!rC^X]CdQl@m3K'Yq799E3lC<F1&mL,lbc1/jq2l2t7V'+Fkm+k1nu!a[ZX\[=%!1r^1,hZ5%X:$R>kag[2ZQ=[O$:/t?r'rM3Z1)Ipf3:%uM`2q(=-&IKm(Zu1JB+I*lT?qJKGho9A!%.Z4D;DgIYaDqKHir;30,)Ha(BZKhI')B%Wd._o0&RSsHF9cQi''0@XK!BQ,-h]IB+XE*]Jo+UTd6`%.06It1@Aa/NUd#[:rh,=M`j`XnK5msVG'8iUF,iU[H9#OZW+fcNOlC4%6rD6V+Qg0<1GL/%>`8nQXc^>rZ08mdLfHQQI`pu+enR*<2)Z]Nb!pDd(cBa_5^UjEC15C)kEU8Th$?[oP*a*cre5XoZh5YjWL;rs%+#Uro=,SN!rE%]>mK6cqZgN`Q4SN/@oO(pf\*#$Uom(I([Y49J+iUtbr!meg3Cq>$co?@Ui#cBH;FAPme?/*!GX+$?2Tq5*-_?rp%"BZu$#*?,HE56-?j$Z*18*s36fbcMXI=)]B2GQk1rnV%'lJ/q"Yt/C`,@r@L<pPEmFZ;$?4G)-UBup;f])]:jY!1M0`H'A5S=$^!%c1s=V_iK'$OS$MuEfn&e]hBnemSj,<.!aBBTc[m9R`E[U`>LQ7s2E"K@TDP1]?l`:F&LWJq17^g=g)[a_T,j$=gEQ]=k^0i5<)"h%=s@8**&,"!*;G2bPrPXiV?Gtm!F%aPL.0rAQ5iLJ%RiW8f,a"\TZV-)lHcXnp]Q<?3r/4[HTJP/F$:+B`g=jC7'4a^X/rd;(J]Ua%/QcM_7sSWlW`6;k0,%dL@Q^Z[q,(5>la;STY^VmB2mfRZXf>(/9@8Jmc`[i#7ZM,)ALN0Hh3cY^a$`["2)(H5aiPr_&$2;I7.B,Y%d-F`SpU!>h3;1J,ZpYs'B66IPfT2132t=3!qFfm_ne.+&MYW_t[>fo/`Nti.Ci64M5\t2u7X<s]$g,GhWYa0Qgub^;F"J\>&Y"^A%Z?MnpF0bcX6XuA`?4F%_&FD_ap5XN/%Af=P@;k<\@TI!]k4[uBM]B'TNm/*u^\PMChe/s1<!DjjPBF7]r^hMI,M9?fG\f+I3/d)t%be<X1H3;$Nl3*ho7BesY)9cosfA\YMIB?;cgug^?=;L:dQA)m'c09;qE!^O2Ud*B6ngZl4Dr\7\C^oYq=G(3B.0"DV5F+CH-oSN)%-.V1Y>KHS;eeGDr@R\l%'P0-\i0>PA&p"6[Zhb*TaY`1S<8"$iADaU3k\Q6)LWgX!2<o%aLQL64B@MkEZi_B-BC(8<F"b[M>,H/3%)WaJ"995@kC1LMp2.MbCQ7`k"O)_*VOW-'fE#l,^"0N'T=tm\3AW@-pp*5jk<G,#>STCg(he:,6VQ)P__k*)a2eJd&Y"l>8,DsQ*%>D6+ZBk/##*5@N`2lYY!o:*C_n0,Em6pCm\MW'1qKqk?>A(mkuLhg=0IWDR3[<+Ji8+*Cn&UB#0Q>s/^&U95H[*K>-2;n='`a'f*%/KU+K9pTCME_.I-aCYBGGW*L$Ae]8Y*'l-Yp!Y)YAmCVAZ=fpO7jqcu,Pjr/E!F3=N:*61*bb0mnu*J4'fGo2Whp\bUG,-X':p/p%7]uUSk;@7@@TrJU,^Z64>Ve:\3QabGC'R\X1,-U-VF/b]#.I#]B.TE3//Pf?]FOGf5^bmKG]r.2l)Ws8LX@TXY1=7?O.3F^6^3?M%cW&p*rT85Lm;!W`iJZSZH/uBQer7!WNT6=jm'heXYd_C_aeXqu=<\;d;4=TDj9lkg^W@Muk.O8B7(bjnF09@r/D=(3<'1r]+o64_%4(HYu2`FY"!X5a/kD!)WO_BpCTcuuRT>WUKG`\tYe@'oa\j#F=N_8kRCCjCm@h.EhMC,[jZ[@qCY_F%ARdlAVA=Qbbaho?8U.]=S%/;IrRN*;r=?k'P(2BmpPb2io`870/q^tNX+[iq2YUg_7QOIXqUC1>AtZinOPFf>J;<*(#:*@"^_Ll/;:=orK#Lc_EiO_Ck!-.,i'%S7/O;\;'jBGp&%VE<^3B:qB$b$s*4dDqI-Uf.:\NI5LZ-Odf;"c$/63j@!/4.BgKUEpUlt#&B.`1Z=3/aYFJXffMh3n152Ypq-Zj%Z"u&5kA7-9,D<_QdUYp((+mH_Ao'%_JZU-T'j;WbEe:&B0=.4"3o^c,:U9rG<fS--ig]P2N2r*3#4k/jA;5`\1r];'N=F8TpAH?7%iA`%@]fD*LCcm81h>qtOUu+QQ-EB)QKTRgm%QG6X"7'NmWem(%c_3?BIcC3d.lueD3.kfn:D$WeitoS"ngdonWRbRH,F7,r9%A..%!n"&8%TZRfW_mn;EJ#<4Bhe9I.d'pd)L=JF7K&>6%bGLd415/.']t'Z`Ib,+)#Y*0GrC;pN%a<s!mZSs+,o/5(JR%*rl%iXMIX0Q%@`sE\U?UT>&E]b?''mP?%2Z<TLFU?Lbq?&a;4AP-p_uc:_-VsRDWZQb27W3^2-r<:YSrFBJ<m1\E&A%Z=?:jsFXto[1L'9ueP5rL%OK(\ifY^f)^tn@l\*Wi=:`g@klGPDUEs!G@M.8:1JtVn0H%og$INC@#\&OB!:UD7RkR7pi*,1@+XTMWiW23*Fej$036[#_Gs,"8:%b$"iWL`]NkJ5rMnAh=+Z=Tp'"J1]0.*5V;V?4^Ha??a-#ZA0[_X(oqH+A["FH<#>:q_MA,Q51uD,U#F\QZ35><m<$^>[qe9]EWM>%jese0=67sFCh1M`50H"hU)f-T2`md`^j^`5L/:OI3YJ^"6>8apS3#2E8/H*MX'TAn&344DZhcUi[Rb_S5(m1,h(Q2XV(KQ\MR$X^%#PT-qgi0qE/Hj@UE1sl"iX.[>0WPa@Vidm"ZSm&90&q@,ohkg'COqXFQO#H*]%/^H+D*[.7?%'gEA=$1K=.bL.[[3S,!Mr&_E"4"%8l[mY":foNBd%@Fi"ae2@Znojf93.8@\"s;6XO]+T(YU+HVtR^qQ5F$A<D!H4,_ZUU`-A8E1q/!Luq<0Yeu*<[e`E)2X;jc@W,r@%au?U(Jl>_B=):NDCTH.Wi:1.Q<$*+?&achCr-^IAoEL(uc$lN?]BNiej:ff1rU#dL[-mYX>]K!7?&@E%lV6?drR#"6I*b(pPcdtI%KDi0i2o:d9LZPH2^S^D?eaeu,n2;,+`sJ?TT)W+g]#1R]Njmc_'@*@nD)<7TQ1kK8*fTW6d$aUUEr%.gl)/*1M$NP!Ei48'0HI(<%B]f1!:%U!)*0k<Q[,2anS>#JJX+J5dd_YZu-S6Fui+&>rRa54\(Rba;IbNsfMpdoWNsCm:JL)od9tK@VpU=ikqEFS:e^:2.FS"Nr%VQRagoq^4*_R^8=]'TQ?[^5*DkFK;2rnOV^14j)6M`:ukL%fMLhOoC&]g(?qoXa'mk[?\g(hKB3LMEW`$lL5sV5`/J4m`]56QFm1%/uOmgC!6V6UiVRT_0%p)p,cXjG,O.fNcB^3iF%W)A-=_tpAPmu/8*cGkX[Ak-_iH5:K$a7"^=%lSp0&cP@Ie4c;ud[:A8t^0kb!n%n_\p)cPu-9m5(iQ0%]s1bP/i?FMTWc"QT(I?YEXBri=i?pAb+BklM4WC?ZFWfdXPp>,V"iFLq\DVFgcbeuH1<<n%Jm1&EQYnlfp(%[@Cj0fk`R8ok(=/D8si!))d,EhpbB(kr)Pj!B8bL1`H$VX\irRNMt>4)aVA[k_@].)[c>9n8N*T?E[c=;ig3P4fJ7#?2*W%?.GKL%X4F@0C@tc4<is?KW#!s9RU=N$YNFD8bpcXAdg'MhX&d($7[0D$WB%0IU8O#UEAMJt:fE;"P=KTuJVP=_nCDKY@OGnZc);6)UKRd$%6PPf[0FB!gdZI%6.<t'\))f>m*]FDc0FG]O#lRST?Kd+n"BQX$K18ZJC&s%$5o9`dlg)=ogcu$<a`$uL+*'HXk#_N6O*o$.IG`Yj%kI\J!+^EAgh9^:Mdo@FS8;B7Q^=M#eY#a9H>$fZnG]g4P<?];:8m^]bT'pASr1lHqD7NBMiRZhR>BOGs+%%u+I94%Plak5]<(f(`%,T<ZeR9Y^$:DG9bC#pdF.HQd6=@`\J_PoQ20F)97!XB9X?u-(oa58I/jfQ#"&]b+3*T]@oJ0JO5[.Q<^WJsQ.^Y,[]4'\gDXAk+"%()L*I'S1C(@)Ek5D3E7(B^`8sU5QmHiemks,)ejI@Z5ntU5Zqtif#PUhB]?1_(Ljdf1<VQ_GS<Mb!V>6P]`469bNLBO&D#lLLe.g%o&$5Fq/h"_;(I2ITJE0$i!X'+F<W!D#Y6mN4#CZ-7p=o8VVoW@IGn[GF=8)8,uU?rWDJT(W(O).YD?MYGm3?lS!Q#dcb*M1Q0:s(%?;CK"C[hdcic^0%0L4V_=YqO$!6Pt+(0*Yil9JK.C;gZrR1%`G60eU!^'M*M$JJT0qO93@(0o3f?1gii/:mef++d,:Bp58k"3C[_%G<tOPBKrF6fRX=p6'^kiVuo\^[2.`!!-\rE6Lo_S=<dSbU'JunkmUW,)$m<C`)mNeN@YTJ!H9Js>+-@L[K.l`.gTpI/*bOilOkbV%:J2dm.%j+18O.5d)C.<c5pT)O;^biu@jl+@F!uA`K.)X+PAuGtPBk<ObC\2"0?H"9#N;L]%i+RTDcm,>oKZ3#d+8j$2?s,^!>cXs%IP$7t[()di)O*AbV2mn;X'c'L9cH>qbB:T_\6pX?R#@U?Fs@(c;$B$Z#Mq9<E>T]I$m+<U?uZ7P4:u0c@#@ce)ShK$G/-YZ@&u1%%/MMNZ^*57@<F%,+BJi=@>.t*)c39+2D8>iK?iqXXKj^j-4SoGq&+RX?KB\!H`,U/YUEQ"'XMRqV`IiIC'Vn;/FMRGK\mU/!3j?U)%hcBpR3<guC_EmbL+?`/*41"8u_0&H9&VV%?(BkXE(kjrF]5_9mAJF8Fku!($\k,QXOC4hsUMtQ+ODgA&P];q.Pk0]K0WUADf16ob%ig[IG+S@/W./>:g*hBc0L=#om2(TUsM#%#ldKS,)e;#AB%-n%2"mQ8+#3pqV#O2P/#jM\08VtYYK2e[=_T(l88DQF,)GuuSX9EB7%9_P8ooqt*Q#K4!&p5&&J/!<D'Mj5_6MoH)M.O@^;+Hsm(-)sDV<?aNi>P6,h=C/rR.p9u/RAcLOQVf;sMG9>AM/jlaaUA=0*(Uh\%D(Jjn['OR_dFPV2AUDT9=)9Kn?*V#]ns6BID-5hf2nraNNW%++@(*m\JS/e<$$H6#&Jd0=NA0&D`gdKEBRrf4#$B)&)rE\\?=S1B%CNC_1DqW^IS\8;q<d?:gC75sZ1D4Ga`U_+>Gqm"Z$A\6\kiL8$8b,L9TKgR"^1]Z+kD;PG,1T7?C*Xg"iZcMN8dWX35dH!iK(@od%bUo@m"c#LD`F0];:7[%D`<ZVr-=K5\$>DAG&h;.nhuL:F-'T)R+%aNl*%I)LTs2K]0Hl9X5[m,D,11I'bT%6\Q&2/$?E/N^Sth^!%`@QFnAtDEV4F;@R`LOE*`bLglCf2MuR/#98cCF89lRDO+/?!3U<OSW47n^jdZ8#p3ap+,*W_8B$6*EOs[6`*GAuocAXuGEI5/%-"%7$?huYuS0,/Mak2Ep7^%]J\Qs+K$<D#nG&c#8@qeHEjQ(BU2c)@[7Jo;\WCl.EH1AfM6ufNC&^Vfkl,YJ"_9fOAmEN/h_'K?LHq#%^!qn*PJ'Ta0;lKqAHT6U9'G$-G!Oata-G"k!h1[2EgcO=MJoYBEQ%s,/Oog3U,\K3T%_+nSpXE4jhS!KQK5ZL]EWe/5UH3hYS&oV%b0XF=(&J"]XtQ,n$E/e6HaDq-fuAtZ0B9B:i3E\>3XA`7Lsqg>#j*Q^AJ`u"P#T^QjX2^0=9aeiUc2@.Z9Xpf;_6XU;2^?$B,-'E%.jTPQW4ImTeO<=mAYP.pg\A#%I+X=2?(6LXPE9$g6F&&/D2MqpU=gmI41/b1fp)8eRhD48bK]22s1mdYRh$oPr#<V<J"^EEJ`WU:%.8Bd4K%Phpj%dk4QT:*p%hRk:WI/^tEqO`6)ZBWd\."4>46aR/8C^MQ#UeN53+8WH4`V5Z4>l-7r;,hEI=2ACIg+aPAR0aiIe/b%%mL]<.(T*pG9^cSXnd^&:)gMYMco9"XpZ_9J"2VP*r<oAA^q[(N[!iHf#=jQZPi*JM;8<2l7qd`8\L<&9;"i_&#EG9c'c<m)p7.46%oIB&:(P/CFc@XFH(Pg@V!EV5,+:/eEH8LmoM..#%"51d=Sm0T^^beZu7Bg#m,5UCPjg3th0CH>`qupc(`3jMT;[tV$e"GN*`&$Wb%51droG&f8W<P1Te.+3;O/DmoioGMqjB4(PGR]r*C&D,HP]U2b8cupTLLC@[i)[:Na:`qh;"JuI!fOshM^I>A3cP,<7*1n9(mDarT%7,eBe('fL%84*r(&0;9oqCH+X;\b+$%<%t5m.pW)OS%=20\WUeTh0p!W!lf*&PiS]eaZoQg<"nf-2(K/V;Fj8Y1k-,bH($c9LL80%:CNk:UBi9;l6JCuE41rlL?[Dj5!S/`UM#J!A#-Mij0G^ND@H>Y`J*5M5W^u&;"5Pb(2Bi/!`6&[M1p_@([XhRcd$aQUkIYJ@dpP_%rAY%O2,fNPZa6=^$0)$hK2FrK"+H1u"oeYF$>:dlWo,HrU>=UE!@ZQ>G&;4F5ja+)%f#3s<WcS5"51d=A3E7[%+B%o.+bY0=sQO4%c`tq]R1D(;Z$A&+)osJ70>MRNUcBb`'ebG2>]LAG:RVMh,>u[9Fu#-rWL[;?7Bh0k9St@*nj8LHNBb!><!KGl?tgbJ@^\XkjT/-c%BI=#d66\)D'f@!JJ8uZ+88gm#<"(.L0^iP5F0P83<Bd&<ZnmH#UBKZ[Rt+<%&UO]GW!2R!+>JX5\Xn^eq6#Wlf%^\SVfZ3$`<&^K%i0u_rEhL,rMa9-W&b>B![Zc?#e_S@?>m/@F4]A'0&:LA?OFu&Up3Ak_O3-o@1K[>$lu4$+"gEC3H+T%?4*EB#$,.1l$?5ZE"ljW$%D2>P2@0>6*JUeQ!%oLDCY3.!2Xt(^cZIIrK)=Q5;=S[Tdm>.smD'Um^Q'_GuEh%<sbp<?Bl`6*U<T2hZJ!?h,R>?0/4AF5qG3!=:%_5C_-+V.%Xk+homLTuo+1%KACSN3o!6,W%3Vh".Wr=TGE3b0>7(,f5+8PJ'Y7gs-!.`K5%nIP_+^`gLIno>o+jko2CYbtnPDQ>!!%JUkJt7-.Pk>W.Ub6-Y=pN,)UOTkh6?#e\^)q<OjZie.C%()[Of<nd&f7Ft7dGb>-]r!;riVcgO3#K%]]=/+%r,KK$AlSJTD/`h3]%m&Nt:HG75HG9@7OQ:aXOhnXg5H%5mh9][u5.Y_IKJPek8+QTsCnI'ke"`00,%(,'_QuDa(=#UCqiA$H/&st[f*2'`1L:;Wq6jDj(%f.[Eu%sV=\CZ1U-9sJ/A@&QHt(^7crQoOF#LN[Y<E<a;S8-T>e",rN7`K+D%*WVau,Agq&/-:M/&.'28$FH3CQ6ioo+i,oRe80:G%%#.Zim6ELg5\T++ZWu5WR4c_?KW`\2F91##$sGs`aT/U>"c*2C!QK^nN\7LJ>H'!^Ld8`7WmF9KDSQep,f:A=E+"sU!!*A6["Sf1%e(40pXUsUN$t)I2cpHu`!B`Tn<b,Lb(<b`M107k'm"P_!5+;A(@)E'k)IX>Cc2c5SL7UpD(gS/nL=MEUooAN3NYnj,,HsH:1O*La%m@#1`%H9&S;Vft*[Gr3"5sdtIUP^-]63)DBis(W$=D2e,%#hmPX?dPR%#c^Z=0W1lM]`%&qh@#ja.XA0#"#`6fCe1F%&%eh%.h`t%`aC:(Ln&7I&\ta%dC:@`B]R2oXte;0erL6G!P2]I0ORi"?nGU``A\Wab6s#Wa>Mf<a1BJEHA:3OJRspc:l=p(7/74t87G7"&o*fT%'*A*IX93tT*L^t6H:$(=oT]I:T`Y<bTkG:3/f>f*`6(IZ?Vt#L,@o7]_TE/e[3*Rk\@+L"J<dOl&PEQ5JT&qm!<Q>]<.mIu,m-P4%CbVM=T7IQ7)g89t/.AHt6le:2o)JeBU=CsX5S0k]/Ta!.J1NYK!">#2_"0)`dQO9$b5*1a`]B@GG$Jmr"#m=<Y_`?fKKm%Z"pfSW%C2p_FZ9e[D*]SmV-Y>(7?tLb-+u0^Moh\30apnD%A$?-ioSmsFQ>>f&>[NsDE3IQ+(8?[A\&:do$Y>nP(1C'CLsTt<&a4Qc0d/V?%"D7?h%^[7lMaL?Sc]\Ch=jn1=H@)pBiP`E>r.R&V:??/'l\`jCem/#tdl(1>FYt^(&]VT"("pYe5l@Gsdo)+%!-"lAd5mRqD!G[s%l[GS@#7UdsgA\A;77)W";@l-EjLR7.dE2I&0JYHC,M10?i%.#W!4$++%)';4a$<g&0tq0-GlVg4i)Og+Sq3SFp"O_2%Of2as,mBa%2jQ^$;g$>Y#QE6V!YDKf+WOpM_bu$#d"X)D9E_e#,.6G#agOXpCj8?K=CMd:R6DYlS;An=-3V-42KZ;`&KFJ2.'9i^S80u%^46U^%AT7fhg4Eg7_AWp]Du`r`1#-D!"+^'of!4I)=JO9X$97Nd#RQdD!H=!S0n/3<2&"_qi6XF:kkT%l,)C7AOaF3p!-&BK>cVEFJ>:33%+i_;o$Yq.-@US7bik[>JOTD1Q$Z"*F1,*e<9"T[@kZK!r/P^g36PN%q)b-LkAT9uf%+'u#$OgkO9Z.s-d0sdmO<rN'`FB;Z-_9EE%"2V/X">osj):s(#TBt8sgJG`hfAjp]Vi"qZ!\3<b!<OR%_FKg1^_gj0":UMla:PZq$^>$'^gOPo)1_*8!aSk6>&;[g#`_JMJfe_h%JG(#$",V+##k<O])[ZmK"f0^WJ0T(6Lm^YOk-uC&!76SAel."<!'O+inuU\5R-+\Ym$UBgMK@'0@VPo>7\,YFYq,spBVBYi5;KYL%g6sS<ZN23M72$j[BfeQsa8k:'%+#f6q:^`9&0/(n'#]VLfF()59Lp'`2Q4X^e+X:_XC!N;jmFi=%7TY.O6;QQ68U7r'B7u<Z)C0c%,m"=UFsSi?\-mj;B<'uo$S[Kan2Jh?!6U$4J,rbfC(#JVZRXoL%^Q^sn4A/58.gHUa,JAomhdas,/,1sA;F&T&ctPB(LS?fKW]R4%fX!T52Y`Iq18c?T7F9YC7=kT10ZKJ-a/6!-`7!4t@tVN0BURY">sZpX:;k6m=c5E]TKi]8nT^"Y,*3O-%k-(/BnaAMl&SO_0hVQX%@&;*P7kr/sXG[?mN9V@<&/b"h/ZhsG#Zh4d>VX<]',\WB@-s?@')q)9%7,Fpc>eDdN_p[bManBGa*CBgT^QUHaG.en!2sB^aJ"oi%!5US=e[E*oi4uU`$UiYV&_`W-Y(P#fBaX9>gdkXT$=$B\7TR/rJ:bS`[u5-h&\p+oNOJMT(p\FX8Z*4?TP0l.,p'k2R1Y=c0a9pt%j\+?E$UEG2>_oX%G7S^sA8E_F!0"cCQDjqO!t=F";/in)490mP8aZ"DW+kSME6d`RaM*nlijrGS!$2_,lK$#sY#RUTnI1)t>C`DH%ck%0fR0-=udkp^)=ABMh!YA7e5l?isr?ErlYgg]5/g*t^H6.@%X!#cq2D2;`M;-2(WuA__5UeZj:rX3"T5hj#P+1A1@PBmpeVV(0%+FN0H!oFRun97cA.coCc<%NTOU^@+OXoPS?JtFdJ2B5_DG(:\F771'#q@SAC'q5tJ8@+:?HO4KJM9'uIUhoQ+@`"LjXq'"_XVd.p%,%)2@:cQT_h^#k'I5qh2^nUX>DLRq)-_?r&<<SPV4`cksN\.e4+Tj/lcIt$-#d!Pqm&C="VF_?:lD>FV&8Ql1#qZ>oTgi,rbqMsp%l93b+oc4>j3#?5#&mXII9akOtLt$J0K7K)m"u1(NXrt)[&?7;m!$36qL3kuB!DlN2ENE8tB:tJF1i>('FoVg5KJen\8R$%_</i"C%IMY$6KEo#a`i\5l#+r@4!3AoQM0:@V*+2Jc;*9K3c@s`]X0PU19f.7gXTT'lcj$GO%"M-\c&!DNi3S>MH[n\XTI&Ge'T^s[`BBi6%$3EO.iggXl'5_prCk\9,ap\E2,.(48Rt,TM5Sd8PEO3`Mh#cUJ85_`+f1]akNY0i3A,t3pk/:Ti$O50d`JV,j#_PD/J[R-(3UI*Y%d$9-D,Cqbn^')Xe99De2!$#C>/Ls,`?Nthj9SW3N",o>S%c7`%!Glcn]1*RP\+s4]HB%u>DfoA%_)2Eo?;8\CZ)"Z[`;pCS_#`ef%*C)&:,G<[PZ48"c8@`30V(tPK5F15qX-8LC$->J!W%(0Mcj@XMHa0jY"P/@$W#M+H_W2TZ9\*F1nWa#NYlg[/!`;DegG"]4N!3iX%2a]O0Z$q^g=lFl6;5T!F6A67QE7qrn^mNk29WE`6CH^H;`7'sE!E7iM^oSFS@OM=H+MT,VOmNZpB>p@cV][rL,j#4AP05PfH&:u/%T_9@^]3J^-1!4cC&fDQgA.EO80a$J\1s1a_-oD@V'g3TQ!sEUR&;nO/YqJ#P`C`5$FKMOo=a(lH@SK2G&I"h,lm0+fT]@4BGa8A>%>G;\K.`W=i2/a?d0Qohn,Sjj.?k#WIWe`oA'O7>e6(kM<^#g>)*^HE5'6[k2J3Xp'G,*u!qZ<"A0[3hr49/Dt*?,PG]<Q2aB>PMn%0_CSHqT/.k@9M$uP?>@L^d'YX9m^1LFBp>-A/^21>K2j1ca?3Q<+LMSQGS<@M<KsD,P,fk]A6*6R!Jt(--]TJUbIF]ADASpVQOS,%mHVbO5gPQ]OM*>cCE7",EI\-V5?-3\#V:pOWaW$:_JI>REc^UbE)&C>iA2>KYb-US0f'f#Ou[<Q#lo(b:rWrR@5rc^Be/<ZJ=be5%l!Yu*mH.]6$im_3`\j>fq:;-NZ[iP#+NIVGJ]e.G!REN+oTqWDXNeIs:)hQ1Ms=64B3LbP`S@s9J86^Knc5?u:i5Lg"I.?<$.=%u%aE^JSWD34"^t<PFBs(#`0Lp"'!AK+"EeB1Y-:i.t&3!a#'sX`k[]q\(548/c9/>6aDAX3&_Z9fNB9*ZV!d[HH\Yp$N!&"UHcUCD*%%-bJ#4;6;WZkHo7a7\hu<2I`.O9$V/74rQ?KEIV$%Z4.8^qc/`>AH1+"%^(qYn>=-fhBCC.16,3&nEMb^oe:Y,U118^5h>H:q#e,%MISD,VS4\827#9bmT!Fb7;?\a-nkZd,-,5b5YCf6>:^p!*QaCO]teO9)7tX`.bQ]<X^rOrODU?*G>s=baT3+4ll_UZ[M;M0Ab0.[%[KD2VCi0K\05Z-DH\_DF-^4UalrB9D=it"8?aV?!;qo)[W0KF96T3<0/Qfh3[O&pYjMSAQF/6rK5SEBC#>#b#2Uc5%J8H<&Pg!Z?%Y+%3R>2gD9o2LQhl#[+3?/tO`ff7uW8m.Pohf.9Lf%.E%Q!Cp=V=R?1]AFfh&qIUXa.a\DQ!pid%&'AmKmqA9J82EG_1P5.ROHI5%Due2gj]L/t!MFp%\(iC\NeAf-9QdVu.Cjd2+f-2EiZUF!hukf#VW&p[E\Sl(i[_!p$kV+oLr(tC#h4$E8FqSD!Ce8NY"_%K*X+,N%5f^K[%+mG;Ubb_1.q7nAcZqDK]j0)ar1L+XfaB5U&hjf+<(\JH:lCH5k%#!QI='2`N6=I8]4inJ1!nGp*OLcW5o`N[&pPD0c!\>`%0EPi06C'^Z$pZnr4;f]\=WFEM+Bkq(\*P\#=GmD,'<u&_=VMqpJ*#\[%EYh"dmp(%9Qk7iXQ41Bf9$W?Ke_-sq0(@29mml5mSqj!%;):.gkMp+s`DYa\&TL+Djie2(f`L/%1L_N#&mpb=l2Zkg=D]`E,[eYI'+a'+ed&4r$5/"JJLEODN>W!8>AhD8JF=p[Qc(HU%a@R0%D$sT$mQP5hOOHAn9(bI(]aPt6Ad?$Z'bP92(2X\,R`q6/s4i.2ZHSI&\7%"=j!+j5oHIFYa92@G[+'gf6%/em&B[>e1!!W`nMZPS%iMa0d9^4/2A4!1g;&%bG&jN+5AsdLtjQ6RbqHK)El6QG:aI5np!\f3s6MM!*:Y>bh.=Dbr9HRG"JPCRq/"uc;GW)FWYW*kqPEslA%?`I%2k-(FlW:R7s"$M!cc_KNX"Os#+O:Z%&+eB<*MFDjr6Gb.Y!\rYqB</hkXWe8egPSjG_;\_Xj#^L7!MG\5AjduHUMC969iJ9A%@_I.ZJ?i+N;+tj$CqXqhAU`<d7cS0p+<IkQKJom(ciDWh3F&6K+=I_Pq=#82FXNF01JB`<JB1YI((+WY+=dF^Y!kufcXo(_\S\#&%.L=[-`AS@7UIM]O:I#fu:[?b-/"^u.@!6WQ1^PT4Q%Z-A#Q[74)pMMtGuCi,9gVU!"\:fdBq0+RCF/KgD29.(/IOSeSIPuD?RskJ%f[:B3jd?`F!$RPb7,#"dJRW,#PE3aaf(`J"_OH\jfuTgJmK>)=B$luZMji=)k*_IiFu)YUGp[)um%R/DN;!FYlUZ[Zdc/ZJI.:ks%@KBkM$P-QW8&]+,bW9^]^iT'4N0umCn)o6^cd6\Y5*Y+)Lm0Q%l'WOp*&Y1X:D="V!8#d>`,*n5;K3+=EpR4l+<p0Ng]17<dH1]b%!@(YSV!%d[XgZ<e'm*<#3e#(!H`jL-)e[J^\g;s[^m<P63\k;1NtF\eAh=[UkOJ%8Yq2Vb,A.OrX^W6DZAnV6gt%?@eLi,ukQV6a%&qa"bWD3Y[X<MM,)ND3[]D[h.QQTdcA[`b_*(HN9"%hF15d4c-bj5n8("jhkAo@m9MPT5\W=&^F9:NOCKE-i2j^]2=O<&9o[6Xq1%3T-"*6^UbcnQVS0l]n"bj5V\t0NeZM7i$=L4T8s%p@0I:"&tG$91%TG2Ja$qF+B/%C=a'9,,96ZW6B2&+qUSH31IH7:ZpLiAOR$O%eau`6(mm=TX?Po`]2,F%E#JgaAURhEaJ`7HbdYPH*5J'rdrrnAgR9?l=U'f"=R7ZY2]2hQB!8BtUu32d`QsH*f=<@k)/b@`00uKC%3)T7P;PY9M@%`[(!+=g))W4=Kep!Nk#e"kl0gogdm1I>uTFBa=_7V%*R=gj:KYSYe0tW9)!*0:m%Qk5T]b#<h8i0!R6S8e$ZScIt%B=l^.C$9o<#0M*![2ap@,2'O=6':F7Fq(6V/h&d\A#h)NNQ]"_n4:!E*DD]UVl59h5X2OZ`_EuKJ9:/16sd1*Li"lVAG",P*Sf?i%&orZ%;=7\qls1i4m\[5M*Wip]HRLHj?d?R/Tg^K]Nnc<']7CtF[`<k"XP4jOL1jb.bTS;f:j/VY_/^S>[^SO?>^$T94-\lA/g4o@%]h27.R=%om4d@pS[\aVPT%or,eYO8gc:!a$.2H`\.n:rC#%47o&c7)9%Y/Q_$Z0()/fKcU$I@qO[#D&5\SoT6H/fQg^:d/j0\VBY%._2T)13]A\\Fs$iA%'q$3*0VMj0o/EBKuc@A4)c0-9(JBSQW:XP^>8)=)F9E2n*>u3BBN__CYtC]n+)f80A,NS<BeG=B8O!A%K*`%K,A:4JWEFK"rOkYAK5=bf\9,6;o8ls05&C4*JfZrY.U5S-NQ14jk_Qr>E(`p3FGUo8KssN';M0'7f`5dS=;(AV2XkE@=<**_/gIO%9i<a7S@S]ngj\DFq'K1e8g*5)\XA<.!Xn"XHnc2)gLO?9%WSbI:i`a/R*D8Z6V&Z.!=#:1</iSdb3ZX+-qhc&#_Cdq-6="&?[J,i%7'0iJICZHk;O,<5i-RN/XmM,L]B62uS(YbCd)pP4(s(Fn@]$s;?oPE7^-0%l",-;M31GUa\7I#@8D\S]4J4_!Wb_`/IT>h'OOC.a%eKV7=ZtUn=9TBY;Q$>8DiP4A.(C]qG@<jJm_oPboW05UoR!pGF5\tN/OHV052o+1Lee\_XiaL[aS#_E-b-1jS4aVgYPXi%Nh>'-d%h7VmlQ5]f[k)(7tb(=WMFJ)dbmDp'g?+W7TAIp0cQ4k0SBHn#Y8/>Fg0aECH+2jC9N#O6&SMka9f"OJ2V3F-8JQ4jSFHF$],rO<"%Ae'i/;:(FEfVf:mbuI2>bItYoG!:;#T7Jb1E!Zg(/n>h7_/cZ@"e-t.b)Ml?.pQe8UDbCq;Oa>3(9rg5CP&^K4VZeiN'PA&HjpTr%]+&E\i<i;%[c8`tX5ZC8GA1Q6)MN385+[:[7C>G*QZEG*Uh3+_EOI*]XH!Tn'ULahpK(6iAIn%a:3!'SiI]aq`CHH/19RaMiF]DL%N0O9,jl_<:"F@S-m=^3JD7<+;/B=2uO"?C$Ehe/j)jIj@*s@=,R9c`N"g.lQ(_nc%@Qh[:o!UQai#5e`FFp#nOLoBEDeADS0Pq::%H@7eJ&U:Pu=4.-i2\lh->pqg0&^#4Th3=DX)_p>saMUEY._!m#nEt`;0aZd'Z=R:]SoDK#R"Rp=4M)Vai%R&>B(s'VHF\WX1)4g0%#(]<iB%WBd7i`EtV\el&:)o+<ELk++D-EUB%h4%s7p)EXc=]oVc$";Y.pK8UB0(S("sO8^[O9(jPKX)MjIhMHg3_BkC[2"g\J:59%3\_uilc-J6TqP`nM%:S2=BR28V&XlWK4mOd1-!r],`9oalklrb[q7_q=FfGaHElHCrs[C<0E^C]3'&s]<Ta9K!m9I@`L.DB@6$a<%ZQo.Jp!1obD?L!cL*B*/L6YPUj+C`.Ls4[b#`V85<+p0&M<q3+`STDN_akV[n*J4<;ce@Q"!;uY)Qq..+3?I>*>E(YFZGTQMosDk%Y3&-d0-&@$[VQ*#-1p$K!0/_Md`*fp<$6BE.DFQZgj\1<^X&Kk&-mRf%>.#hHlml"'4cHjJo'S<,6N(0=+o@jWj4]hn;*5U&g+dF%]5BC2loeCSb,N'TOkdGkpF<61?3b'9i"Y@Y14\.9YP?cW#3]7&(YbF<j<c<eCD6m]9RRX)j1B41.(9aS*$SjfEiY;XqhfT.RI(9F%h>*i4a^CCic%D7=K$re*h;%0>#JQGUhrL9A9Wk&4@;l:j6VJ2L?S[/,XTMOCRoYd@*2r3>]Z=\Nb20B(5WNM]EfWE"HT=Gh1sAm=%#B4?7arRXuDppl!Z4#mWma]2/e'4F]GR0+D35jtlQpZUg]mVi`DKg:!5*3@$84)YN$$+K@!Zc(>YX6,j\c5aY:"[nO'gL[JrGMta%"B!nY2n4ljeg>S&5u$%b0aC_SJIn]aU.eV'5]bT%Z$0gL__+9A:<,O,+:.@c&][(C+:.=><fT=8:1+BK*IDi6!l[r[N]]YHO/t2r%cANbf@^:97$PGN&f#g*mLsE+/fQC^:lsi-Zct:*PN0I]mgBWauW9K^!3XQ=`iu!)[9]YJ8lp'6=HuP*+e)f5O0E<*HNA9.3Tr*CC%9f]'`9+U9<fsEG6*bXDX[Rd(X:!l-mf8^]IcnURfb+?+R9LR]!Le2b`,t2259VPV`YTeCNOdiBm\?:+7&pY@/mfZORLjcg"S]m./%l,ggeZD02]%[?&Mk+k19(:bbXoZRao-S_PUCA@S*^n.#b)gX&C?cn@k+&VjcSm7;(.25:d4`W$aXOoa!V(KZ@XE^3Tlp>)&B+/jN%,MCo>3ibY_I`?t*+Hf(_*!JZtBCcDI/25DQ6?"?LEJoO;4!6id>RZiH"P1c`cI%JgGKb^i`sShA*ZK'3:\sXQPmm<H*"hScDOZV0%BdljH@'Df&.^s*MA<H4caiV#U(t:-PP*VN".>""A1"ke^X9@1N^0YL<=6L$'b?&T4j0ju<.^M4)b!$)#o3H>D0efQb3J0j4OO7o%%`r]:n=t"$U+r9#h^VP]9]K+e]2GPRech9/3IZ(\)bJ=[f'q`E0:s0qanI8e*56ZgN%bFepkZFM@b;gEmT[UHr%P/4E'.\Oig8;.Z%'*Pb0&DR)eK#mBZcQ]d7cU4J>$`29FL@3]ErRftE&]mrt&8\g1W(sS'GRuZW'\]I7H!IF6QH'NS;@GK"(S=Z7:SQO?.YP6TRD2l?%LCIc=St>I_"q@jWm**@!:*<r9"%QLJgj)E;q6>H[\UU4=B%R]7,iq*CCHIFZ6+UFooDb9XcHOc;53+/Eb2H"*YO8m24W(&<_gX/o%/D^*hn]m=a-cM.+DL9ePoTR]"ZS(#_?hs<'f8!#RJC^[25FnV1X6&ZD)qE=aR;:26lLm96[#`hpnr3nQ8TkRC9\p:Y]QQ_(cIUP:%NL0T])o0'>DZ=[al0h2^b&*3fmbuRSm+1rr6u3:A8Fu/J9[b*>cK(oX8Z)/.Vl2R<IhnpCc]tBfI:51n?N;+s#B-ZViDK/H'r@h_%JX5IqJo*\3.>.S+e+TRqR.`Ul>A\>>!+cibO=>gZPB#QhRd"n,!(Eqt-7@9irj8$cgM'OYE7]\hOa/R0WhT-Edda\Gh"XP6:N'\b%-S7s>IPOZ&U\)#E/8T<Y1Y:rV;s4uCY<P1!g7BS)Vo9B-hrU%8efX6R\s)hJmPpt[9We'#]d3rSku5M%SO/,nK94',5%cn)]t??c%)ri_T@>1gP[ssF&k1q)erT(i(4.)&^l2=I74R0A5PI1Nn(I6JqpgoZuL?U+S$q>s8aZ<[of$jrF_niiE.AAX@!s&a8cCOi%,<[I4%g15Q28CJp?>>700,hpe;D!uitgH-5u&-Va!%(bIn^:3\/?JugHHDZ%CNQrm,gSB1cFDmB2D:6*l\n=ncI0n@cFkP3VD?#d[HeV2L%gWF/V[1NQA4+I9Qq"Oe/'i"fgH/DfgIE?%nNX?FfJm0qW\Hr"2Q,:.>USQA0()L"cIR+Pp'p^IF4PK&nP"B(l\W/E/j2#DR2!>AY%hlfm(GNij+`UhN;=^,0uZS?&2A+fr7?b"n'2V)]T6\Ht+cBbCFY.!b:(G<:CMC5^#pD9do:CdrTl"#eGr3Gb,m2,NllXIU9;mc,h%X10H^E<G>;%kQ=R=1%H7hp&=f8HLi_U*"7s]LunO$WFG'k.A,J>5A-^bN"HeMq>J0oSSEBVY-kE)CiD;<Bj+PrNs&'p<rXiQ%>,>%5<4iZ$?&Ia.$5l=?C2gLFN;:*dS>kProA&S>U*m'SA7sT\+8)o4"?bFYDmm7ma1GQ]@Z%n_MYrNV_#%BM2uE6@o8-J;t0imRU>"+%Wnq.U=NngsfXq+!=l7q8LVab-]QGW?k>pA!'TTiHP>3A$]pg-29B=t*:@!!_k$XFNs".K64m;TcbFBF7Xn#(+N!@>AM4qq]IcIj1%8+QX!(GoVE-cp$N$d%d;\'d2Q'T[,:(D1d(?CZFkE)?(&/@YWN$WEFacEqh*88U#QlImn-fogN*H9=@jE'TG^I$[W(>HcdWPB.K^%UTU0[g5c84R's*6-`=&U"4"$?9`Kc:.(Xr8]fnHQUQe@bKo,/<\s)RN9@.<5>Yn%UoXi/cL#)$VhG:$/EB!.6HIMJ(q,j2@W.!n?%_\B"^jV+B3Oq2D"S&6orSpF\f__CING8R2:7B:=@QE\:XDSRn),N2V\6M9J#bbC9UjuCS?)Mq+2*2Y\a.rW3Vd;bPsj,=<Me!oAO%jiqe4$h-NQj"LklkG%OB96VAQ3(5@d?8(be(pu@6ZOZ]3IHcd0'W5X+Xi'9\bXX](ZdS_8lZ8M-#ut215VHd[+/bmO'KNZm-@C[A%J"'I5BWLXmSlr<&Mt$6J\=gsqs1+->#B(RVoF^YODjMtF((,fIa%[;P0<`LhEA$@*BK+8[fiYX.X]k5/Ct/k+^ThMmX1#9J.rNn+%UVV0gW,55^)ORmR1cXr;s2LdM/=K\J9oufgBH)l<Z"WHAd9=6"PW*m9rl=dS^\'<sKo,gOg<\NP9bFc>s-M950_$*iq&`ZWj^5l3%h-,E-2>Pe)-%8@#`IE&H#te7tB=Ap%GBnh62Wtp*^;T/H[h-0ZrRn=OhKdEP=hg/ZbL!W]B,N@6h-cENSW)`4`?5TQrd7+[P]iAh%KsYtW%g.(Y_5/gs9,Y@b@Mb>ZfYtuG;EVVZr-<k5D!dhJdDidj/t:s+MPsN6>R.sYTX.?<h;%HFm<?%^$lTP<G'ENVVGgVA:3aOt%rOUe\_N_$RA?M%I?2fpnI$A^WJ(--8H@>R_XhbYWQ<L4%%slO=DnU?kl\"6V@,*@+FMUt^GFe0<_6j!T^=L9E/P4Nn)n=(Up_:FU%D*/gZ,jf\t\`]1#FB[Li=H.j^#Q=0<knhsM'E(su6rs<KQ>`YH-R\;BUMfUCfKJ"6KBq7q4EQV#q/5Lt5UY>?c%?7d=4e35s6Uk'%Qe6,]m6<U.6/cHhUcnLY<3\I8j!(*6KQ_:SChI+naT92.D"*J4j>Dhg`l#/Hm3SO*e&"!$Fc#lG;i"EN0q5JAbs-u9I_%oeEO+Wi%"qlORd_XARNgj^+'/+dnG\IgDD8N.Ll#:@g=Q)ueZqBj$+1A^j`UXOAY>pVe2^S&q1CCh`jB9no0+;,NMm.$BI-%KHV*%OU3+.#U%cCOMd6Eo_>VLS'[Bpg>:Xn7L@F2fG#LgFd^MJN4'Mbs=^e=@R"Vj$+D^[[j6htb@rcW0_3b:_AG]?]CWB>n.hEC7EZSZ=)@)qT@<%>j(t5U&W71a<aRW"YJq!4q7@`]@SoBMiWY/)@=8lrRKGd?Q-RViVj&scW<1fhY_PrV/Pt[V'cT)r-%<00@00bqmj66d'^[87]r@h%?f#:p\li,.2qJgnZB1gAd\l)*6^h@iU:6.I\9=9Y5J2ZCe)h5aX/eig0E(j^T;8R[W?3uu3#>`jVdjO]*fk<g-3/t;W$E58>rLgE%E:^O7gQ,!?)67Z*2FmRDfeaDWYAmia_hZmX<EC>D.=OY/-J6$<M>Q]`*OWJR933&.ptf\4p6-lGIW7QQ6UB0Q(Z$,Sg0ZF5#+Oju%EKB+Jp=h7OaI6?p.BA,5Vu4:QBD4?*G(F\2r`@<Hm@oW.:pP`Jc0pXTrqN/%01i7*]HciLKtiRdg'?L,Zg,Mk%gf@>4dk'S6WVGg%d)ih5YP6G(_YW=S+(d)`B/Q#Ai.<:_s.=hA5'Zt+qe+W0>PJ3=jsOsV]=FQ<q:*^nElrji!1cu8Ys`i.l`j3>G*F$YIP5MFJ]MoF%e1=+9(U21VmuQQ.3U8T`9..hp.;-fj5Q+klKk]7:&!ud=VY(+_O]/_oVlY:@l]gAc/bfbC\)9U3HHc\eN;M\VTF7r0kI`2-jc:Z\%7i+Ea+*-kFe0OGToQ](_c?j#'rjc"=/f/J"EN`T:\ouM;59??h$e78kZ4<LsZ@X\\[raD"'>hNJlHT&!jCF;!@4s'YOuV]J\s)Q-%*\^B^m;N)oHRCu?p6U%#+#"p6-B0<&9!62<V+4+lH^q0;rkA2^_r>D)`Vm[4V)kWeq7Z(D2$[tI6!i:.(LF[6s(-M8oqoI<ap):r%hsjebMf?cJ6%=[s?ZiubGn/;+KP[6t[!</1juH+.psA]eiqOYj]@fe_#(b$"nitr&?LIR$<jBfQfh+Gd]ZjLJ8[`HDOuHUes.2F6%B!UaX>"U_4gW(*qb[oWp`m*P>E%,e5ID"5srcFrQ[Z=Lr4M9?2hJ=9P[ZCIeb/B`d+#!GB;!VR&QMmAT'fQJdBug!Hs&s=!MQ[W=%V17q.7).7uOd1F,jdYN+a[piOp3M?UMUM5`pg_@6U>)R/FtlEE<m=j(UGVAq!dC$gJcrE,34SX.GL/u1[mk)pemOa7%gu%ng/R,1%9f6feNP!PPgbPI=;j,n"j>J<pjXbdYGRGtrDteK;3TjI/o$SlP5In!%KkX/+n7AS^:Th`leU&3?9#,Vs1g\[GQj+pj42sCdOiW$f%DlKm4l00tRC/j_4NEOWjTDZp7iWYeb*A:g8HW_hb0&)o_\B8TtL4qS-s#,"h:#0D[[oouINN(?Fh8U.KW-kqNgMH.5S%?kADR6=s%D!Eoo>.<aah#C7l1"[262FXPT_I;&l[[Sbr6F486;>ro6CXjqOS*+FcRSi9k-dRtDH*t?YZO"_qM-P=An:=@?>&AU_r$`(*rnNIl%:MJHD2e1ADffV3'j#d:'n%<bgSbf##F4D;pZB<G4qp*GBV`)9\_F88#4"lN\>bCE^V;:S%GuMm/E'][pMW[_$:6J3C[qYB<_rcMK%[n]&)C4.Y\_'j"nP2;Bg[s4a+3u?t:bk.m,l<!b;C$Ur0'W5WpG:qVlcg?/GE4JmAN95RE:0XJ-/8N$!^A'.]fj61Vd^DA'IL;D%%pE`R\jh"d5!NFmHGLAZf;`t)Y$Z*N.m4CW^9V6Iu$CC5Vkn9G20H(oI-\iUY:=K2Xb>e8i1Qt,p(h@RdUhieiDGHDP]$Sp%98":S%_kcJB[lI-n.YgS[9%dlr3ng5"5YosFoBoKt)-\<0?1HupF&M@7WpKQu>EsB?MFtreHN)=bS:!m!:L>bWJu1cDSL)RWS(=4%U2@A!%7H]o&F4C,uifk.\:gHIhWqtZ@hOraEo\4lqeX4q!j#!0!P/Hp/n\Sbo?&SA)g0DW&"^f-%l^i0:@e4Qp$WNh9_8/+%e1RF=?)ECI%'\8pPEAuIZ#X;@[OQ)BkkKaN8qkp5SCS^HE9_8tS9Qli2IJ09-RsuD0;$e1;hCnIg*,`I,S#gE(d&(B2>fUJ8IG.1LX\Wi?m5n'O%.:;U%=uf7&ZJ(0-[^ur"s"-pfIkNJ[GrFl(DQr$:6Si7Yb+4\Af4rjr]ZkWAWYpH4H=Qp%MR2T6i)8E6^UZAo/4)6R#B"DhgtWmZ%K^W0<>^?->Ls($ei2Wlu8&+59%G'P!+g<shoIh28p__$m2E,ESTP)oIn5tUmV=4fBbmBF=%'E'6B.9fa(PTFoHbZ&6*gcVsa83=%%&%<FC0c=)Y<V\I?cS\gd9m3scfpVCh[s"jhXW>P;9[Tl48L[EVC7e%bWG='Z`1'J,@oLu]SM][Gehr%R?"7H@iD!TfSMVe,/9Qs3%KP]ol/*D(7FcBD.jI<a#VQR20FUdLHehrbdBg(`"QfWc5Qg&K)pA%U)cT/,=.;B8D7o<cZJ#$0ip8l/Q[?7K4Q<?6`kE8'L\T""G%H&D3f_UO`EEW.A;lfJM-Mc,t$3-;oo$!d-ieE3X?9u=A2pbiH9-K4iH$")ZDEg-!pFi&?*InJsGVL4(njK<.8=.$Wp`ja(b2AtC!%j#]iS-KA;OJYb-9Xm-#M]P[@(2Y0:tO-$hH#5r0g"?lO!S&)N)YhRK2-p8H:1$I'Rqr@W@YB6VkqtpE%O4('TVd+q*hu-E@d`X((%/NK(E<)0O<:;qE?m6tRk?LQg@U/0/64a_M\++=C?+(\`,>^l:.;srR701su]UVf^&]s&KrO]TrQpWLU`i%V6WT!-=!#Zbq6Bie_Y%?&<(;AT63]Ft5l:"nUY#W;)J`''MsK8+@I)K?=$6(48s4H4,lpR8L2j[o^#/MW:(:TZNYQC/t0pU)/H=4c?cA(09a<l"):r?b'A>%me+f%Kd2Ki_=Dis5QfG3rrjt%GVZ!ZpP_@S]lhIVC4efjVId*+m.\s*dr'q`B'ZRGE]AH2j(OSb6l683R:rj%I#)#rI-"LL$@e[G%$37&"B<\"oCSU.hW;JX>-\prbr,gEhTg/EXR4m-T?E\^sB,aOf4eVdDq,oA=Pl:/lEl56eQ9O[<WCPV-C3^a\\[63Ja%<aij(c-A%BEDHq8H-fNSq8a0AW__n$9n6\5r&=V?CqSH)0TR.199=8#Z1>.+&,SP["-/-IA8>HZiE&-n-<87[qlMj^Igc8<rgoZI+ISmFQ65J%n40+bJD+8-p?B@@reM9!MDkIrP$G[d`Z9(r>:$mZ56C,mgn84p04K@I1qC?!e*\Jq^K\-FJXL8p\D,;)1E*o!cg9Z>kMF[MBmY7d%!WY[u-83g@!-G/l(V,sm#E89VN%u6SOOi^E@O(;?(79)XpKa]8I]-L$?ce9Y/d`-j+'$&F//_.tOB7(UZu\,mcD60jB;?Y>m^_a5%6TFC\$GL/G?6Af$e*c92[.>=<%6;3=rbt&(p[E3n2LeO":HMe]_GN,W4_6qKM2fKf3OYCh"$>f0'8!WhU3*1+BA/q$$?X,N(n<FS%A_6T6#.1T8/ZL-:CO)>LjThsb`]3rj<1M;3J)<4L4l.9WX'ceuZ&uYGQ@e+r,tfN`32khiXt^h'bI^89BCNrARQ2UOKt30,s,X;i%dRqq.JnT4K#-CcJjR_c3c!GVB4'.#un7J&08,8>#I]lOPnc>3rB`]kIalm$E7=..3j*.C6qU/t09F/)o<`C3WUVVa-&g((p,VZsM%CXF>*>[PM_iOVnE_-<]uL%-dEqZdKbDYIhY4C5e#r4D.llh9lY1bX(Prp(\p:4C@=c/%gXY\3@c]S='QhpcAnke^ShQ\D$:QpZ\P%"jMKD.i+XZEHmfAd`Ea\,bFDPaS<@;k!_?/ql`k;R/U&c\/aCc967nsZZ_?A?t7W'kC<nj:BmI%$r\M%](0;a4\X&l`t+fpf&k,m%AD5@8;;%49+Ch_obcLL38O%\jAa#r=r$;!Q@mIdn8TNE4MR(#i9US*TH3YRRmjJFli(iX'T>3t5Q!-VjRJi-Jm:'l9TI4rh<Y;d1%Bbf$'Z`PMM1ei@6K!XUoGlEO+!Alk]k-5+LDM@:YjJA!.n[!\bF\J!eq'pj-NPDtt37B;J(H+U=/$pA7dti9a>7+/_URpFG`T+rm%d:lbGc-1%]Au?12r.o#iVkS%?aH>.u^0t-@j`g'1e-u/"Js]dn,)'&JCSc[ca3KN`5"5SphXP[SYbg[WT3OGn2]#[b7V^%F3TMrp%S6`I+)rFfN`a]VTr+nO/Cc'JaY6SR)UVaJ2B18$*F_=YSBm"'Ac516''g8)>`KiRB;Od?Z(a`-bNMC5qk4UScV11dkMnW2b^rc2p%Q\GNN_2T%^J/T["H3RYl)X#Jt[]/Ae5p=IYe=mN"E7>O8U)^n=73S,9=(Z*YaR^SE7A[\Fj3Xl/ehG=Tbg0u]8UEko)95(%6-)c9%q[bu!C&Iq]i@"_N<pk,-J,][\:!/KHmBnF%h0-rK6]d%+X`R/W1T%[>g<o9Vn@&d67.IO!LU3+c56+iq+L8u,[N0>F/+mF0qYRHN%7LAIX#G80EN5DbW\KQGP%i=nJ4*'EhjC?=(cZ1Bb+-*pB%!nNh$A[PaEVW%qEORQ.BP[hm@*3%gAE=M0H414a?6V(8@$!qnICIW>%jQ<\h'^"P^(-KaaiE@%ZRj7M4Ib((OrE7B71_R;LZ[&k**DbhX1s'f7"AdPBT5Q@B0`NN0_`YEQaHo\p`_b#![&:qU[PX.=K"IrO%SMj5]b\tnCGl^5ek]+7]4F!Llqrpm(cQiK;Wbb2Z9deCu\^eU"dQU(TcUR.YSWob6/U3X04*>O`c;P6,crMeA?hjC`r!VPWEl9-U%:L8.a!I4TTJ,K$7A2M#Cb#&@iiW7aWI!j5%#E-]Kk1c>FVa'C;G.o6JR,4M7/j8Yo04?"Us!>MZ:qHA4FM:fkTFHPV</fAlI/<E9%s/"iWLR^?iOO)M46M,KlN(+Dq5Bg,Z8^VJU?<Ga_klj^:P1Q:c-\LH;[:C@T%W@@@/BFJ7"ViO;NZVO[G0bSkcDO(l12,qIi/\WH%`YY]\j'K4.m^?4J<H28>9-sEk>4$0Mk:UatLYYDIji1^Tn7),S]&Zo(F31_3fj,k'FDt4Tk7RB"+]Z0o@Z&=bq]b+6^M%ZSrmb^n%ljkES''uD!PGb2D+e=ERQ`?6t<l"Zth;_]lkjH(kp]'0J/fKH(FHU_g*;ZRX`;^C0cTA!@;+/!9NTUh+X0Pt\GK5>B1.f[d\B3@A%+-n7.A_XK?#BBQZ3^,%.8B-j8eGV$@2D;g9V1<UKnF-48LCU2Fo&479*HG*)R2PqeF>ALRB+H*Z^?=5QlZ"p&:%eh6W)IREH@o't%!WKq^2qMk$9)@RV1;Z-8YQWT-O1YEd$P%GA9%0N`O!N?N?0t+Z[rc\IT%c)W^q";6!bu<jW(8fB4Y?-!Inn/2:3VlfGC//fqfuM=%XE<hTrPN>iR$O?RL9bpm2V5:)gr#r:R?N<aAGg<TVt"^[09/W-43kqOU!jm&.u%q%">Jb^Fcu+VK5u)q)-E"]H.t\k*[\dH"KQr5%mH&5r:oCVG"AHAlVUC5lp3`;OccS?6mqM59S"9,$XU5PliIg%:d1As9j0LhSHefj<J/Qt2Y_n3dlT%*nSU0+@=ru.,RdiuJ>L[m!%ld%0#9TWmjNej1Z^SgH*8CW*?gXYQJAY8W_]4p`gA-12c1MA.!/BNk8qBDPCgB%TDkWpHN14OQ[dk%"h0&=ShBUD/#rk-,WkMgN3%OKCs^gF$<sqmjeH^3P8W=Vd9TF*1m"$po/-m5Md\e@(C\=uXY$,/:4)r_l`2iu>1hn[1L>BC%=]^5k?&W23)#@gqt!XXlr(.Q=!e%Sjh(dRHD&(:m.h'Ssq:Rr7nX0#A6#e&LZ<s28ZqoQg?iL\636pEV&c^2G5Oo.R^<p(3?p*R.S?oS0P$]:;tHE6/9Oj^`-[[H79:]%,C"l0^>4%^X)q5VYW!`):Q9M/Eq]"Tc*YduM'@A&SR]1blPE$*fI8pBQeH6dAP[L2)\.Xu9(s0M<M]r:FKq-qJamH'(nTQ(Pbl$T%UX!c#+h]bT-_%QLm2lH%8EdCL*R-H'_:)`rqnU[#pTU:66t-NCdaIQQOT+$iK7e%p/^Q*fmrp/"ameYogh(X`Aj"JPh&BAJK0Glp%_dMF3<3`8Wm/+JlrU,WQUJ>AS66gFZUTi\X==cI*Qpi.hXiQ:Ya',^'3%JCh988_,K'e"O*Ok"dn[hCcpMgtt+6pWKPc\P[5-SQ2%4On.b_%R]EU`Q"W8u'MR'i7XoI0^2.m2lb^Bf=,ids=bfMVRohdJ+.4;F=hpg&Z'5fnTWgXbeIQ2J49B[*G.ti7-o0alqQ*(@)$]%/_1*Zk--JbHHs$k=HeC:UseK:7gF\G=c,9\="jg\CG7r!M8p@8IMeaOU$6rbODjsXYVMY+/eeUCC3`q"$pcsbKsJL>O]T`[EAW.@%Lni7/4KH.'>mWBPTR8jcIHL6C7<4C]nb]Y/?e00M3KdKP+iD.ZYdl`A>&7^(\?V+b@cMuV/i*isG#)n=0.GqtTS%-s$NUs;;Vg2[%T"8m,\Ujjf\Dn!Y4(FmXo=*tC&te512PQ@$+]F8YD[*\)/dt+Fo6eI>n9k6:D2dp[cDdqcOJ&F*f"(1nn3u,GfPA5d6UIbH]0AK;%V9ii&mFfA*WMY+qkKhIf6g"&(QSB-E\-QZS?o(H]Yg%F(03#K?/QZkf<3W=?IM['W1X08k4\Y@:U2t-"6u2b-g[l1`ggkFLh3ka]%7nG'KV;j??e<%pRAt6_,&JEa8R0pfF[^4RK,BAGAK44Y9G_$clcQJbsFJ^rL/p-GqDLf&nR-jRRh_&FPW--PW9,0#$aA90(cOb_3%cfF^jI?7,FUMN*,s.\e5jWCZgfR6q(DP4mapSR79qT#Z"jHf!UE^B^LZ%b0(*Hq=g.O.AO/?MmJ@6(CC/6cJ':+Ze=ST)JLP;=\*%<45n2<]DH[?bA.Yp>A;/!;A8p)k2iEFbc'Do[!$NfPC\6@PggboLtH)>@R;u9[ZA2IlQ)1!.f9Qn]ki2=NF!M0uq:T)!!86'2a),%BYAgVkRZB;UVSZJ4NR_PO1P:!BaZ,<U[Z8'((0r&B.TO_\js+]'$Ok4)#VeEUFZp02m;W[IQp30V.UfiMM5^sN0'kTs2\+HBWd@B%Igeg8G&5BOMRb=QpT`5\0<uF,ENguWmuNY+)2mW)4bZ=;/^1OeY:K.YE]DZkM8^Ze.T-8u$fh2R<BXV15/]>"d+LS`QVc#2bm=mi%h]DFE]d\hASp:KAE;H`R;Ta^&f2<@D5mPuHHdEKP[*Ycgh_7$d\!=RqI[Rm7oD?c_k"Nh%`78tJ/8_!-B8MR`SQ-hDgeT7Yano$E%%E^icposQU?,+\9brKc,;0hk2[3u3eC<tIq=gKfc.*LlJT#B?/8T*X;`>`.H^],boL6M$[j<YmE,ql22c-^3dX`8I>!o_TjGO>+a%.9aob&`7mu4(e;\1#`ms96`DDnYF>ci4O0(29hYEAb2E9=kp'4)-5&#>^;1JgGo.M\XeapJ\Vb\'1h*PSt#H;n%ZY5FPr<%#T0%$%Z,'i0iF"\risi-*aU37+l<<j5&"tq18LrnnR3AdjNfEf2%+FJ0(fUG4s!FKT49LjXarSRNb=6KTQ]l<:gkAnFijjV&#e%m)`@7^K%ZEXbso!AWMN4S6fk,]8\(Z9Xee/b,d9!\-n2!I<?r-8dApWcB1B3O_FqsVgK.]0O5ROk9L3T5:)G,8aSWOu%,0V<GN9D:p3j2Y8m%4L=;*gYlf23GRTUR\/t&B_Mp4RX#h3l,+`D&Cg.h9oo&G8[g(ek=k?K45ECg$[Ma[>aD*7P!u0Z`P6K^H,_P.C4Q"Ia`*WJCS'7!%GEVS[alr(71BUY#fCi!WqBA)H8\nOj?t-OWgp*LRS\U`/:A8+<dm"6nVeh15Mrj8PA[@a2Qj7rO5<"CoM%CtXDk3<(kOfq8-%Gij%+B#D,&Vdb-@,BQ#mZ/J@]MT[Z_:`dhYr`uc6U>UOM7m>Wr!ga?nRfK)%1K/SEfpWNR#JL&L&sPnnpGmWaS)8361omP*/mCZ@+9KX%jF^66aVQ(PL+XIOf58T:;VtYZdba8,rP=--Dkr14?I[jprUS4@gTU'nFY!:UqEs_pVq\V+U\i)%2\5eX4`#OirQ847DGh@%&\S%M%)16o)hTPe?+7!i_melk1j*RP8400J6G/i&;]9B"*GD"5^p$SBkj(@l*YLf8q^2?^c&)N8^dahZuqtKNeDhkfNfP+?V]3!]GG&XSZ%lFUuF8c<u,(IG+kkgAhmoqOHi4pufF3^5IYWb\eQqM4J(Zf=ba%K493dT5behH/$m8`K1t.[@1I:E[F$q&Upi)m-7$MdIG#3o)qZ%fG@o&)Sa"8>OVP0gmFS<eT;m'V6)>Gp#h>kroM<md_Ggn<Bka'G%T/=Xk)7-T,eLIX^AjQ1_+t\*S,Q2HJdO@W#\Ut8)Xu9#0RJ+%<]e(P]D]uUYOC9e=,opXJBFWZj2%p-K&^+8otkWsCHT7MV%l5L3rG"".d'86]R'D&X..q;+*MD4X`(r-*r\(mWDu`l?\c8\-dV_<%Q"p![X,!;h7F,m/[[hO2?,M*f:$97%I\hLk["XjX(%psplS.5H?gHsCO*C%gD`mto[GUuKptD9/Y=G_LXXcWfHN)J?k<W'mc)ggq%8T0:&5C[\.88nP+TB`3'p"HNKZ8IN2rp\T@kMYb$iu=&/r6;.%M3b3W2BMj$$[L!>rR"rPqY[j)HZum^3o7!p0,kGjI.i7jeO]+f%rcA*Zj$n(dl[-*iHI99()oOsJ]D\b9j1+"%s(YS,Y(B1D7[LR]EW8Ieef^=g/'kDIo.'Qq-0oF[-22<E:&\)IHT7GA/3MSaIi`;"%FR<u3[eY%BFmU>rK<IM-`nub>,8eh6qpW6J:[=5,&"TgikMYKHGF[6FpH39kk4UI;>E.e<q!75`b)8bPAbs%;Xm<a;/DhG,Vp&n=%_4R@f^V.C)s/-.!kb-I*#@;O3Lg<O,q"A<Im?W2&G^]NN.,Wi=Zf$`q4pYLYJ+I/mYQ",TOO(,EW!3&OT1?T;kZbotZj!Q1IaC(,%D0Ab>mT0);jQa.bTAOscS!g,Q]8*M8UX@I^IIm!pDhui_muDu$PQEFLdRo/J\oq_4V:Fe/Re+n@Em&`Qhs&;3m10OTSXJT``S8kV%<P$_+5##D&C$Wp._lNI*i5H5OIHU=UNH@"gm\J1sA;Doq8m@T%485do+"EN%05ke/dMfp*?iG4eHo2bt3umW0bfsT4U>#W*)#cRt%JPk5"9aje2?2Q='jHm:nLYGnF@B,sfI/U"o\Cu3X\rg4$qmBaLpni3,=moCliW%hB]DMP&?PdC"ZWk2,Pd^">+0!:>+1g3.1+eB,%Ili*YIK%pM+5uPWgF-p1\mKs:b=TW*_:*T^cKhZ<>L'i>T_l.;G1%NNrEm=PpZg.Ma0"Lnft5ZJ8F8bRb`(p#LHcuLrQKmRme#@U%F7SFFc\NUWe0ijP=!opfRFS\Yr.\Ad1R`YPLI]bKQX;n1=an$3W6DX(ItuVIH17<ph4+8'roK&b[rsqSc!>1.H>hZq)h%_AjBCU?%f!KS]Icl6Kd;8^Y,fc%\LXU%SZ'cc4bq"!eH[UClq":PKDWL+:)[FpU;<-X!lX.`-cVEse38==_k4QF]*O+nV?WZu^^AHpDh)g1C%OposC]@ZNEleV"#:?+Y'c=bdC&%pl1gTB4)s/NVUpiW2JmleCo<U2ei.ZK)J2fCGt%JR"h*pS*Up2>W1^4#pr^&#^oFg_8@bA(b7%X5;]N"hQka1]2>:(4#'a?2&jGFnuXP?erh3pus]QE1B)hFI1"@;%U/TqV."cXIYRChn31IEZ<mUf!uAtJ&9*47i_6*SY_53kR"ZW%q;CS@fu?#l#Y("U?^M#"f7O"\Xlo>5;1V1ogZK@2PNrJfHt.0S-@#2&7/.^q0-cg\05Xjfmb1fMfHK\B">jSIVTNloL8@['Mu4Ui%m17)=Y5hu/K)(6O0eIP1$*o&H_+uUoG:gl'B>*L)&otG8/OE$B3K9HiZZ6YajqdJ5iK]mdR7VJk*u'Xd$1;2b*>H5c4Q"?ijVG`,%,q6A0Zco)_"OS.3MPLgb61gX?%VY)4#@u4W-GNT#GF=bDFr@XJ^5Hc04'TAaf3Gpj3PS.F93XC/;Zt#Va"2H&cB5h+5Vd@_8<KS.%<W__/)9W`=%[P5^m4`cb5pQ''B1uT9m8mX7*'Stap!I_:^'3!Wl;><=:T8PGR,?c[8EarqrC(Gdp9e>hh7_F4^HATAIt$_GNFrY#%n"X(U'uUVaT?itZ\Cl?*gR%7Wo"OqRl[-+u[=2RhC/Y:na0rb(S8m>"%1X-_`f[1nmYckZCX;7hP&[U$$,9*-_*]SdDI5WTNCVn(%<m1?V\km>FhMmk]Dm/dtY<Mf3\"@4IE&IGG(d7nBpYP<)n3;nff08qA]RfYXV,WBD$,_nZrZV(8o]tYbBrT$.NZ+KP!8hTkQe<NA%B?ML/E7FjGQas=;A'9oE(sdoT&6jUB^c2^[M6t\HYOkcdm>j.AH^BeR#@BONdH;tJ,RD,m!]2"`dU6[cSY-0>p;`',k4P9;C$Sg_%f-`d]eoj!R%t6.LQlI!C[Y':mbFd3QNJ$ESh&Aid%D(HpX\Ok,A"NRi2^H>Dc`[4#.a".6oHkfgMYhG[SI&(;?j.FCOS.>seh=-U%#EL?7kP!aCW;F%mFn:"'"es>VhZaYX]fq1@/KWL"D=.=Q"Dqf2RK^6uXcm12DHMifn%?qf2ONjdq4[NLhNrHL=6%uC]iVZaN!BU\%m^O3DE:^qc$tb6-gs1n1Eui,jc8A/&n&C@ahhMH,>e9\&j8!+ZMf31T?_01d?=(5S`k'\cO5+HT*MD0oX^u=SZJ/a#4&'P.f$?R/%rHYHsTC1mLi;+6KhF(e!k@*cRZ[:Vh^H[/kX7&fuhl8kiZMP!HICYTE,tda?l2EJOkL'8_bLqEe@,'1M-p@Rgh<4I++$[@DahWs%%MJE,i!=N(V<8+@cH[H:^b\%0K8D_:r_9]N5m[_\0$iXeH``p+@h!?$T*-<T)OP;u&YCl$:ZY)asHueY)3qN>UAma8T$225_[iTtt%TDQP+*04aQITkR@ht\#<jj(r\p[YXM>D#"=VJ_88GJG#r?&>2+F+IJC:1/Uc0kPf#[K$8@qp)=`Q"Ao%n2l_*E`*BXK/(L/S;/p'%!t8RFh=(?Rci-pE8'-oGA++QkR;GPoL[+0Ie\*Yb3*)&YoTcVFZc]J\qY8(Q'3`EAOtQ.UDe!(3Q3_j;Kl(89nuAITG=N'VB"adk%V7GIk;'b@bA[GDo$+Sdk^*r(/D(`Ra]E`ADA(BoAeaLo[ej8])P2?ZG22u!&3'CQ7\TLY=G.#'^Y[(IYc9J7eA3>7iVhBQ$h4&WX%X7ui+FrLeG`G.u58e#VZ0/cQI-"\1U7!kP6@=#Zh@oA8MhQIa!(61ku^)0;_DB+&R.WrA?r*&U4!MHArTlDeA1?WM5JA-&D9laSu%V8TA&_p!Cq&)l>gAVb:e[:Rp\C6bK\P3/m:o<t1.m;Mkq%8UKl9%`,9HR$EM_8=^la4'\Le_<:r;^_6c`&l+d4#7tr>LI\,MPo;\%[B4Soh_W9g;Z40/.QO!$4hP\lB#dQ`#B.-2$mWurD&d@%$-s>hKL[\T!t^[f,Kn]Y^WY@"KA,eUinNTS-o]]Jjh%(M#r6[h[`3L"%q'Z1N9K4$_5:]r.@!XKa`XPSGTbGFX`YY)?n@Q9<=1OiI\dEnM[m2m&RFmt1J:qT0<rIr7_ts&u@jU!22>?VJ`:.DYiFDlT5s6>0%H0i-]gqNfNMqjtj%Ltrl9(h_`E$G"k]PX`QWX7p:67d#>(11C-h[<@ecY)+ieFr.DoQt6uXc*1U+7-^9[XVlRrr2Vdop)j]bm;Y8%l:VZE1\>]a].k+/K&OMLMB>We7.%^-g>Q;9Ko1WMNE=IsN'H:Yk1E8Tc`LOL8"-hE>Q8mQ(i)S?=Ol:N>t7*_E0K22Z`O<MI]g8_%QYY-BOh:#7jjWI5CG21;eU?V,Kc3M!f]ZCZIs>ZJ["?D\qFpi_IGH#qLKpO-'U/1PKj#uDlhm4Hm(qX#L=;u<#r.9aG<C?X^]*'j%;I<aF2g\l&E>Um.i`ghOU?F2QbWC)H&f+fpcTPhDK3Q8Qcn"`n=L]m_kF\nQNd_b07Li1Pc([("Qs2R/be(:!WdXEE\7GT<?+h'c%K0-CPTBM(+/Ci>&:.B!5.uQ()2nh@V3<Jg:E>TDMi@3Dua2$seB!'aE7E\SXbLoH]g"K]%0G\#%hLEMg*AJ"M(^>:G>$H?%\j\n=%VX#;94c_b)^>.Y?R:6.cFmlI&<@_s:g^A<'r%48r06<85?:L:ML:k^prl\]U^)ZK6[4m;erF\C&1BNcQ!(sD$]krJH\#&A#.f8_t%hX=6*SuiGL;/L8+3jN,-*Zj,B;)K.@4eCPl`noa'9YO))0bZ."Ik+nlPuE#>[u]ni+HV:"obA'.=i_uY(E9Hfo#0$i_*5%D*9;<d%:?=Zh/8[!-ro%V;h!u:2ebUfQrZj27K<]/f>[(C!^-$cDII+r1/K"3Bp]PerI[s`nQYWb=kS5"sZ=co&l/korn=p4Ra^<T3KCei&%I/VtDH[1#I,1J@@]CP`9oh0-OI@rZsL"Ybbf]@.qoA>qaZ+;mHUocB]ddUqDq0c]PJZKsY4P?r^a.GVD51j)nWdUHj4Z_2Qdi0O>%Md!eT]"Tl)\l@7-ftA4,m:e;RDBG0Z9L?,5q(JY[<;lc%h>:7kS\:sr]n--fG/*o#!b!I3e_QW<@%!Y49sks's(VH$U>eo'DN@hN%Q-ZYQ;XbKU_qNAW_WSkZ:i0_@nq1f-8>dWt(JpZ'ldoL1V>A']_a/G6jm>D_)kiV9YPX28/*!u0\+Z_=LI3Q;/DjLR+q>:&GaG!e%.&2R9n91hd;p-*fdu3[`1!f*)WAoHNZ3-)OhHF&t3*ohhgppUUnHR=;<s&7aH7\i/$D&#O5_K#8qX_#b1qQUk^:N"T6!)?"CL]/Q%d+E4jE1>=sj@8Y$]p"_XXed6uFh`GQj31R8QMaZ`Qf#Q%XcuO9pg.1XIQg)03RfVD2I&FK3!aEDls.q(p#'N_H!t=Q]`pOXFKg.9%GC(+YGJce@EBX5&n@oC93Zg;OqV]<`H/^?jj7Gnq^LSD"IMQPIc]hR^*^3Yl&#t)gpBM+_Q+ng8Tpf)t4W$B'L#6-_h4A]BcW&OM%n]f,/q,LXk[0"6gB>Cb,R<fXlZs(?)aqKJ+5R,lE\BU=;FXCBpVWpj(F)sHGaY-HD&KYEENOAAC)?-4LoH5od[Z$R=\^CB/-7GcJ%`EYTS]GQ*QrUfu4FnW\W=qj!V%-M[Jec"rhD]Z"NG)bUq]/`]9rn]l_jU=E0/6&Y(iLaLlZ[<7+_"b<)jGLu&lUk+gn?cFgBn(c[%3q;TII=I5.bfi6m!:A);hT/M>+9)5Kfg>l+(Btg#83^R7Vo[^Z>QolV2LA_Pf;<JCm3N(>RFU$ailo>3rbh8fT.p\QrN-N6kOMDs%Bn"dbp7bCD5.P5-r&'h5SXXc2(Uq0)+/=rAchfC`h`G]9(RCB]S1iu8"D./l^mdE-QE0_GI0Q)=FgUpA1(RD\YMXgu2qNbB]uj%q%pCl#^7.d#G>H.QB>;[2r55uS<?8cQa-i48`H["Ys5PVWK5#_BnGk0u\-E!4!FsgmY@uGKg0<J:?[I5RLqYoma@`D#J`6B=%WCtY0%";]/@&.q:6pV!p?^ZJ&5IoI-h$$ps/4G`pq99!Sb^a!Xgl"Xr&j^E.Djm1t+[cM5pIQ)kjNCB)LZaE$kd]2a",qQqjC\Q#+Xkcjl%go0("(ZtqbY'O@Mj*F)Oo>9D)Jj8mR/@:#V5p7%Bn;`FEGGVN4GDDLQ:*7cZDiW`Segejmo;HJ>K*$5/GZW_X=M;OfIgX,CB_f^B%9MiA$?9"t!<I]AcQZn1t,FFD=B>?(pkG>Q!I#m^2^\-p'l8e]G<YCqK9UT/"q]5g&EUi@a,Z5m07[*!SPK2Y>n\PrYJ[)DcG-7`l%0/gl1K7CH^rW/#LF->lhcu38cg)cnkau,8Tgb)9=CjuI#'i/T1K>3BO_<un[fW:-b#.1rSCp,G&[IW0_0pWHJqO?481]7H^ZM8TT%U<`\Z,2A<sL\7K4gZC\CEk`gblM'jOIA(*+a"WE.FB]hO(``:2T+4U6SKEfV:<>sH)-SYI%i+g#;L&%A>ItgrVs!p7CQhQHbB//[%h=uWhC'$kG;:8o&hUM%k2goeY^b^-lV^qc4`@T6PpFDlNm:u61bq(tQR<d6jY7&OCKs2J[$:SuR/`4g(5aaeUI3/b+QVY]Y4Zg5t%\>>]VF48[u7q;3nZ"0r>hTaFT-lJApcV6W+c_*s\\V9j9l&^A=^&GT+UTQjn?2Rq"0AjM\53BTZDbcUE=]j`BYg"u*CNLC6'l*MU%j?+Ua/X<\(^2qc9H+gFU+1%d#Rs7-D4oRgfehUG_R[+aMr^^s/5BXT7/kk*,'KqX%F7e*frE+XuT&hAE:PU2Bh%f)-?To>"[hYZ9%fUN'NnR^`6bF.%SZK6^Eq26:fg[bYWMm_I$atnA7DLh:RkN#RB0Y?L2%SkZWZ\,*sfNp0p=I=H,)4]>?$O;TN:[mT"n+'lFHYS&7%\9Usk//aqC;40QfVs`BWV28L@e,%jQ_:>-Jq<_O1p0qD7^iNi..*%#CBBlJ$HMt(4b;Yo3Za\KEqptV\7eet[XNhfPlYgF]d;nj<%bc%)_:Cl`se_*$*ZKhJM^"=RAKr*5Y*q\(Rd\b27<43b)#R.>>0/Yq_c0<OVkbP_#<1J@p%5kH;T`0(E?+iC^)Y^!Rot7DqD-e-Q%1XL=7%<h^.-r$5_V=n/sHj2)rn1jkXr`j`"Y>8r]:+r'&Rhr]YSZ_`hmaTrj3O.&6OY&8O@bn%Z]r-jTHuc,@KB(3P1Z(moFN;%5%L9.@GeS-Y>])<U!DO+0]FW\YB`_Mka4*=:oN4LaSRFpb#r>nY"&V"_..qu.UrSY2Od]#0qhq>26dlRG=X:1^AW_P!7<HbuP=r:JU%/Y=:4pu:b%a#i)p)iLEAT)O&HVbVdYDjR57$>d7uBru;^[hGmE>!@.B2jXluWUn\-8lmhAe5"hdm@c2`WM3qSm7m1e1k1b<C&Q?S%2s/eMSUOTmmBfVS-$.qg:Z%>u3\rVl3TcA\P<*Q0s"a0Zj7DH#8Y$dmE-Y3$$GAi/F_(NN3M"s)F*_QM03@l\B0'#lSBa?#NqSYt%c/jqMiqHKr>eT)N0\a$7Aia%.I_P90@&K2?khW@:cMJ!%S'\/7T$,1;g@,nSH)IR:nQ;^GIcL6[Fh2tj>`[,$Cr'eT0=sfHk45-3%Wumu5oC/nQh8VP4S8:BcG.R0j]i7_joR+O.T6g:.:+:TJMVsKB`Q%jDnLLlnrTj:De5!J*<nA.O3^q?_S1baM@jaPdJqk8^htqn@%mt8PRNuI.bC8Zh;Q'E0N1m_"*l\9EODD.f-3^7V+Fo8;/f]hr(m:9+m^lu%Xlg*ifE=.:N*92):?m</1XmJ?&:MM\LM4It%Q$93+%$B2F;ol[/dHBQinh72>?Qq?^fHXWXo?N",dFUGfY\''7o?4)::e\U8tUVT"))>[NnDOUC`p[PeHSJGBec1^Z!`7=VJ2=/K_dFi,Z%Y.l=X7X1iWiFGX1N#J0i/p1ogc&Jnr4"WBUs/Z`@V^9kBoYMJ6UHEcUm+%fYL!LN8GjuQT:?TZaM_Xi6<pSLMXOG@rWV$OC-OpO5%X0_-=$ZoTeAVGnOa`!.;KhgsknP5QLo+SdcWSMT:VQ5K1q9^)Fe=Jm@1oO@>L!=c8r6r>Bhn`'I('JQ0UI-D9]5,cme\[lHe_>S/%KtKR4r,aXnSpYk:\6)OSrd?R^A#rrM^/CP_c'^M_42XWc@0Pr8_>N:`%A+teR+9r@SmNQonTbMq%';_-$W35^oO$))^0Gej:Z^lF%IXMC^gmOf4p"JWf_Y3NjDT^G3l&E+DiQpS_)ocGAh^B2on!*"lp"%"8pK5SeNScfrr_Y-7Bs;_l$;"tI'/7uk7c[a=>+^,9LH"D>%F"'mt`fHEtNYc/#-,pj]PK+omVo=n(=,Y['hSDYOe'2Y+n*G]jOo0<:%j^`'cg0[Zb4Ch3YP)VJ8pU:0nQ'sb#a1gO?LE&b2^S07%!lci?cR!_CIXV07,ktfbe!h"dG,XWVdkLK7Z;poCg3uTlqR:J?3;.Q5..M$NGk_2NHuNjbl"RIaHbGolgC(XRj7p:BqV57ZgYQ4`%`MY:]W*-f_r>`HiX!Kt.r\ZPsR@bAp78I,A#1$p0-5V[iDq*B[mh7MGdc,U$-8cUBNr13k"c!$%Ou1G],h#Gr/-[I\VTlqdD=;_R%G]X+4jn8Sgi;!,d2u_Msqf?JUZuHPdd)iW?5+A$iH\Tr702R.ukK7E+D[ak;PA`4"a@c:l,J+u!4O)_XJ;-"i%-C;2au>eWf%B=a%M&SN$Dn64G)n(n-YJ2i&kB:D)=dT#3\'Do\HDa.'X&<]17X`\=:?g7I"tSr14ajHDNHBJmeY^f\5rZL+Q'LL2lkG'sHFL`Un;$ad%+Z`nSM'D^mn'p#4dF#S<YbuVi5<:j,3e^n;?OjPE[kS"1[Cmr3lC=HCG</_'@mkKOZs0gV;E=ts&o<?XZqbO;4%4"6`L'8g.qp9.%SYA;gR"jIllBH!!dCHE>``CV@K!%DqdkAEH>Mo1ChV0*#M!b/*2i"hS#;a$Er4[X*CYT!S/@jlGp%d7kKs-EpKuLOI/Oo^.CC0[K%2+!8;XPE=rgO"J2bp*1#hU(%:j<$_#dOFVKqe9[Wf]1W[&g-kmhBEAMl>>s;r;Ii,21k64.ut4K4T7,f4.(u;\[]*R`cGHB-Pug6%nKjY^U"J5Wgi?`u#<8L,\%*_VH[08r6bL:6.t&3fA7OH?kNO'6L5;P>8%(!^:b0cGg8c+n28$+4m_GHi.(R&>WB])il%Ahk%4X93%b1#iZOoAeaAH!K^7?Iqi%(=f![IN&jl1E;nDNcHlDr08_,gA!/f4RYSgmllW<`#oj4b%RXfkLDBS"*g3*^Uc\SKWr8HEo]>ZEN0.%r]ccC=3,.*fMO]7kOKM3>p7Dd4n`lYQ*M*08W;nuok*'>N3.8Wq)#`c'IEL4q:j6hGgEcb<fH^A(B;?Vcgo'']AA+/I?aEcnf:fl%C=uk+r*5@YfZ=D(fbigC=lQSh^=`F"4!*DK7Ju=RGIk6@DAb%iN?ks'^+1R/Ve1u`D`#%o>#^A6<*p&X7eJ1a6YQWW*cA+keZ<j2%Mp,pFP\-3)7Ses2;)-I,67Emdq4^oME#?+p,BSq`bG.p??!jJ>Q&?/>MtACs$o,Mp`m<)/oWBI.U.37Y2N9;RcSIDDg_B+dL_"[s%ep<8C]:5M67tuHDIb,/Xhpga\.;N'k0!^!%>+,DRal:km8m5!>PbJPCs)9S]:@&,;\/F!W;e`#tpf<cANJf31l6BkNeq^YX(9T#\%ZFDlcTS:@O,SEb=HOenB9*/HB2V[fVXK6%<os('mHAZ+qUbbJRnU;e,<Ah%GbBLM2cbXi"g/IS!LV_jX[RV+YYL7D]iD:IrWQ(,f%V1\agLXV!b_"W</'hhWl30V&T*c%hJ7oljX8sau)RSm,<Js(Ipm!e;5\c'$Yq5fQuZ9-d".hWMn`mSP7qai9>Xq)A-EnVQh(?K48%@uPcC32'K5-`<f>iOXnNA\!0T=H/UDr&C:O\IP,s;eVBjfUp\nofAFX;6Z7,L"3[ZhSZMoZYEcp05bl?.'mT)lUlWNk7qmE-/Le.%ZC?8m)m3DR?tX'626.Z>AM/%rMCG@gQOM'ecGYVMKP=&86g;MmZ4&"]>Q+mUS[Q3KLp3"-PF>#V;2ZgR:3STV$Y`3LG9ht)f+\D1%pN5$\GjVQD%T8f8CFm?7dKTM=fcX[W%AaO`Qg\Zc5@abW`j@>lGHFXL!9Q5oXhC>f^\Okbc1WR3AOLk39BceOr#$)@?MF+qQ_0=N%Iu"FijJh9Z@.L/-Y;=EMs1;n@2MY$`ctBNQ$J)qsDXg]4LKd?+/@Pjp^$@60fBcRTK-MHof=s+Dh4;5PlgYFUjrnI%9)q,#V#=t)%p%K44M*3VJNe1"qE<_cr]$fI>-$Sf)JL8CC\i5`B-OZX@(:!c>pVuO1naQ@%SBIi*,dL0YrB#Xm0%[p4B9.]f:0,</U4mp(DKb%B%8b:O6G1-:G;+fF7B#N.0<M_E-fncZV)f\k=MYp^CK/1^'?tso\LU\#o(`Q7s9WF:'*5UJ.7T9fM;-U+P5rc:,L]+LjQ[qAoo;UP3%HHP645P7M#o7qTQ_h<'t.=EEfoR=^YhDap@U8Ya%).M;]$ZiGE/k)*qm.fDY+fWX?I4Ql5-H6G@r!f%DaaX,8f7)=?.2eLlcg_<`%^6`;MDMa6_oiGR3Pq;fdd9(aF.lM#3b*/0JO"GbR8?9+4D+'s2j6PJqe<'$+1b'hImI\$nWKiCOcX,YRh6bY-gsbWgKZ9_u_QJQ*%,X+a3H2h7,UdS>"+q,/UNX;3t4'lm-BgJB`(gi^EEH7-QQ(%Q;b9u!+P+t_uE4!ON3Ehl,"SP;,383P:4Be:]K26/34m4,$A]=ug%2J2Wb.4p+-YWpY'hEO]nBKt/HLY[$Y,i8d5dlU&]lqcu5g:9rfSLkZh?\]@?T3SC/CHJh0dmg>@*=3`5lR5Z?j?jde"*e]=QIM0W%nKC9Fe]C[g+e:bA&'LBZA>KOF4#RJ+Fi.a(n#*JEe+`::+6&dcpXk7bbP/*2@*1bY)i*\1:0`qIC,C$G)f)A7'F8G";%mc*]Q\0>%IHRE+jGD7eC91(3?TVCmjM$PN1d(1p^Q/rj`<XN%hCLjtYW<%Dai?G86YJ$/q3WW>,F/Kif!E\6$!-7uUj"82gq??2;2QCgU>JIE%iNf[8.<_5Wh^>gpbBIbMP;I)/$O)<r);;HDObPSnLah:O,n"uO/\*N!8k6bOT-VNF,qJZL.@#XMWXHVPY#<Nl#V'Oi[eEmsZ-Ye3%bb42-Sd^Tig5m1/?"hCJjAfm:CSMaDQd<7+N*E/_6milHH+W8hC^'HlI6JaNE;@fDFR^M#Dc0'H)7EU?0U3<idV5^`9(aR0$DuS(%2F^kBk$#@0Ii?Y0:IA]JblsF.ilQ7ggF-j[gCc@9&Jm%Q\o\\#_8a2E'6-O$Aaq.G70]J:M3JuO^MV_-MMeZ<Y-^d7"cC)(<DF3m%%"i<X(2gIhUdX?/+JgcrV!s':oWq]?pI>(sioApEXGgp'Q@dP-;?^>Yhk(gup(_[$'gk3eTke"$a/mnLCZsJRd']nim&#N?I0Eo`%>4C]4FR:UBEr#^ad'^'MMcC/a\;%/7"^Nb<T,P<7'm,\rd>&XOp?tlO;]fc<g/lYc?FX<Vkh9+bEIFp0%:(e63PE;r4\=CGRff9h%$+03LeWA3A]fW"6:5R`3\)S@kV)5<Xa3<8.d1.%fffd$!Vk%^GajXaI4(INCAmOAp[E>@(dqgdL0j#TO'."RWCXZCjkP:5EgUV>W%qu"U-p.K"na+?=BLQl-@fYJ$JAk9$MF6FY3Z=kj0Y;n1LgH(MPdp2uS(TANnn#%Ia>V5[t2TKi.'8q^YRp'%H?"Vo7/9Zq`6?_N/%'_8)%O0L*V9+K^pXe^urDEg_sM/l6S9UiPpDOP`*6a/"Bc+rChQ]4F4YeXjV.7>C=opAIF;#-K@BAEueZqk\gN8@h#%)\A7Xeur&%G#`"olhIcO0QsnllUe?t9co;*c8n#s$a"<0qj!rYU7XlUSqH[PrhM"tb#M!7"$?NtY>01<a4L=SK$8L`pFE3\`d5pqEa#<+VTjP6%YGVf.N@LL[JVQOfkJ59;bHu`W8>dI&0'`62[6JG7\;ND^N\rQU`"8p,jc/[-lORR+a@CPf8iM_uV+Qdc]BEY1FG7!l:e93%j;dQb%(lLG(rFS]se(<Af9HX/*!V'g1@f[h3lD]6U2YD*1DNWM#@Q:?PNs@$/Vo.s%RNKXZ`8n3@HS)DV2TB(G)%kHZl-O)s9jei>U=GuB%YA0n4E2&]ArG[Ho,9uG2:O7k%kIoaj*U+`e(tkf26T\AC'0=i]0!"B#4HZP4ACDd*bKnp`<0(;M<#*S+L>(5TLe=:hh7,%?9I6A]%[4RJ5i&^*;;+W;-,CKuTPgAX'OSW'/T"`4NDV+SnG%8&mK?B(LGSDMt!i!Oa'+&c\N(Y0hX<&8&ft-aqZl,%_SJ5j@@@,4`dj[@A%6W%*X+iVdqQoEV]@icM7,^f&gdq/'jbaTP=]k==HBCO!`(gdNSiH;gMO%f2K!HVbPpSfH`A5m_Bp+j#C4Yd>oK&OaG'86%dC8jc&%=aaU8*gm^,59ct'VL?JD*5IQ#M3>2V8M#7u'Uhhb%X-,:c_;u*DtKeOEW4=$T.uGHcsU1iNW(n[BPL,,ZVcRLV$q3aUAH4HR!a2:%aHX9_Z$\*g\r]rEfVu$V]3N@o%+U?=q0MGolBI6C>:J>f6%k-]dLW>*.61V4*qVQW(/%j:fQd:P/10S$*RFKH7m.j8L[!_4n$sM-%-g-P5?OrKn"l8Wn\=PHT1Y9NeaAD8&4WO"QSp+S?HFUm,5u[@WIp*@!c\<(k^])g%-(I&SNV0h'0#K+=IAhqMejWC!lZ53oJh<9$%ej3*S:BP^DHEhdC!m7#H)*;:e?+8%@'A8Npn[#oYfR%m,180YpO<*(iQPl;R_Mdg"N9>(J,P<d+Vq2i6ek3"!S=B]=RA1e2Fbn$.%Sb_,\]+#E?H!%r7^(;Zt$0CP=ad$1\WJK:-b4VpaMoLe*G>8Je9AP?G(T0JG-]Mj#JF>[<_pe@oS-D[S[+g>gXB0/7LMa!!!h6F7%ZYil,l1+E,e$N$%XKf%o&MotQ6dqN>3NWm+=GZdW&Cs^DDJ)d]'rf7PW(=Vsk[R%21tKF!e;KAO<2>sMDEfUKDh^0.m9@\5OUCLJ%`&G)MYtV'QF<"#Lq:'7MCA)/1Fd"dFYE(S4RmU,d9esR!Ff*0:/_b5Z]Yd'Ho5!ko\5YZCf2=TXa#[i)6mqe_;Rj)Vl#/"U:O^L2%V/Y8DPs6jSMk*.Uh>C&@i=`g2I4p:Io8dIicTlqk@0Nq-PM6d872$rX3tXZZO.H"35W()P'COoSB+JTn+Cep/K?/Dd@;\<)LCAAC%>_lFU09n&U69&g[(U2&c`CHj#P+fBG2Pc9GTm9-A_uo`6mBTsV'$4:TIWRlQs82`'?TY;1m4VGQ()tHAX4cglKA*Z"b:bGJerOUa%&*s,#q83-Im+\^q#JX;_i6AO'qT22)hAVk&W\L'+gqB.@q'_rhD/3I]`PR3IMBn'g\)F+2*Sl,Y.05p-=unlB.s=!GXZF@hq91`3%G''j08uLN"?E/FA<p\D2_X?5TmhDtU:@/`Kec(b5M_u*KY_s7.mC8J5Bs\#%Y*tZI`f&[BK$9Rg$9Mmp9nhD"rMH+=WDVQ?fh(EB%n)MSQ>I@gP`GX;pMVUb7oM/J2LX/qt/bees\">QsdQ63"KAN_iUXW%iO"E",et]9,_@A+.^\DYhhikC39^gY-7dN:H?fGuB^F#kY%)-SRb]mVI_d0XkXFlJ:WZBE3?"R8msSGS<q[rDimd-=@o@mm^5#u9/GHY-ccC@lQ2=8Sc2>B6mp#IW&)T<s$<LU:CbG*?1Z4`ZBl%Wq:Cs>aJd,Q:&uI>RgLpb8VJI&Wc)I[Cnu26XF,l/s/et?cp'#)09p^%]SJo".>:C+dFg'QJ0[RO3>7EhE%3oT9Sc4m/jjoT&/n9%l$hoQl)pI-aUV-R\:.H,-.UEiT+BCD2-lA@0O_`g=A>,]9@lPm@i&S?e4f`]=4>.8'!JG*;`.iY;]SX>l+3<9af*N4Oh7Ti98_23%ZEd9VF@il^Z,fHXWp,]E/CAOtqGBtRjD.iJCVQn6g7367a(i2]>.SD8BKrN]P(Y`qIUB/?P(jZ8fspck\to#Bjh"Dd1K;gLX^>Nq%<);%dX\ErN;tpUJFQpAJ5HF%[_UspMkusRnZdehW:%qSFF]V;(A7=Tr?;6d9!7b-E[@/_IJR%*5l&qbe/NN;`=48JGd`&??hQ,n(%b/^6=Oa^9Y-.UG_j\,'mF@jQ0gm6KWC:Xh=>^`QJ9<+h(F!"cX#2oE(X[r_)m!c3(*E7uV"_**=]I2LZOfe+%1UgcG7DJ;l9,^]4%mG^Y1e[<p[ZJheCc*e3.PurpqM6CJe/@(C'm7S0BUfKW+&#sbCR92bPgZ?#@VkbK@m#JI^p%2DWPa"_dNl/6?dmM^B)l_nU>!r\%%kL]C*84Z:XDW@/6UfdI^G?r_"-!t^04m+;a9&BM(GNg)Z4[XTVlSWm'._2i"dUbHQ]R>5a^Z_i@$*A[Z`d04Sa`,L1(6@I$pXfA>%H5,+=FI/h)BrToGGG=f5RloV.YE1ns=;Xf%F'%O0]l3PFc=26;2cK6^k7f50g=1An[63msR;t$45%X.qEZn_DlO#]%k6B8qmmA7(%a5#QWV@(65,`\s+Bo!V001f[nWNNuq-"jbsMg/cJ4jhPjWh<!K)_*GrKB6k0+'b`Uc\C0B?T-D_5I7'W1M0!s88R..c+<^3<'F(L%*"&B?;NCq+jh#<kB-K!<,uHb;mQbM5`k0\LKf`pj;.H.)CYRX[*\XU[7hf`#kC.N]]p-fk.NgXXo[T4]Q`fpi@ofJNE(tMPU@Rcj%A.4_@mX&fG7%gtH&^R*S=T">Z%[M?S%eX73WdC5)o(mN^+j.sA<GW_iV%th.ZhH\V1L2ie\aj`dZ<)0XWV)M8+%<60SaPc';spo*%3MQ;HZ\mY(f]>OaYmo-qOJ0i'0Bul-/VOUC*uuk112b"$DR`X<Q-"7*rFd.Ygi3#ZH`OchiNA.u:3YLdU[kZjkgN7O*O\c+S+?DR%Q]u[6?.ZDT4PIED/h+t4P?m'bfAXHq@]L$?o*onH:Gp0<Q+drUnT9b4lSX#tmEO"#LK`>8p;5OQU"_u%5mAPj;Yet#_V0p/V!@Yk%cadNPFR.1D3[4^[ksJl2[NZ?Tg=p)-gIXUG:/A">c@ekC@lj%X^-,mp^IP&n^EuPZg[M"O^Qs'3>Pc/k&N([u&^tkYAnsi3=N<1o%QAVn_B"PK(WJ::AccK;CXusheVTr)XFPVo/mQ\02Z-Y:B&X0k+\<V%77ZYt8F'"5BX%4gT/Rur!(bV(H0uX]N=XnWW,oIH8do=;J%nh.MUEEt\P9Kf?un]Z<&6@3H9=9l/\CW(s9/:L+L%iraD<2+I)-TXpor^Ord6JK*UHb]"=p6.mNVQ/h)*::-##ue+/kB8_cCA/X3%qK46d5>c%dYgdL7RsA&/G;/KXk45pdqWU<5Cq7)Q?1e]YQPRbg91t2.%8>g;Ii!\art6=npFaGQ@68jd3DZZ1bN5ugmC^\4GIpd8%3[mM_i<n%XgM'*$mc.i,B(/OXajG^Bo\.(+U&'0`[8WiLYdg1PBeIa"@FM9qigp'`GKjDBe2iRiM)@Mq$D3dU,(@q1F7RtN:9"12%)G_qZCOZ:='8u>[@t`d.ku[8t\QB_Ulup)+9[DHnrk2JI+)JU`n*T$U[F<OC_rH/KV[l@iML464Xkf1?"<5Ngk:8!P#-3m0$fdfG%;Q#sO*i?']#=-%K&a!'9l6j>*SbaDR[2+0t1buK&9^K"X\<q)W#th,J\Fo<WQFidCqM?#OUg:U>aT=P0/p<0+kZcX9Z$*GK]G?JW%=;a4Hkp8nC=bjpF+PI7(X&PIn_C">RI7gV&YGERH7=DBX4@qVEnJ&>=9:'`VbB^5%e>bD1@.BF.IpSDk.79<^_.KF>[hs,a1q0C6%:!.(G+[nsY@D?>BHM/mAngCms"\eY(GI_)7jCp3Mn[.Gu7bLf;XX/4?>1Du`9WmI!`icJ1Z\C-fpgE@A\A"IO[u@BFVeW$.jZZ(X%?tpLkqo>k*qf$EtXEd^b]$#/sJ*:$qkDh1hit,Cq!R+_#f$S6K`mV3#ZM;IL8L(^q>J+_EAuO++c<30OXnCL')``O4328:>SshIU%U'Xu*YDXN=1]=PY,aTN[XPL9>F>?60JRG>GW=*]o,h3OB?YL`)].5-7^,k/>P.?\@.XoZo>2?>sX?%eK&T=`f;JZ6Sf^(uj3<pG/%EICA0GtL5a!_3!6@OYsVS?)9[^n0+1;J.^BHW98L0cZHgEkeNl.N-5@XfcNi=NAU7]>7UiqgGbGdcr4"m!`Ef8StQ*>e!cq<;Yc)%<Ie4f!94sQ5:@)d@![]/2:@rW=E^46"qXl9k>d'&oh2=de1t!Q:^,LcL8-%Ip;8Aq(oa<7R&tY<Be.]VNHu"C5HP!G/4l<L^m5n>%<-7bQURl'Bs.B]QI7R4B8M"2i`mZ]DR.f&&V0lS)aS+Xeq4b?0rE#?V-$^7%Ijnaf)qk(-.3GmYa81Fde4]TcP1\S"GX&^&0?FUR%s%E1AhN-I$9DPmM?eN>nHkEO`%]\JmU^V#80N2\)b,p-k3#`4np$56s=5V;XlKqomkg\UG9g?_-9t])]]iQVU`p-(gqSfBgG,sLr%c\@>7ldsuDP\Q&!H*:St$Lq@!da!U4p0PL-PhblDIdJpY1s]/tp\JI"jQaXrI]S\_c(-BH998iD[@^XgrKTUZf<>.TIQtCE,iN(E%p(L'D;!n6g^Vj\uJ#`;Tme(@fEL(V\F;-f>bE#PZO#3uBVgJBr$Ta19o\j,kp:'m@Glh"2]mf?Ch39JSY4)$Vb*l5;qXo4X?QX%>%Zet*#^(jiM52>JU5+nW]FSBm\?i.^nKSn8$h<UCI:_C25`GT>`n\'CRBlNpNINhSPa5ncJ?GH3X//OLU5J>Z%0hrrn#\GCUI]m,U%K^3;?lHeqlMpu[Qh!3L3cIEHookTURE?e\kp\M;RCPPI&rOCI_I<;uWqtPIs`?T[N?gi+Jag_+h?d4^\Y@%/<EI,'1GPCsAfAp)Z%Hgg_*[D17q5?2EgnhY=^rnQhk52I:*,5CE9IdM(Hlet%A/s8'Fh8e.=@63s[^V8LDf?oo0E-an;]medB`>@Pg^"r#+;JZrUePB3S%om![4,d5-jrI.Y0f"IN98n2/`ldnnV\bH/O^G#?XoqUr_o=]V+l<\hNf2&i<nS[ukh<WZuc;h`pIQoK?Qacf[mRPj'8mU%2[Catm%bpd:2h<UEEa1*&7,/o"UY@%/pV\YoQ&+B0a/!"a4@4ZcMe'rWN?.nh_Ibi\B5J>Z%_RNcep$3oN:qtVc4[nEe3dEgCldoGtP``m*%n+CI'&?@'sDtj+9^XXu'+8aI!IdN@BVSi&d?GER&9Q0\%79;6nX'aWHg+MgdCG-Yg<,lNaf<;l,i0k:5.a'F'U#E?r16W*J)'?,)%V<j?6\\dFAk1ZX[B'OPWT6MG0>E&),VmmP&hMaq4rV3G]nfl()0*It(!Drn5kg&U@"qamh%?@&VHk2MmA".&A&WV[6)P>9OoiW<*%r6sH'Pk%bJp@5"aFhPZTj'(R3qds[;+UBIYcUZ98#1pR9#-7F1b0]C<2`7mj4C$&os4_IN4ZpHFEd;T<nT!q\h`(Nc4TF,]gj%H^%_l\jIO/%-pIH1)$j6kC>iC[\Qqri?;@f6(KWA*l:eG[#X\l5!qrE_HfphJsca2aWCHXq*ZmGY112b"jd-dEWS7tn1O3Bm0lo%Lmm%TDqu.2Wpu]"t)'*2@$A'm?b]^S[2_RNVPT0IW/ON<efM?N0We4a(FpW^=<(0S/_>F.rO2&`!:RajkRms@5cb!a!DV!Z8Z:haM2VA%r`L>_?+KoqaH62.:jqT`k?%&P?>\2)X0[$8$:o?$i7R&0?8Afm9P=CqE!5gok/'?$C[cRaUQ@<62Uh,%jcR[4r5m5T0`A;Ehq;@>%+8`I\2X?$kRpJArLVbfP/=6:Sk[,Hj6N(u(^/c.g5$\49@fba6LmIF?F?_AAgZMZ;-/r,tFb9Kp(Y.$"o[31_muQT$dq=YiF"8n6%-Pt<5qf0)KHoDfJU&2F7;#-P_?`8A/:Y3MSc&(QB`RCsNk5!4Yh51L.IN60SP;Sf8[<PkWAfI9".s!5]j7mE&:b1\CF8>\-lIq];%Ho3dfoQ4"dELHeXh`ZIB7ci^AA6lCq(QHS^7gZ$j#j+U@n7rT+ZZ"1`r8CJ?RMB(VG`9ijUZ+<JoI&R7!UiX]\5NP4^rG7.J3OiB%m*El$LEc]&7qQ@^eZU@G2iQWq$\&qh)hUj%pBDQb)eRLmpId];e/p7'Df^4"W2MpA2"0OYZMre.lu2^8clSE@efMe_XU1Gq\^D>+%+W,4BXb-9Cb#S74^0]50]MBCNX)R%UDAcQfoP1OT%0up?=PL;dq&@_sDLl*p4o+g-`"P4U99T+0!83=k9ej7kf$9hqADs-b*?]:W%X_uU[]\0p'F-@"JUN0Nk<&XKCD0UA'Uo2ds2g);XG#2ea(_\-F@D2$jQ]'h@e\\\51nkY].*Q51B$?9pfq6W)77cM=2JZu92(QS:%1PN_\=;PoDd+PGqQhTNVO%l/3%rt9+4h%GpDiN*.`prRP7;18jp\hE`_6HHd<c)sp[DQKDk>ptdc(kf1b?MBdD3o*og<62/Ismqr%&Hf8'-Z6(kU`ml?XaYHe4g2*l\N^fZOFDYp%$FbE2h)uQ_>??2qp"ffpW^uA]opGDU3GnFgem!Sb[:Ik4[B__hR62V[if!;qLFQ2%/E:K(_k.a;pp<q$4uuh8UgEOAB@e-$X#K:/9_d)/bV?O+/ab^M2VL88HsM71:]WK>).t)ZO.)#8+*RQ"`__.,:7Wan9RoW<E-bs#%Dh:`Mbi78b"o%YB^=gCWoE0"GjH)$'88Bp!\L$6'j'ZXEc>t$d[oP6=gPpKu)<UjleYQX!eU,NP3-nrm0<IoBi%f/tKuee8J<>Yu%E]>,U9)mS)7G<oh&m^VkaFrW7DlgJ"7156sCum>7@s$D0nM'$)PY<A?hLN5]L&5\mTIW=T!1g/E^TTN"G#9e\Rs:Gb]Um'Sj1R*F%BauAaj@mf9#$CB>e=k8GCL%U!ipPNgD:QRBCD5Tf-<<W<Q(!If@5[bg6GSG9>8@L/3T,h7eH5_"'+As?0BO_s$;4FT#9i[rhIM:O%N0hjIb_nL1!>*#a3<un34?*;fKCR]Y]aGqoB13hkT^qp!?hoAFM(;:&R]1`'$fu$\'H[a)e`c+6/#%-G^='Ts@jKQpd!MtIQ#;H=%>UK9'#E.G^o#V2lbt2b=k=thS>u)J<I%:d*C:`_6NnaCD3Nh@WmR(Y[$[*]P[#BT/=-a:`/p%SYq!-?()lQ[D$(P\h/uOYt3opa#%[msfF(*\p<[J,B>r546(fTj7oL#0W;l^hqNKGkEb?*lG.qVE/Gi439:%+033*CWR6f?LDGOR!NtiqB_!Bfpjb)Fut6"KDDF"_08B%gq!DTIP9+jErMU73V_&Zok*iRE,>&]0X\mnP8#bA\XhlEm-7U:C3B.?:@IK?6;lD!Kg)<UebHuDdCH@Fs,0!hpko"F1)QG+;<6i0%e$mDj\'<!dO'f0&4F]kUI/P,^oCaF"k<l&Me&TeUT?iX.T)SVIpr;JlRuq]_ILk[mSdc4rJ)9$O#'0SP)9D2T1Q&HlkK$J;s$_Z_%qsho6b+-()No`]`kj]un)Aiul$N[LnW@)"$m/_!I7p[j9c8[_/b4WNgPA;pZ8mDmh=qTAS<la:)E@/RF5+ds?Y>16aM(X6>)fq:D%jQn]TA;[F!q4XZpl+4p*1G/oYC#"c1:Pf<TPNm^:f$,c\ks6ptO0#V^`gh9Q0<9#mbO;J8nXs<h#;Oba,dQ:ub!JDQ%OJFGH_k%H%NrX`d^og]V's;Y]C`B</(@71Q$hic+TnR>Z)QPf(+`Cb$WIV/di?'.8Kq5W7N:NVpOQd*6NAA0M*Lm*of\&&W7%*Pj4oT`DR^M;h%5dJc59oP;aKRpL".g`m?RFAgte*SpZ`Eiu>@/AhsiqLlr=5R>3$&/Of4X54^l5=@g)?>SIN1ek;$8ic<1md[9fgA+alQ+8G/QE<O%Vgg9]qA\nRKBg3],l8/>Qc8R<.rP=@SNKIGd$B@Y94-r<7Steo%4Jbu:jm6UaQP;:8Hfdof?MYSC!hb7IBN/X6)1kidJ>j,U7,4p%UIE;-4=$`]0su;4)N8YnO4!sP)^g`2kCV?*=0Rk66flJ>d*=%/7Dm_1<:2r(4]*8QQVL0f:*h7jZUW:J5qWEV9WU7_jlF.-09-IL%ld56Z\`@</(8GGjQK-^R3HnqtDMhS[.1i96!Er'f8&[V,A=+1"o'^tAYUdijTQ@6_0,!#tT=<.)015d)B(:;kW3+CY)=YeWWHJr5%b;0c5R@P&`gF<be;spXbS'(tiA!IM@*:Uk]*N8=Q^H=?^RnnO*rXBQ_e%&(nbqot2h7qL0%hAmUs6m#^G5(t3nF(.#C7nJ\?WpYA%gtK[%g\o"i'kt:pHqa]S,N,qEVg2%8nT(2>g@'"BH$+@Mp87Q<31\MhSnro`HZ^+;WdD;S?t&JKAoM5F/0$3)5/F"$^WV7`n#?9%%ioWgLY[hQRTQctS`[8(KE9=j*c'3\-hu%!=\;tpi:jnk']`jmOCOKV9r1"-qB9(1.[km2\\Tr1,clmVoO<j8Cl9T?AWK(FGTukKC%4NsX$[I8+jX+MY)?tZ]_=5"ZGljcbM>hAMtemNa/49c>=g\Ao/bk^_L@.EGq)*_=j/L'(YDDC:V8Zr(]DP<_\8?Vt\DWUFDan;:I%/Ta]V,hJ+<(3#tUEf1Epdj<Uq,.Ai;K]MDD[tIs/8\h-ZXB`I]/U!:XA-P!0s&`G:gYJJqQW>U&'Fbep(U1?"!DKn6!3l3["XGjR%ilCpGB)pgf436kk#E'6'[58(A&n_3'(4c^r"S<:nAsFA6P@?35^[me051$!NMEWq2*5*T,B<T)8bLU:@[lp2Z%t>\J<OOs)1m$U)%+7prYF8Ar"mQ>9$@ITFAl^,a_3r"EU<d?b%.PjZk<1GG"n'`>G?=$FMMh%YYg(5;irXV1PUgDE?39O(NCk:uI\_2QOnj\a7e3gR4%i81XCM:jSY43rkaodbqB*qRp5babIH&qb_;/ulK^BbTH&<3k/>oqS\D2.Dp<OCT22^2i!(`]d&,DsT+/Lq2+A#J\8CV%^fDghCK>%R9V1&X4:;1#CN#"q#Qu0RF7u'!a=XCW?(L1HGbC2`K;&rJA'1`NOC[K=OEQklR+3[EcCVeLf,.6^WP$\iA,+k80DtAT)s3.5qp1.%Bs[B;rNDlaogC>CbqZiJUW$HRO0D;sEfhRR"+JJOKEIL"W#*]9LO*NEfA$L)%qY`'IrAdh*,tbpM"n:"Cd+!Ei&tf(\U<0mLK^qM%_;W\MMs0Y&?+E:1oilf_ZX5l+NTR-^^1%bM6ZTLd"M\Z-2)/ZW/%KU]Gp=4UQXUEfDH;3Zbg2,s-b-UF!S4+7-sDf*\t);IJV26)%mq!Dm;jG9*?juK9a)j'69#att%+3QRUpd5:GA*:%LIlNDlYh@uPh+hgQAo)e=Yom1ru>3F>uY)QSj'M?5r_OD5Q+qf]n_0(?Tb.E%RcDuYWOYJoUNS4[A@(dlj"\?I=$gu]r$UUZ[F/JKd_7Ce7B#:F4;'!;1md0/iJM")36;l6>Isg0#dn)GbFN3aF^PC9(n"SXM\#+g%.J!/9GB*!>>+2Irf\)6">h<KC`C</5^,P]:GO`h*O:Ni;KD-Z,gGee=q;TF?$a/fHrKY:j>8^\t_tkm5*#[>b.MG;Wj*/=I9$h=P%NjQ'&1AtU'ILlJ6SW"gWh#8`FDKiW(EAulQEAh%V,Y.-oGupHRL#9$%JG]6_U2?5UHae>mc/N0Y1W-#Ej&+`[&LsA#3OiK.1rNK0%o*a$q']*&A.K>g;mbIbYe2Gk^pJmNm<#:jp:5;rjj<F<'>+b%hMq5ga@oaK5maob*6S?,oGo$=WmXL9[/YCkfTY':#<:m41?`-u6%+Kkl;&#mnPP#RH74KcE1KNnDb,(mDn0sl@U3J"q=TtqdK:=pNbZIpmnqW3TrqA[_`1<M@Vph-)r35of#9JXd_F&!=d:d,8EEeEP]%*&$2'XnL`9]$(Uk<.[EW'Vg]CMH)0t(MK;[h,GT@TtSIKGrUouC2jP+Cqeu1H?[WL"NXkTVBBUgaCIbS?B/13ghd2VlMW^P)>@Ts%D*t067sCU7@Uh=Q$Zdf:&m^12BG%RVb'\YG*4*HDVT<HGr4fc^fUD"V\mGA[YIf[4q)gq9+25JHnHJZ5n_qgC^W+Ou4u@?CJ2q#a%s7+usrepetnXmg<DLC^2jl?5H+Ij9^r6+3*/(Nc`mHO')l0[A&o7%"B&9P523*`Kn9F^KXYMnU-JT2NaE=K+hZO(_K?,Q07Tu1Wj%(c_=5pns"!]YfftSETZ,-O'\Ar%IuQ%R9pok^Nf,J^&c;94Qm$5MsXeTjRM0h]F7,VHGf.gDP7\Pmhc23M*9;)]BEfUcsb8TtgUh%f2uR>!jiQ.8u3#R1T^]$E!B"f*\\$R!Iq!&%0H(eC`**4s-rr+5<1LB/g"8?F?0H\_$)r'JQ!%P+0k'`A^_#D&-+i9oFU!`8t?M:%@Ha0h@f'RnE0kVTpgnH4n%r9/ESZ_jo?*@2"8E@6O$442^MN_M&m@YOfsc?1mk-!jU0[Oh)cTXWI.e<t2bXQZ?(2c8guW@Y*&rMK%5Rdk,?>(i#!,U,,35G/<KG]7Z15K_#e<3Z=>g^/pK`_>E>`3e:,<$3$j'ncA9q-QC)j\J*(>@E3!Mef+pMH9]!";%6^[)jsimn/6%!%'NJ+iJEr>6^*ZK1P&QQj;)^NIY\LK>AI1"0-Ko(q+9qA+5G_+8R-"3ZBJt>gK4.o=4k>G$S1=0gNsunC_Fo0:p"98#"9<bCLIu%)L__Hq^,Z!^'Xl3Hm]b-$\]-/Y$+L/\C8NeK,TW93CM7(G&KE&Fj[.%Gnge:CuHs7VhcTSn=gI\Y"m65"d?5L@Kq?u6T81m<]N"q%R81ttc%nk")ZYoeGT&FI#U%4nFBKN\Tg6=l[OdUri058&G2faQVaV.N`s"L6q3MS31OoU_j"lK5\4BGV=#PL#Q43r7\%K$6q&JC^%[]Moe1*G4\h^OrU#QB8)P$9h]1XQ#?Jabh@V`$#L)W4h7j;oODD13J!@7Gc(bQtZNP/.#m$;;Kb>P2CMHAoW.AU6e4Dg8,`o3dtk%O#EP72F=&;J@MKD1Pk)d3#[;N^0rc6c-_<[huoRl>0&6>&E'KHHOU0q(A9%4jFi-*ik>POj+KVNok):V"2<_USB8PNLI&c>SnBK!%#G`/<;;R,`'?OF0>`b'`k:j,`^qO)>=5^FA]c`u-!fQJ-*!*e4QijJp?ShBbHe?,n+sB/>:P60k!^Ta.1nY`g3jM)>[Hc%-B&HL0%@SAIogBNnB;8_DG2I]'L9gE*(.&?u8Ig^30GReKq(>@7l$"shXcf5BL\9nQ/%MPG%L@$aPkF8.TJZ\"[oHH!C3Z`:sJ5=Jqc@CT-%q'"WTL<9>!9S:5L&)Kg>o*ejX9E;=k2i)9'R#UPI#F06'A_UX_ae:\hkEWs#jA#NmF?J?BlkS0r+m:Y2-K"H454$W(&HWT$o*O#,%LqF`&c4'K$4^^@eIQWNE(u!,I%0Qet1WuI*I1("O%"gE*e-t-\%f&2XD3/(TG]H+T$U'T,D?-^]=H3Kr$NRV$Z3eno1;*a3#KA,2%BE4>:+L'LWj=HOVY(n3g1C;^Rplu(W_%mN6BS`iO[$c=b4>X2uJ0\\4!KmS:1n`P.$s4u@<#ku>.,/@O@tT>,ihKaVis"9@%D(8p%OLLT($90ncJ,o[<gCcZb2fK3P$K5omnH4V\A1bm<e64!T6i!N4":g"O`3ROPjN:t"T_<'k!>#g^%bkfiMNG<@CdC[7C&9(RZV<oK%T$8DYi'],<,FC,8)%n[.9qV#]fJNc5>kq-8Cfl&B]G=S!Hl0]##"'8F6gK^;C]O39BKBDF42?#Z^Gpcb;.9Of(p5HT"rJsXU_8='%#;kOmG,$Q4!"'`:;a#Z,m*KnJ<a_T'j[B":JTld0&HT!:V!-`e[6N<&kS"F>.g<6^9Y$i3LO"=O"uL,$-$C0K!T8V>M(![U&jrUq%0hHmn#Dars_8OD21jd8#UC]ck>u$%JCk$4Pq2Bj2rhP^Y"pMS\?iZYF\=%$Y-7?_J@+u/B9oj5NWeoU-B<[>\&SW*ug\&6npIGq(%DK:hrZG].7BMHl_#cherC6s#ZJN5';/js9fjGfUgi=1<7lC4MX%qU"lXMbhU`p`A:+m;CH0M`\@BEKFC5CnQJO@pE"4!A;"[]-rm%mFeY?8Tu#=!HX,hG@W-D><smtEGGWtC=6BR,YQWP>e6tjKQL;O.I!u>-,dD6[h.>0E_<tHRLH''MjFL.$`Y5r0T_`uh1:^sRl9oH%;1[4$O;Ve#f0Nkt)GI5P,6Hq:Jfp!C6;C2+WNnfMajEZW:a8Ye(q-3AQta?b2k:6%j0Z<qQYuoRYY@4-'O#BTZpu605Ld`M;(*N6%.ifjoRfg'g=p#qjJ\j!8335AtKeQiNk7HAJh&'0+9\`I#pCJWg!/cmXE`FOk?"j9]S=?3s#K%12'f7L8-o7Y<j&F[^5l$G4iLU@d%q#H@(5_q*T4D*3^B>-V]^jtBi8;MgegBV:Pl5U^1;R?LZ,ZRi+^u`B0[^Fsgb/<pa^%!hNR!3NLaC1j2#A[8-*/_+bNDcJN`OlG6%T[8?r#qQ8iR4.8^RoWO`S0U8!\QTcbnhohX,sAIDP<2^]>@;(%e?tTmpKNXom15Re)!Z_T<p&/F(c[.up$VD8"V1&VfVTE''^e52%+.8fUocX\i$Im,8+JFuu_%9Ugb7R:#?]%>K\nD)KFrH/iY\FE"^bk]?OAm3X%?_5.km8,D5ReZ(/dsm[E_)R2LVS*H"[p)o<+8Eq%\3d%G#7BF1\&_"#4/ulL.B-gm^,/OaRg-D4@+?fikH>I?a@I/q!:YMZ&DAH5O_K[qa(;t(:fBV-,'tKrW5W0*;M'X2/rW5G8<L\n%d'sNO"[TR"o]n49/D^GEg*F+;;ZO,McAhI0JApe.n!"Y,J3<DiWpsjI5#:mO!n(iKXeE=B7lggKa71#`<J(Cca#)JN`!h/a6cY-Z%P_0N7$6S7jKf%2EL0N3-[K_+qOk!qTBO+Ho_([MtEu8\96Y*tN&BmoXR8$$RJgf\Y!uBt0gkZ.\djL7CO:_L+1^Hg:@jNsKDHaZ<%jUqp1+tk4DNYO"(&M&#A!?rq2Cg1fe0OQV(:[8aGDIC'PkQ&QW>bOK_+#s*rfp<[,OOD4LDb6s3"'YS",-,]s&m:2qb#(#H.;\,,%23BG0,i=c@<$GHh>ZV!f_C/t]/MnQ!ld@:)?s3aa?JL<ETfMoe"+jbd&MFnL%Q='2OHp<f#/q@u1Kg<HAIBsMi>_o&>ROY>-sSB8%JX@3l8=Ou>EkO&4H;4TrT6cFslL4PmaC-4D)Q"6'LC?JY#7Z6S#.P&tZr"/OG["PV3s=R20dJ1%UH[("mFe#b8Ot!1<fQF5+G4&+%2V?)O_"$A<<?$LLkOVJ:e3jl/JXC)kZsE#U![;YmT*h754>I1_"7A1Td2tX@#>>VqjO[i_!a[i;E,G<Bjk*fp(bR?cJdgf$6e@03%3ddfuiGe;e#)1<6C'[C`mPU2UoWB'o4U<;`N]DQ)r6gaGC>m#rODjFr>aH"tD#>m.(B,607&:e;&+gbp$F23rQ$l#EV$#Hr;Qq0?%(N13,.>`i0k'E=4H-akp9;[";m4-)<qiVM(#%F=f9JS1:''uV!ktRn3?q7n%#dZ[Xqr,Ve6sIb%Ku-D*%7%)B>\_]`KKtGu,L!']%Db0:rdQu=$:b^/6d"'!Q0LKBB,$r8K>0'f^PbXqU>"#;K7me4PE&Cr*&2VZVp`YUEFT_RokhC($85l0QfkubD!RUAL+>PbaG?f4k%$7$&i%4G=]6O0>65Ym]sKp!6m.(WZG6WWbJc:^_X3IP2%8M$k8,VE)4''FSEEc'n$e-a>Y['FP.VdmB\1k^:-L-G*K(O!(LQl6N%%+nJQ^l4&(H+=?E;+:`F=(_Ha21DI)"#BU=V;(R8Ym,2"\6F^Q5$6Y':W)%6Rj5)!<UGhGf[CBel!tmQug\86u8J)9UJq2&!=t%sD%*,*Q8,,FB%%lA+Y$FW6EB=gnu/kk")gYRs:/kk"'j]hIaR'so.M/lm8+LUSnR.(*s[\TBXFfDnbeBk#G6&f67Ngch7@XnoW.tdE+%&;?@J\#*1kld`D]Hc5c2o9ui,j>%1s%QpNj1sc<?^Hr9.,1$M\M+uN5T/nB5?,i@)bj-C.,RjrEeT'9/DErfDI!WLu+Nk2(Dk(>U%IL9WKRbSiWd1-<4Ts44V+MdMN/2jRpLu<f_fF$7RTX(g3fC=\e%"g!N5bLYZCi,Q7`'S;oj9l_?#.HsJc\>49"9%dCUDjT#!X&[]%0ZH86a`gihg[Vegg`QgZT\'f&\nrSl*/ciA#t,+BIYnRB_ju2T#_FAM^$kf8OCl(\iD:cY^bmj,lBpB$Mh2rm!KS0bVa_5:![D>$%gZ'>)G7M1u"272pEBoWKqLW4E@E:C2!N_J@((s[K69C-G+)`9Q7gW6/Z6ce\8G[Tc;pN*^Mj/1$P)#!E=j6\uSm:8J%XQ6bEe,B2%4r21X\-YpH2B9&"/mtT(5+@r\P%ogFccdt+5Tg-b+U0D-!i?dcTfh3A#^)^fi`;'YE1D]T0Y2Or/m@HN77AepVPrFY>"0?S%i/M#%8%^RLOYGXi*\68<1R[X2:B5Gl69@5&K8#LHCtQg"/76GcNM.iVehIQeLqGM^rc)QSIUn_n%MYshQaF\jW*9=-jRI0.`IS0=3H+.*%BnV"uOA8U`<sUQ4T,V2]->=-dJ)6MaL$QWI;01cV!>qemg)5L0DN.6lpIcVe*M4:#%aE)8pm]/Ai=ocW;2lBXT4Lkr`^BpE&?u?S%'4FQIo7e#72a*fg_pfAHr6Sra%,+pY/I!i"\RV@I6@7T*=re,hR@#$.Gha:7N!pB[G%sq=-:<kD@Pd'u_(Q65QR/;Ub,pM/6K.Pm%E'+C,Y/XIt!7Y%Q8sl+jo&.2WaoOQ:!mYj-*01<@853cT0*P2:CC2J4*UJ@=7nAVqJsp9_eXU#lQ7EA-iie^h'Qs#r7(M>Ia\kf8%Eh/$X!Ke'#Ok)44jomL&K4hKc/8]@1$=G&GVP$1H?.4?E.?,/u`7-1<#lt.g`'?M<>gMTmMW0Sr4V>=.UG#$?L:KTV^k86n+$u&2%LmTUt;u@?;3#T-?nKA0K1RBF8)FI&M/nb2$(@urLXd1VL\%[PcWol027[#hNSL`BHR.Yk`nfIW>7!+g*L1Y!.m1cegELT<(%X+Z`%9(gFq)2[L[Ba`%!YYNSIC3(YO7LC0/dHR$''H$qO9g3kX"AsfjlZ+UegN"0.NDplb/li*#-sZp)8ln8L-HN*ZL'b.AgG>T]8$QVY%iYZ1AjbTCc_OI6jkAj(?2.Z!&H4NC1_@#8(Gmo>Q?@A-BUlQ!a$bba<,Y4\P"k;m:%4KF]eV,jZe5.tH;%6YHP;G!WEn`'11^aU]%M7Y5=B!?o8_7Th.'S-7)RKU.H%'I[?ki4sjBeUVjHB4KK#D()e&jVglJ1Mu,JKl7Xo1Yr"3u!t^mW0BoK-WJh;o2AYU-oPo#^Bn<%fR^pRgIrB!\t`R\%>_QW/2gt`@%'$cSe8"_<U%d9I7b2>UmSk=5K?4]":>6,\5k&`betn\$Tq=]&S2]G'\a85QRrJ4Au0Lj-nP].%?dL2V[)s!0`XElU[KmM%[.DWXgqu(=KYn=Kk1NYk%g8;On/?QQXHF&[)jffe&YS=Alr-M6V.D?#'4<)V8Ub"nWZ][J0*QklGRJ&\%*HEIU+=RgD19)#o5BP9F@n#5V?/#n"Z3k,\&P/]D!>[B*ML?rUO>%5>]/;sFA\Bi&NP'0QjqkPE#DJ+j+kL2ISsUMC'-3K<O-s/e%9bF5'iMadJE.uY-m!>Ua+Q%>NStkFPb`2n#5TFOFk^>t-_DOad)KP6oaL.Dc*ruS5IqV_6;;aC/:$E#-68+d!=eGQ_".&f5+O"j$%n+4a.>TE0[jR-`8KVm!?/uSt2#@(<tdGr"H/\[;o^tSp$GG.D<$4=_3%T;^m%1!(/9q,"M,nqomH\Dr7>9n!9J`(R3iu:`E!05@`%`fl/iIR[!d9u^SgNR28YD1[n]JFjDa2V37(iXB'"(k;lL@(me5$+u!Ca!_Qs3=ZLq"=jDNa@</3!EqZ!^E7J7R@<SP:_l'UAM`W`%;i#7^F$+KGQ=TV)6'V2aXCK`eF:_-+.A.9?:!P.Dl]%!1S)dpH&?';JaHIplGbks(5iab,poeW+W%r?2"HcJ`JaQ'0OBnp%#FsK_%WP2cmZ,umO_aF1,*<r%RM*BT`Hqr^f-SkK!"*_8<:m`/R`\^&dDjsuZ,GU7lWU8rTH$s+cY(cbEq<R-h+`;,TOC6q#ct;P/gm8W*%S;tN#g+4ZS6&m=?,Ktud!Jsok"A!7Q#dUs9&28kL"/8CoX+142cfAbsM.gHE_PX6m.VTAfK_`J@6SQ^U=i,GUpbrf%\V0Nl+u&Ms%(R2FtAHnN9,]^#<U7r4ehUI,3]uet`p^SYF-M>K)Nc]1@rNQ>i8\-i4'E'<4f!-p#a?n9pK3:[:AY7@S#.3Ft?Tr`o/H^]q+3hA$%9,IehaIaaPVI^Tr4UUq\#*PQ>*QHp)>%>FaWHG4'NS<<D7oGh-OSINtQ!T")i)2tVLRaHNKPX@7J_$k>MYDdR'1'@V&0h.OKgD"i%LfNm#7%bV=>X9V7-7ETFUEKK(3_3^OK5po<2AU6:%/4Za8>p@Q^PP5)E+SmL_8bfObVd`FQ3cJ^]6%spL-nkPUj4m2(32o0pMStG%==i-0GW0>JGSu,*DH_cB<%?k_7$)0jZ6@EE1&qcT0WV^-'7l_unps=oj%>f2i])ER&D%__GLJ;I3C,&E8<<JD+^P&:>NracE])#s%R3JB?B*h?TpMM0$),,lghG",n&!ZR$>,EPBA\u'9T[4CYKmPaumo"1%8U<=047fG7HaAu'$1B3)+^^c-h'Ck=$We8Bbq+`M"hJoA%khgHkf&qsrGco,/,>T>35Y:/((]!ZA)J#(GDEifBdeu]]6CbQe?q^8+&Y#;_8QR.R/1*6.7hXFiF_s9g?X#1[<RSH6JsGdB(_3ur%s!CU"CNtt:M3p])!?2u>S/_==4p*')fCC."71*YLJA_]@\LfXVhPVhD&\,ec,E4Rh!k>_LQW:,Ngk*\^RBX\.pSMM1U;#`)_@;=:%ni=r#o@(!--<?B,#ocOk&^pS&+>4IljsL3>K2m/8o@(!ae%$Z&(!TMp,gB+*aN[K`q''?;egInE"X4tR>Fu08L'b1ME=Q5T("Oa,%2"X2!"LC9((eSuX=eCKr*mkSNVhOpbY03XC[luAp%qJp6=J$@0qH5#GK1QRmlP1Up2>e/a[,_%GpB$KB-gXX%&7BB>c`l=W+9DX@%=Ai[Z+t-ul9\>su8D9\5+PEC:RVD9)NV4_d*2]beq\+MbVg302!f;d[2IT`4a>>FgKMr=JY./cgk0/aK\-7a4PDL/gJQfK8NEg@P%,)H-aKE[5URitm:T^\ann/*7R5XCbC0;@M.C2#M25m]&njOeg`qHb9X1m%5PN@8;#>G)8_Z#4!$dZ/BsT);4sBGAB:cmXu,:]uo?%V+a^[9L`@2"P)Zg9i/d+i',p!`RPPi5.<fi`,,ooK+a9Bq^WVM8C8,K:9m/;7j:RXTK5WtTK81hTL<o\Q],I,,(s$K.2*Cc_KVP)%5nV%Nb(L'n)ojj]8:oNfL_C=$4B=d,-rP`eM:]fQ`EgQU'%-tQ1@_p4QeS1!D6re;V>Mg[;(=?`*;Pp"(@iDO,QNo89$EFn<L""c%4O+W!=AjDVj=)#SD,;5uCsXShCet6<]I9<)T\-4t/u9#75aT(`Qjl[C4>=9@J[c.E;''m^2CJVUqP:mhM]>])K3FKk2kXBJ#_Fqp%5dEY;TFKf@jtU#3RZ(,[-mI9N7GSMXTX7K8@C\079Nr:/X4bq1UY\?])V#CM3^RQTEXNS\81Ymm5S9e9)e=Lh6/2O$!m(M?f!r<9%/Pr055N%A>g]C1]dRoClYTst&[Q*\^WH]i,$m,dC]tm/S[r%gG!S.U[$Hu!dM!L-TMMY[SnjaP!W:+^8'DMllE(1ra32c3Jb[D\g%CC-ap=ML[.6`nlQF\dBa/e]8ZaO-RC$u"+"!%L2YHU0n8<00WTPQ88X"ZH-;KLOMQkn;J\YQ"c0p'&YDreGF.k4'=BHml/<P4dM4%""GL;0g?-s"(AQe/i"Z(:RA`oY0.K)&OOJkI-:'fZpYRm$&AF1Op)alU0#45OQnEZSO['5SRq*mTbrt5"!/<mH6aHj8.k!Zo1R@5%+ge`?S.T3l+YPHZR'BbQ!9&fD%j@ae8fV%YllF.)MoA]u@:Y#5`Bjh6\&Eqk^n%37$#:rhQ7tlpe00s4TJ@Fs91l1Z75e`3;)F61%1(e44#bb@qC=&4oSuX`eK1q0$%>.*FFeZme/YjOYe,UX8Uo7H^W)hOW4T2C:%KjP*!W*)OB=k+"7q&2:.2ZXaEWAPII?Wb6'84SM%(b2EQj%Ga[Nj8_-FK'!'@'Ni<OA66*6lN+@Kkm<\/!F1.e.io5g;%siKGq/<frLR/.2f9TJ:QlT&_ub"JI<q;M;Dn&UM\$fknP^L%*/eZ9%LZ,JQmRGfR%',`'3*ut6E,R2JrtW*=cMMskanH-*FtQM8E^XqeR0/<rNRBZNbN,-^ne=B@^I3B%+!B.3M.HP/i7k1K4&f"%OZ8)rZU]&\g5blec0PbVMp\kdg)53aW-b+"JXW,Go(f$sd`7Sq*4!]4W)3QQ1d6WZ'aQ&`@'Zb4YdhXCotHAM3',TG$s$]1`bb/)%1Xs>OH(YAe5/`8fKV:cc0Q#AP/%Usi`*rh@U:pX!%(=mlAm&S>L%GjZpjk7maR[jE3sDB2'=pkmA^a$4(Q!eXP\A88UmkbF%BGP(%MjUqIj\RLJ?1&pSGt9Eb[^4=Nm71P-DALeF[,_7b6Hl$/)aYn<A)PcOUS>OY@*5b%;+`(R3(QSs-%%=OaQA8W];R7.S:PB_V4N[D%*9/9RQaLto&69\4qNh*rn92s>TpCe3WC5=rn*hPf!YkPU+1l4h8&PBJ3HPkmi]0'\ZSPlA@o8ET3/gk)XOrBPnPI\%_BYfsXUCIR%[#'nI1<38>AF!l+55bI1?Gs!@:oj,b)@[mI>(_+ERA;_$A#4@AGDAVL^;[f"K>OuZPKJg&^p,Qq2S>KM-&^n#'%#g"hGJtT?m1gJ%C=iZ>l\MQ9L2m9f#ZId5=_./<]YWT.OBQ!$;C$e:$6>(_:]NfcgpHT23FO?;MAIHsRgk0edO3%o:?B:LZn-;ESpc1>D+Z]+>-rWd%N&adlDD=9cQHo#F*BL6/'\2B+#RG6R<ZT9p;Q(]YQnO>3Q78et)6,0paI,SV""uJHl3u8sY\;]H>q;Y:+OG0YAQQQX#m[>BbnAPc%HEV"@#^qY3QP_VmqhEf5U*,mPX4_)MZ#HdT)i_Q;a=5U6)$5JA5V>#JK8IlAVY"?gVSal"?1('gnd%l]$kujAcW5R-qF*ZV.-sk5%FP,0r>N9%*X])2flXP!]&X41u'4'<3Km:K=0LB,Fp)?$#GeU/,L`FFB[DkRBNGE#HEX@/2Ul+U8Cg%*A03NA,T1,O'.*uN337sV_%YuY$*(m/QiSlpLCTUl=ABn.g/o>V5P(ig[P7hlgk,U"Onr5R81X9QXc4T-QF2R_RZC&etcHCc#%"0`!V&(lIh7=\!(6VS.h!6I#3%LarO11I;c%\l5VZ2Cu!=W0%H:YK]il",IhelLr_SBLJP@::4YA>=P\e/Dm`Q=!*kG_A;ie9h#AeBe#cXnO<X0[K*?HMeiE9h?gMg%C]TFq;o1"qFb#it(2E/iSeN]6X=_YR.fo2e4NbSu,7S'VXWQlTjYcbcYS=Xj_7,N6b_XkOJrBV0!jY(k"B*2O7:qoR&@0G*`sF^R%0EP9bKW)lB%&jBn5"-#qFXB/]0m`qs[:;:'I564O:]Z4_YjI$ajW`$F^bq5aWWec`M',1>'Kkp6ZoEq?/atIqb-Y9*1$Jk?XCr0Q%p^6/G&Cqc:o+Nf::3?dlCWh9d;$AMe7ishT2H*VAS>4&a]O9q8C`i9<E&/u&=o;AT%C;?_<_$?pdLU;reN+$,TJ6qM,#HsZF;<2-%B`9\?/QtJFLWW'X*`9eAV#SMu+^58+Aj?YN`:uH,StNd;Z4*uhf;=ZR5('Bo`N0H2gE2[[M]a?2$+i<P%UCb^m@ctaHmV:s@\GW7%[[._*XLct"Op73:W_QQ[Z8O\#*T3hk!SL`9ku1$V%9SaF6A`fo3?$o<-;Y!!2N(fF[AW(hWL_YH6Y#:1?jMH]b5u_k&F34_K*K8W%;U##(LUk6[1nK>9P4t01@>6nbd6s%lc$U5\@tc&KAF9^3+X)-ck[>]2-U=b<NV9"D*ak:oP0dCM1aOI[ZsIU@m&uDok%1^L*#+4T%Q$oZ_(-5[mekl=)G&"7]$sm8\cFF3Jk!i9J5S,U#&lY&<L*_cDM"3][33>&l@'*M<&7TVT'(QpIX=EaV4?1bsEWP2r^a*6/TRk'"%2Q;]TckE1ZYt0P#86`ppP&H"=Pfpkhi`Q;khW[E`_u[=XUi=m55RDGG!AMEI&@^'N$Hu%V(ggYTVq*B\C,=S1U[t=obYo@To1S.D%fp<*oE72gAT9:&PTCNJfYZ(_PKW5rpPeCg869qU).l"2g,i=cP<)#rClWqYu;+"84/LSoNpj-X,Aed&6b@c)MY;%/b-NRtdYUj;p%7s*l;LNS+m"%Q/lH<IIiNQFLlU-MblYr#Hc8hstVdMG:9g4HpP5;PSQ$p8&VN-L#[daI]^@YfRVWlHA*#>'Vpkcf$TU%EF.;MM@_%Liu*[A`V9*&06bR`bY&n@JIsg#fG[8%)(G\]0J0K<-4HgZ3_dK^0OFn2S%_%j]oC\JJKAcXQcC.jjLG1'p.37#\#0p+Ge;NTFNC;%`$SL=ia5T+%InaFaGIqp]%g_1iAj%,@5YL;Zc+]1nXN*J!*s%`GS[)(Hp?tr&e"mGE@KsXAh=*^br,WV':c\V&B*jq2.n]H=eJfB%cXAh*X92^""L0XA%E#RkMI<"FGY0k!(NW&OIa4Z7qD:O%U5s'#I5)H8T"tr.PMRdb<3B4MG869_&;EM(gJmth0Ip<eXCs8+=-3&V%+je#DVK,he2R4m-S<@E(n43QA\<BZ<WnDJcb]BtQ[O['d8d?f!7KGC,6j!ephEcXiV_\hg'9)jVET3X".P(kFN:=>d.NOiqMlM8L%#V-q'I6D1tFeTT,e=3br\^SqY/[:5`cqFkcHBI_JORbaeT\sIB#gaeDRF["T)JUOdFAX9K;FjMTZ6V;SNHHZqWV7Yf<GN6/HEUdh%eDM$2(,KW4g_s7lCb!:1:b84<r^o%?jB5AG"F6:V]Q6JO^;oNY=L>tW#J0[o.l9VQT(:MG_Fbq"hVgm'(+WWuh^K\=*6t!.Ko67I%f[M2n(2>Q7P;6?1"IOc^=;D_J^2=VEq))-%X&0n/MG0osbI9U#jf'_b#9I<mr:cYt!t-Ycjso@#%o7LRUru+-W=>a+L"ARI-@H9%%;p>Oja!Nn`CA<s,e1<KB_W3:0m7hp<IgF_#N@Fd@>uHE]'+21'o$\*uab=^jW\X__Sb:%*C0i;rYhVX8-Z]er6#F\;ArCE323:.e%#4u#[4G#h4pDJdeq0d]Y&_V+Ka)JO34+rY4G(.Meb8denEm^,J8MQ^)6[0'>WIYrjE`c9A)7[qk8pun.+_Y4l.02&Xl#EJgZBs3)%YrmF;;QW-7=T'2L]BSY_:ZNjdSK%-'?D!Rc0ma`r^$"utC>(fo($&hALWOuC^<,FVSlk*-gtto$"=ub0(bp*4>h]A/G3>ibg.Ncr%`ao's6DDHFH6EO.cc]F-SuPEcUXPrb4RQMAFOF)jPrmkOPW?cV5hYsS`(EQ[iM$%Lc/1<3/\@9$8WT&'nK^U=G<RV^@p,lkRKOiU%gOO"@4CDd+6oLcdbN&<(W02@Mr?K0-Ne\k?)?iqtPt3-UH0gCW*JSYu(Y?-L0+&pG-67C\P`YsPd9+r%:bp[3abXL]E'0h'n^;en%574ecgWiDS_.C#[?[iS&hil1m[>%(YMC9J5eC113ChuX^Xp>09)0e7k/i$A$?n_.pMu\ZJa:`?74>n4FVIA(t=R8jg"Pd,a_jX[W%\c;GVhBf:E/.^F,HScH.I\gci=*+?#hhH0;U4b;LVsi9d*Xc,M%o7aa8q_m<&tSg71r?AQ!*3&p.YPj#bqM10"9psB.eHk/Mb,.X%92lhm#\c]7X/npS*@A_QMfA](*Lu*Q_2M3$[;/Yj[%s0d]OfNZpB7.a'n_Si3^[Cb@59BKoaNW'nm.W)@&oY.o9`sJOG?rJQ\:^F%q&te,!`*B]N3!_N=;@C[5rUfK,"'4VXp?LD&g:"JfBM4:S,5I-\*5#/)D]6t*2oiL)NZI.FR$FjU&h%j@AuZ9F=3n5!K`T@.>8,T%r&,ej1N3L6e`:?cWYr2<5S#T?LrU[#).e,l4sN.;E'?Lh9?f^fUjAm="\K[F+<I9EZ&cG/_=F^YUh.?*gC`Oh2$R95*q(kh!ZhmP%#m-^+NZ_Z4)Y-%.)<.A8Wh-""j%.k>i?=",").5HlpMb&$&@U!%6\/[=J$K%QnNiEU+is!)5%[')N@Ch'XH.Em3S+T>G\gi1>s&:%d1a/]N=;k_K0YBf(KOJ[1nQ/M+!J+s)*2#K0ApE(KJY5__uQiREH3C;K<Yr1E=#hO1XN[d>U^,XLg0s<,1h@86pe%_BQSodb`.dT%-%j^1/;Y\LVJ]Q[j!8i$:?5@hB16/0e9_cL*J3L2he8o'5Cc=c%7+E9BG8`9P/]APZ9ECR\)+J5KT2mh7+m1GLkX)EdkV#"m;ERU%G?SRT_2EXt#?MV\*F'@kl**8embkt),,Lm+J'0#D?",>B78FCTkXG?WYi^e5B:r(^>-8IB)d0/<#Z]%AnAY_Oj[?h=7>9e6dN)Qu%A2Q9n_1`VL>g!lm/hH*?`1h8O(;fk/'`KZeZ,C;>hno4U<iWA![h-V47cE5kOO*_BH++JQqR1JW9nWLiaPBtZfqP@S$7%`<(58#A%q@G1:UXTsNMihe57VW5@GAU4QUPq[*CQ$=Wh2mC`aB+'<cgnV$`*HRQZpU8NL!D9MLic?S#7Qa>0%SF?>H1@PnfCdt.d%StK*JLJ%YqbDW/M`5O$0N(e!]q&fC5"\`8aR+hc'L%?rZ3DUb+pZDEE$<^F)E-a;\m)fDB[E6plb,`+b\CiBYH&JZ/[;[pMD(0'fJ\A(@F"?%j@T)_=`b"Umb?/JV!r6c+DF>\5`NBh5f$`"]XPcjRFmJ1K`'&r#^6lW0,f$@GSue+/ce1e?Ek:tljJd!e)0`lBe<Le*\XROFK(c_%EbHLM[WM5A5gm3>!L7'?JV#Pu*Ye43,LMpl*3g+\E`u(GaP#mB73Y=:-W-jHP:5%/<D+Q,Vm0_qKiY@YZ#m!u&=rtJ7o?AO0l$4r%>OZ/9WlppIXB74<Z!P!n9b]+`>Y99q)Cni&)99,1=V7CLDXg(M!g3"k*GD\3jB/OYfQa@6Z!'Rh0K.ZE#=P\g`H,QU_:E?9&Ih^L%c>")^_iWcd,&.hrqkgc&[>G6qd)Eh9'g9:fTl$i67BsLaCp@$gN^R>U!KBhWZ;shL0AmZ"OjH?($`d8Agm"=<U/o[I"a^SZ9r$&^%6<8!)JWLp><[\shZBGWo<`*CcP%DLf'nlaJk:`iE79i+\1LO=iU<cu.M&)R1<g4`?=AaE@'J!'s4r"G/K#M2"4ROe-X@Um71__cA%=Ku<Xh%QqtX@PJ)25A-J,Yk:=:E363=M;.$8gN%E79mPSM\QQ77$dp-_^8?;^8b3*pt4g&.oq9>E"<=V,=Xt*kc%b)JCaeJq+Iei%dH0<sMVA_S1@i:SJUf@Id&6?<N*'DeaK-)>B>(QR7@%;soe0@H(ijdbr\m]TaP7:GaD2M.@mnH(]"D(+i<aXVf*EQCV%Y7"](W'h%S(/tq>D4mB.TZ2O_qR(d<NPES;CO)A@)\!eGBnOd/W(93bem>dM@LF14tC=^[>Iq)KUG9/<fr9)=R@k?8\i#raGYnh7'30t=Gh!\%=JK%g]kW)J.L&#9c,4?:<i['V99.dC]N3DrDGEe7@RZ(s+j'8R`)R$[N[X<20S:oV<iYA)B-QT%W`5+$W-K77\jfeMQUrRho28#@%S%lmX=K/$mK1)[_gWo@QT:+'M0(etp3=cGX3=Srg)"KlT"<1@A8BtWnWDt.bOr(F0>/cTd:K*C3W`9a&Z+_]R/6^"b7Ea<?U5R]H%%l,Y7j;'K#,`"KMJQg3CA+bUN+VPc/"N3)rU-RJmoo,ak0M1Hq&j6F'G>!V!U[F<+1\^G\dV[YbpGm/"Ht)$p=P`us^&$F!fQp)X%!O!cb]Z4(Tnd)\E:W#[6O-\-],rPi;HWD7+&Ji?2dFVWdYQQ,ddNBmc_:WrO`_S$N#g7/U%$k(Q*AU5"O?4@147_J4\+d;DRbUAU%^L7&YrA&nHO_ZnFA2fp(P&E7/P8hI0Af!@W?n`GBg<+/"L*YOC^CSXN<@%H*O-%&6^9(e%0L!ta1gc/@`D]b>.n<thT%Y]._@'?S%WFm3KlQaI[MLS#H!+j%5;#:Mr+ms]i4BJ*4E0rRsL/=m9B&!OWAcX*(JS#P*4;m#"17b78OM5J$U[d.(96Q%b>o!/<imkq(6jGRL%Ak&HqE.Zf"FH0AYbmKi0OAj-le-Q@3=HD\^jOHWs8*F4QW$s/*iRMW3>N7G_jY`E\1kus+$D#2+1UpBGE8Hcf':ktMQpkHUo]b5,%rl0#`+DL.2Z%["m:gcIm^oZil<R@GJ_Yg68/Vf;(!I`n!Wd<Lngh@)F!R[)l6P`+b<uoN-!5W\G7DEG$^/m5@fMlG\^f>s0^E_Ic%N,*u\MhQA7X:?g.f-.f;>O'W#\^C;frG>1<01H6\qWZk`I<3)"5ikTuhD-:F&'9t8DXu!0LJ2hb<P1US9:;_?UpX]KR.4Ej_(GU&%[eS-Y[7E(b_/22t"_*E$a>8stY#u<.X!1a\(dKITY7X,#=%n28'cbY$Yr:kE*6NnR[=d.c_e+XB""&/6!^UIQ.g0Wqj':\O[L]$:%\%nr*?th<lecj72Kg*Sc9:ASg6;=cG`^I!K#YGrtZs6.Z?NTsKF!CH^*Kob;qg!T"iOBSZ)%ml+GU=ha.YJ*i9Skko#=d0RgS)1D%UJYL;U!'b.cV4cpl[XAf^lVIRl/&G02nMqL^i"cop#uOHU;k_"p%>-H\KSH'>E_40m3.L/)[>E@_"fC^<Xu^a!Yh&LYsTW.;7dV_%c]*)N3L*pX(Sl\]H_#Ddm8s^^8cVPiNBo9!9irR\4,t8O'V\JOG<k,oP:tZ6SND#24J&UVG9nb`4[VNZ5!//!kTQhZce'G.-6Zt*%i)c>TVF.dfR$`#BmW9I6m8@0iRG!r#XofZk02ER8-Fi;\))!43(+8DnEGU#32nmPlP23-k:QG\$+8o;$-,ba30XW/Bj`-_.!_c'9%PP6=%>X$uGSljnA+Jarp*KkGQX(FJ<-m=Zj#E++oSG@5!ZI;DGdd.3/OJ-uf0h21LTqJ^N1Urj\KjWU2C19LYBRdWWjJF6[PWf9E%/J?#c'/\`4U@JnTpBE&S<$W]t?D4/?$MqF:.M!)E/J$)C's,9<0`N,d?$u\fKYqL@&8t$;-Ee;mluRJo1m`Z.6INHlK1`pA6g1GU%os@u0I2>(_n(Oj<TK.Ap2U>TY(4QlIdjGkQOa1)-L/M_N9i+h-!>gguL4H:5R)!<WfqRgs*R[jC)'qEegRVH!+61nq"<g$;.A\Y)%_X07Tbspr..RWPTh&rAgY(8u6IX;rr)]:Pe*7]/b]-qlXcq_\A]=W'E,#9gRe7XDDKBIDuLjIb[*Z3%@e\PmL\k^&aPVlNu^NY6r%\+RXs=*8`;p:O:d"(H!p5`pnf3i#2Sb/&>jFLd!1KBnWBNJZdM]g+7Rc`FYnLRhVD'8LVbZb\7HHLK[dJ6g.4[*rMfOn9)t.Q79L%Ko@lIJZ,gY9pIW0\J^8[!O<SG5*:"VkdHn]4YEDG`G'T8:)PdM"PGq^h#nn(s7E0JBQ`_i)\l\@YY"V%C$Z=D%\;G7cTt4[Mg^3F%D6.@XW'3A$#RpbYag@g_%pI86APEg]b8."\WVk$JbM#L3#2.rc*GR]</Hlc:N$@]lS\CKsBQ;NQ`+[aH6/FoY5E)*-da$**89F`M%RL/=P?++'*djkDR+4JRe&;7TbJt1S1OEF8ujERimqNnt:&Y5S.\J7fA0[LK&1>e_-s"4:f5TP0^,<TT*0Z5elqU7!NiKf+s)f&rb%2%g\0L<M&eaA.a_StbI0UGfpbR-Yf5#i$ho31ds&g$S9E$@3QdT_-3>%=Yn?MjN^;Ei(!5B<'J!UF/YnaPu0A'h9HMp3TD-XU6=&%<?rWf<kF;Q7-:.PiAAP'A^[C53McI8Jq)7@lgkH).PAuL:f[#<$l3./d^!7$'Y;AG.`[G:597'')QU#*f6:jmRQ,QDNdaWSY6Im.%0])5h:=<C=3E8fbMIu?F'PEJFeH+IE/eb:'?-$'c2b,r5@;b;!Au8bY#UX5/L><9T!?S)#fkLm1r(59bC7@R'ZJLH;>Vl78^NYJ_%8=S)]m>)OS1TUI/W%OeM1NRJs)8k2V?DUYCDBGk,oM<#6-ms*!i+1=*4]'-@XV.,TnQ_^bc-fkAOHK#bWrtA\3LI1[W2ARo*XKkF%:QSV6GnJ&;Fq7,7X:GTOF$D$CY6Mt6O66uVK^%)bX:>kDM/@55[,FL>l/'u2_J*)s[R[1)&O@'k7.i&e](qt29ahWY\JY&"m?auE%do'4&l4]:IEr20?UI[CJJ;dE`J5Mme=PBJ`32EtLGG+oFliM!]@fFR_WY,$/(tdtDgUNd[XkYiefoS$T#(;lGSak>]",IN;cXY2m%bn+seB.IH_W.\TPi#J4&9*B;N?8K1)Wi%n7b"UKJ8g\,E"A@19ObnaOj0A<%Ubb%u]PIk*\CJqW=h<b\\M]Lab5u!3FI7u[6e6C0%N-PN9WN4`=g+50H\]Gktd8k#EnQ]+7*W?f^&72'4FBctnABB52^9t<(7+I?$eng,k=J[DeO1E@>Lt=/*1@atK0\4g\aor9D)dA/*%U6KK:r?Qo6QjJ2+/^tqbi[\$uGg6HsJ"INd(T8g4FU#2;q9#t-Hren!/jnb%LI]r3f&=p4Ung@fARSk!B/#ZZE6mM2Frcl_ggo#^%g90?M1L5(@rdcDB;.l"@#@&nq$7>Q78NKXi')'R/'Kh0;&@FJlA:#it-96Q%Lge)E-uhRIl-jMKG\i3#>oN#DiZMRHH*kj,B+i-V%X\s-t9=&8mM0%]Wo]HdTih>fRDGsV2#X7(.N0>PK2?DIa:`)B%^tgU^qhdmtP!)DN<)djmb\*SNp@0+8]H,-aWZ8c06MI63'>ksj%U!n*:e&^MU6V#+JO=3cLaQ$)EW,:m--C'?7(F4i=1cqI7[&XnsgK;:k;H6bS/(p(")e@PtQG'alLW6;Ab;g&;LQ6fi4Fu0VLtGVJ%ArS@SfHIgOnN%unB"KsjrPE+D\/`J6QNrVc5I^4f`,(VMf+&!Xl3e'KC;F]nVZW_@eKK@kUqh6CQmr7o8sLm)15H_\H4TEFojYDB%d`/NFL%QTlib$c`A&<Xn<%GS]4q:VYC`+"$CVF7k0fcnp)j%UkF>EZ%dt03PO*=n)>[C5#G/MjE@jT*U`=m!sbRP;7-kVfGfufm#%gldg0r<`EPZL)6PRh'$2Mb$*`Wf@<(!qjX`2Xcag;B/^.oN^o[b;>]L3((cPC&UuLMQ%WtWfjRseOsp,OD:if/2?e'?6OA_>peum%bhD,!YJ&4<)``#k%Xj]S_XUac/.Ef(O#EMn!L%U`J%62?)^]d>*:*O1.!M7n/^p%bQbnT$SeIif%?k5\Z-X0&(MZJ4V-)u6h?m@d%Wd$C)dHt\WU)#b']tT.o#%]5D4WQ<JUs.EM\O3Idq:AksA^b2;!XliL)CM^#?OZ(-2JpS[,<Miuq04N]q[W5>\hdF/29?.];gc+"%qMlH5>DMRGp0<^1,.AGH%U?!5%Zka-9#&J9\3dfjB20Sl02O&PO`<9m4&#h7lNDU&NlpUcIcg80$3S.(Wul]kUI@c)rD<<.Qn/H0%ZAO[2:5C4%H2V+\M>Z_SU*jpGV$hGu21^N\/Y?&kJjujoP@/7A5W&3]-lmE@p(8j!Re":4oou]1&Q@c9F+23?1%R%-aNBe4`;t"p%G__Qa[9ndU=V3Q=Q^%?.QAW(d)Nbu,r/K0ZWpta[LdQ+<rOMn&Hi+-0U%[B#54nR)>lp/H71'W5?6^'HbnV.Z)LOmtC@FA9Ol/Y`%&RJe@'B/%a6BT!p81DF!G=Y.@MD\S"3jV@._TT"0,.tN]0"S[U^M32PZp/Nci7IFZN3;Y#Bgs$'7A>oN?DJLuj]/SuhHcuth&Ss,%k9dLG9]ClcUE3_"=-AWO^=ML<QSBE^,f,BQ,Yd8B$-D8\)@]9_?6g^tT@^#4Ou[;g,SMeGFJR*sI4ZW,mV9BL&3%P'/,VGCOrCu(%:==n6kt-(\o:t(4*`Yf$,$@KMg*0hE:=D);P3o5+b*&RD%;AE')Jr&=@$.sP21%u%13AMgAEW"lI7]m_,(W<=Y>L\Rh3TB6_2C,s%]t?gF_RljJ-G@#XB%!/-F=,c.0*t?NVf!nWJeq!QVP:3?R^<g\LeW2>NS7ptpEdB7Y2$W(OnWNaAne=YSTGG!:n8#$,<NSdq,MMa%/ZV=WPM)0R.8POs85Is*MmOkddqclLC\(3aP6no[o$^#o]pAYn=^<7;R;)5T!bJst&dc\joedYP%eW77P]lO*(!:^h9/>!cF*T>X%au[(&Lbd4dN=pA0eD0>e2q4da4F\qCb0H_=HB]G%CBUWK^%lXOoaY+s96lLLA[_=G@7i%\OYV&^+g31d=f^.f;plS&Lf9b\2<pE_%l8A,H?='L)8Q;l*W79ir$C03%,)JoBB9>Z+=ZNZ3;OKagNCp%6(WfX#2t'DEG)'%nja':p]'+^9=EX?sIbZApLLat.d2L8%qd>Cs%AI?9meS<[@?:VGeC9^7;Ra'em'!CBa1Jt;3IuC*Q)h\CKQ&Y_Tn]E]52<pHq]L9Ihe)MbQau9"r!R!)ZegOY,:jOu*9*b59%80?+%Obe-WX9TK``5ii7b7<\]3gM4cCP8eT_=1&hQE?W6;V#,VHH1WO8'ec`Y9R_K+(U)"A]Mq+8S_?H?;&b9h/9DCC2'Fo;RL=HY*$-i%Sm[DX-"4PZf[?*&.9j6\f19-":Q)S3F-%sc\*i[Kq[TSE$CAl_(F1W,M_m&mYL\M7P%]bQ0"q17b[h9;,s'Xh8mb6TRZH$$;S)3Y%i<?2RkRt!j<q?s/bNut[e1SkM7<4_$[3^-chH_@NBqm4W]M.Qo,C.t/?dcURH=DltAIVh:HHc]aCWTn/GEM<)bN:,09?Zp]ng0uS%6i%G.8Gf^IN>:H>WK&LY0>4qfr\D+M-2m/47)+QVIsMbL^A.9j\"Af>X4+mMocbjODsdT&fCkR2e"FH>Ukf!LnA"tsp@)'LJ+q^P%HrE2_<;T;bM-nd+-Tq=m)jGfHG7Z]V#AuO_!bEmg3nf+G_QKI#\GJ<h*X7tsB9Pe5(oP=%E(eXRgE=,Oa#t/2(T(hT'"c'H3^d(F%`VE8["Y=nP_do$oQWk+3naOc_\8B9$8%g[T%m(t`VsUTmRKtf#/DLM4)9mC;A5Kl^U)H!a2*(6d%IU%`0k1Nk$7;b40/\<:43s(K%qSN/Em6+9^N1IkOK46h91h$qN=!qOs9ZF2CNpcTZmO:Kp+_XJNlD;lf9EbDHD.k=dVF.=.q)L.eYa?)8=LC`:Fmaq8bjdj6Cjr!h%aR3#0R]6(Q4Yl#lIab/e2l$LcQ/mTR,fMJ"023fELCi*:3s--G#jD-2OS0UJ6o1(]OXt]Rs.*bdm<%9GY@X^;@;8^F)5/$K]-g";%j(ejYeN72.fcK\D]%G-u_1XY/o^@lQ`q9_"b99J^&8q\GhjrI;O-;_mn!I*mZnU50]P#.Go>!=7-h5#Vk8D@4:S["@EemY*ZN(FO%/h&=S'hLS?'0K=A+g,$2JMU$[KVHlA(i$.TS8=B#3M=!^?;:uS%<?$e0e7ga`,Kq<c%c_&>;lI&M'(3$.A"V)AAd_/[9aU<(f)/j%EVBN[kT:fT\A12iaMOJXmi'"cMG=[.`NLLr"V7]<i!JsY_<S!hIC7#<X0%@='g[N,b-^`,L+oH<F[fH4VBt#D@l9&<;nEc#mQUig%c\o!G?YH5/-?W1$XaV^G8#kGT$'I0je3#r)W"6d22L/a4S:+Y(i"YN5^ZUpK-F;4Ol-3t[-)23d`ih/`)KI6Q,-m'*p'E-DfnP$f%7!%o#F;P*Na+cEtb)f_M\_=9"NqmWp4EI*)iqZEV3+48&!N2B1cB9K[U83i0DXX6:7\?WJWUQOl$PKP>K;19-5&_0G1P%kOSR94T%3hm(B0r&CR-1'++69:HfZJ*T8XgIhafl`q='^>]JkBm6*_n!S3pC=s_l`E3i@5>6<+MNX9jK%J>MB*7-5^$#0EHtU[j(U/9?tC&r%2*kOmEiIcCTU]31-<r<r6tj0FFc*VI,!g8'?/.9QFnWFl\>)<s4@'>.:"Yis`'>@:&:&FH>`N9hS#dLf4![_A[_`]S58AUEj)\>"%W:4n0P>TQIgm/gm^1i':be3s<6"B76(e9I*qK2S4ZsMgbYaSg=C<Ilf-LWb_5?s]Bo#_n4<r_C/fJEK*f"kkBo.Rp=l:bdh*X'c[%k>k;d6k+Vp=,+eIF/7$<k0jLnlQmu-q=k"`fZ:T_g/4TBn+G8KKiGPW(b)-,q0K8oQ^tdBkogc)g=,se8993VlfUf+8opb0CjTLB%(W8?uYV$b>aL9^qESlAC$"K`jLAH)]IIS=B3]uK?(mb/#+1hG=I=S6AokEWLnsSe1mXRraS,"'>W),&$M7?E.Q9SZj;hX2hWMc^-%"XG<^.JIHRS(^TZ"_t"-\8aB[Q/Q`)=nB;)K8QF/f0Cp)YJkc!i-HQs3;jVmmKC,La!V6f9^HL3'E/c3/e#`F5#ESO6EHO@]oGAb%"ik3P;M+7N]cH!_@\k(6]^uIf"_9lkjX&79f[R_lk8]9jk6$=R-"ajjfJK\iRis%aAgtiF#Y=eFVA[m0<n%4!6KMKOnJ'37bU,i<%qH6EYV=ZLW5sKC&*V;C8UG"&G2g\aQ\7no7H3_?dg4O^FY^e6'AD2nib2q--mkjVu;L<8d)mt]*>mWPEoTGZ6jT4CSB0U-OF"s*;%XVtK/]kr(>!O>^?^Eff-ld;R`Wuc-7jB\pu7AA_b]?J5#l(+HN6hZ$,FfQO6Mc=p$7m#Z4#rG+SP:;kN(g5f(jkH"^h!N=2"*AT@%TL=?'`Js&BRD*!VNRdC(I/.G@!L#Yd;qnO:Ne=?eG@6/O5A/>6A(.V-/&+#kF\E*GVdd[qWK7\g&2/t'cMI?Uaak(,;t525%'3+c%#r8=na:UAg4j\KUSJJ-M(#M87>b!ZY5h1NE(#K"G>1^qko*$NWaAq+_elm1g%D"3c1HB!g0>JpZL@uRR2u]>t?U.Y#HP-r^R")"3%nm"-=>QY10<@2@W^]BuVnYu[ei#'QBZU4gk4L\H&#'?_ieUp_#\;f=G#Qr4&>)ZY&1)-XXObdAJcae79qR*9]Z.H0KYLkR5LBCqB%QTbi!O1ko>LYiiB9$DV$--V5K5?_=J25M-44j?>E#37Bd;iB<8R?BonAejDZfQ1#Oec.bt`YbP8X4uc7N]D3a%8f1k'$lKY1_':@%<&lu/]KR.E5b)W2JO=Ze<TF/:T6q2U8"Qr!3%prE%L!kNR+5^uflETa4W.Y-@9/W'!DH[CMoS;TH8]s!GRg4Lk0's9Q&nmmnPsCd%RP1et?7<Iq;J@U=S^"!Z&QooH^OZY5'sR$H6EJ[^*7kDVhuO(riHb#E/\QN#?)\,!4MfRj!0?rXD2ZtJG=M,r1T.;E%'\tUZh=g+%Xn1j2Qm!E($(Q[k_"rfP?PqP+[q+@P]u<>IGdk8c(qlPPar$uF>T_/g@q3`\O,gd8N>j\+].cNVVVKJrUens#b6qTh(BN#3/</Z>%aq3-X"p@g[V/U:_Et-JsA+GFHZ,H^#ViQsm].bp6`&/^d!+lK[\qe&b?l&,_O=<YS%ij*/Zj1,(2TRTfTE\gK'FPC[FUUOTS;-VH%Sp^1[U4FIbZAhT/Xj-p==_HLk-8GL5?9!*g0rKj1%k(a(6n6ii!3>Wlp@pZg\#>_3;ST68Kdf6Dl3j@f<1WtgJ8Bb2h1MK:n?-6(%=9T%U%"@q&,m%t/<%B"")-,5*?2A7fBIZTPp:KSK8<HbgG6,!adZE.$d]utth/%K)SlOW0=G^`s0;P75b)Fi8,u@^EIYR-]9&gSP%'GX#,2G0-Qc(DI*9qp8)9q)ue(%Af?I'\F?ZC!</5a?sHA\!KD;%NAiMRI.*\]H%X#MqT^_W$>se%CGbX-sSiEpF9p^Z$Fn9n3R?%>H-KTWQeL(01%X@Aft_lB50V+.A0fu4@#u#%GH^)Jugd\=+,_fmY/iZG8!*FE:eQOCSe'+FLA&=PYd9E"5O<+[@u]J@,:+cOG!5U%:CWlJ6KCuHZI`Zk7<tN0^9%AGFcEK6lTUk:ER`\nN3(VLU9K.]r_*NM?00u26GO/5)]u7Z70P=/VZOIJ77#KP'g.%qX8muc[.3&j%?8DAa;t_9JSQ)0C",2>HLEVSk*XkQj,V`o<G$s?d*mP(j`Ej#%\1jUQ`rKsJqq1>[Y)oZ!cIaSK2nrbjT/=!4==pD)eB1C+iTSh<%+e6@O$&h\@c*A\,Kf-\hdc=+\0OF.BiW_0I"kT$:"Vu@AlDU`0c%DeUSM!\Tk"Uc9L*@4;ffR!H#FPu32m7hgWtc]5]cJ[A"++V`%GAi:knBTAl\cY'RmDuJ7mXZX8'H8St*HCYtB!qBM_.W-=%5CmG/nVXnCUiT)=E53:&Ul@4W7q1%mW"FeOMN6YKH4:KG]]2jNm/jN%4qGe#TRF0%(SKI@['IQ&N8#Ri+%KVa^k)?8FUlKV.NiUel4g\REZ@V_55`Ke-"%oBOM>TA/$3L)/-O/jY\/A>X5N)L^L[TpSdfV+%ESYVgb`JD^/#,PskVqg8D=[jbkL<nt3F4jp4pdSdRi5ooW7V5(Oq#j",H"G;K\S)oo6qCf"U:%k+ULIQL_V8+*#3!!$/,LY$3!N%%4)cTM<.e0(rYR+dYL(mn.c%.]it!Ip6D3o6b;PjhA2V1\5/%F>+p'qMI;*ASDM8\M@)@"enTW6AAA:Q/:C\9o>1EYG*'*f[IN]Y<%]j!HVILR2#+H'EY1K+E,a9nt(cg@r0pij:M:FI7r4jOOXh<<WJjb=X:W3d8"#6a&eH3R0UUV!V9i2>A8>7MZ[s7+%OSd&ifJ.DqG%/7-m9(>[:*a5fdBMS%W2Bh'[c4!+B9O<Y=$1+?]r49_58i-BcFU?tc.&-n&>pdk6,V.[6-QgLA-3&uUf82`9?GRM#MfdXlu5D/P[%:Wa[mIPUlcoCM"k]qM8rV_#[I)4YO)$RcC`'_,f`404r%epOaS)Ao5R_6WCL+cl%:*m<N?oHZoL&/+rP*d9Jj/U;0pr7.T"89=*[%#Nh(2b`H%c".Vga*6h_pJqpuaPLo;Gi\,FbH:r4dW:6J08MpM>ma"`\!+\Y=Jn4KW0o7Y.2ta%TEeA=YEAAM(bIW6bg>C/>dEfq'%)2lPOB7ffh^0D20q!F]PLRSlS;edt/fUH,3hRd"ubu!m."k+Sg5NX1N5!"\uBO%0td=jc6\,0^=:g\=$0a-Pb((t6qR/mAhTpd+3%,/5f\P!NE""ccuQdU4`"p0=l?+Bu:D$0mH@$?@lI^Lg,frbC=/F6dWMc$cgU2YXUta;sdk$8Zf9AZ\<a\,Bk@[05B`o_\`I-!bH8%!<sduQm6V.2Rc<6h$E4,%sJ+Y!LXD9MVUckpE^qHPKh2UaO\ORL&s2H=s#gk]AK")[<dOSfEXCG4VMEKrojgYiLa:/4T&-9h8;JM%bC0:es+cYb)CP7m9V^iIrb9l;PCK#A3VfQjoW:7#oT01(RM^'Q>!)]EZ,0`U9Ik,(JSE*7*15<"B1bm[bCM053ACK#aar]O6OleL%F#bps_)M>BeKG0@";r4td+TWsJT/k"8&_,H`D9aTXD5-FgfX]LOrE2f*AhA-@TCR@#,P&eF)aWpqK&Am,As"bPb"@',Bcd>@EIeO%:HsP&+q`)l8a%D!,Vq:eP]8lG3WLH;nMsN<%D%L^K9pRu3Vgo_M>B>7O$C>)o'f5V88p[BE>X+e/0uiCO8C2*D`C8!,r_GA.hg)u%E2Orh,[8D9O%l(9mZa6Xm,d'>'9$Pr/,U$j"jCE5:._fO6pGkYPQZ)s8'%3`kUIh:B;["@\H7Ob&uCFD^HlAq:`'*jdq&W5mAD4j%e*`4CA#%(cd>Lu9;\Bh(bnW4.OoXh,S6-)efLOSbOsi%)'F[*oOoUPlel0=r_;`_mCim(hJ9LTJ9]hUNNHV..E3CN0h'fg4&d>k+%L,PQb/.CF,7J'3XOEX9>o.T,$"Z!:B%%:7\OEo=!/]eOUXEM&uS"bj?k*8>UX6#I![j9/Gb?[6cOt<5sZT7QSf<](;l77n*/Qf?.%^\T6ZZi7<jl'CC4mZ'R-ZXg\LVr<tQNTea&OF$?a4?W&!AD(XMHOe(A5kgP3B+g:@P]tG!TRFF5-@lUZ.Pl%_4Lo0K"s?L#l-S6@%$'5GsLLUsY3Gltr#pe4^HM:)7gnOZKl']J9FuG,$-?gff.X'WdSk88Z1CDqo$#$B]+D.IdAda&ea>4-=1\p',"a<_PB+e%F`,'E-%!ZrIucY.mB/TtV9ID7W1<kOdXRY5AD'@:!JJ=LjqNZ:<XUcnrCfoSJ]oL5OB,c2\FluIj7bS?:VElQ<\aY3!-B&T.g_fS[94Hnu\%HUH%6aVsKmo/\AfXpsGuAI`q1,j*6#2"s[a@;/p#1W`YSo2D)jOulC%jdo%[gM"\:bqf[ilj'),-?nU#HPh3'!8\.U9?tlq]E<8j%,emJ?1C"W()(jKap.J//(k,%oKmn$f5^(6=E+-HKUkOU"L/h_io&[$Fdu^*77_^4Gb:KLKQc)"U+E5(@+A5aIN_,aC;7CS`1!/J$%\tpZ@qr./RG>%M>[bT0a/\1=e3b4/Z?P8HgB1H=Tn3R;"na:!k78Go.N_)LEjkVY:Kj;Zf5]]U3.`EBfFA26-QMn6R-34mO<-(a=%ET+.s+Z^qNg"A2EP5p$hbVKRH-dZ+^J;R6q%G)k*P9->`k9O%@CRm:oNpdSO5Vt-[GI'MVpdL-'-S_B^$Yq^LWL,)2ME<2j(.LW$%H7,\k']X^H?*E(+QJn@0p*.bZS'P3Jb#1$cP8"/ArQk2mhOX3!SD7Tb%2dA^MKZ<qjd`.E:EK="ZO!%X;`6]b-RHg(P<,n1bnTg[%l9,nWd[cR%NF_2.8KO@6251bN`<6Y=j:%K$P.r>6Z?mt>nN*2(Cu"BGe.G8:YIc./pEA;82$n5#<ZuZ]@WZJ]\Si)o@qdZQDj%tC%Enm4L=q'3Xm[UqbbCB$2nMcS[*r%\b`&"E[MCM.Se='2n#AH+?7mOe&C.RY1-rOTdK$%#eCJ>L^!HJE*/>&_A_CQKo&W6L_3'<%^%ODgf9(Cuo?%4fS*c2jcb/0H;`O,mQKerZi+.Sh$nk#clh*=R!r?i`XHI>$?La]`Ze120Qm<ftTm.00W)-tmJ7bn!uDk$SaEaGOQg%>sDoA%ee80m(0d4A(3)@!a8/K1rBeX9h_G*.oIi6pjD-.!FrDb@IPW/<f8'X6E%N!(/F!\@IhA>@g#:YA%s(i2JD@Ek(U[27g-$.%&L,"(RmJ,.UV.#"BP.<'lm?OGYW>53PiQY$Yi;EOR/l@`/p*[M(2kQCi`M=^"I?lL=@`Z:]$rQ3-L\eqJh2O+qXfMdcgYE<$WZ'3%7a=r_9'+;-bW=NL+^O*V)ff7EkKN&CL5\Y7_!D^7!]CDtL5*1h^j7R0V+nr5Ua9%4!:k;3>TUuGJ3YC;%q3\aQ&rk1$B>W6]u\`j%E(5JWbO@ae(iZZ]&0kI7r<<"60`.asXl+4Y?)RW4,PFBDLHV34o-(!bab*a3Aqb8^4#@pj+i7doi<YbQLqQpC9[N;8b&SFoS%No0%@+upF-[m&XXNl?pHoSljF1*B75g=$*)R#iCgK&R$OP']$;$Xo*j6C4>T.p,hYi<HEkCQ<lP:nU6P%clqJenNPQ5K`D7!8U-!U[WZ%T]qXRL]^%*"$Q#QG(3m,]3EDLoEG?D^\mZ7+9(l`++F"]gX#?'qqK#<A6Q0Drqc3s%ps_[l``O"q"E1/^A[ZdY9(FXj82&hI/*@$%=!.J1iBO]Ir_r]8.B%7\\)P1$\*b$mn3>mjb<N\N?^g"u*^7iI:Y3jEhTe/[L'.WEB+,IeiJ;*U=aC1u4Y]V0N!GJf#0I=.S_i4o%M;'G\@o+_nh-jCILmn^^4,l2JXd<BIN8*H8GF?-mGI&9-=7!VCXl0$T^U8['qmZ$/TACYm1#Y")=RT7.Z'D'`r@@'<*?7.O3)$hV%l&l%D',jaMm2PfLE/a,t-rHR(9R%3mJKfi;)j^hPIi@s`bmrSX1+;&m*_7W,gPT;:OX7M?#'otsBlT`#9g0dZA`Ym;r.T#cSG%MQ%PE>tQ)C\ZmKT^:;"0.:lBmPjLC+-(GPRat?Zc8?lk"jtZJisSIFCuXUY"MRpBrt9qJss"><5oL_R-Pa75Ee)niF&pX!1,#F$/X,s%nF!:lJp3RS&<-7]-A'oVeOAuqZ8U-;?Iq]ORTDA0-5./;P.0lq[?A#f(A3jaihC&5g:F/N[,G0::>26)N;AE0:lllX$;."<_Whdn%K'DO?-1.boinsbM_Y'i%%6N(on6b8UOP=&GJ'%`im]Rt\0DS`>J+$rZi>]P>lo@"Z(Z8lR$PI.#q"e._r@IaCh$^q#_b?9is#/-Y%^0<D=-DTLajr$).Z@OoLm&r=phS/mbP:PKsr9!qgJ,GY:5C`@r]8(n6o@H46B-h>CpR@ejLq@uOrp=F-!mZX1NGO5+S8'#.0#6]]%;Anc)I1hs',]_t\@)aoH%qc3!e,?FR[<dB0D6PP,i3#Aqq>sG0'<BXL9Vf5N[_RF@$2KB?7^kMN^`m4<,=se1-3&ZE0;TLRi^7a,%RhcOt/"48,&\f]q:k]YCdm_Vs^i#kkSB9BOJGb>"&m0)79[:l;[436D.eY_J\Z4(j#m\8[F]hsn/LuK[l"V<ViD,2H-:.OnR[%\Z%1h!qe.r*!j;6Y3%=Y9Zmp`-%#;[Q"j<qL23q^3j#5d(+;cO.91Y^dh(0\MX/4Y@">6(n9d.=`4\m`+[.n$0kOL4snOJRg&h%4)hn%J`"Wne9`L\C7,9G,19/7XJ[6`T#`'cU;Y*pS-,\+13BI4=a/N^$tCgA_>B.rkM7$<bXWTR3+nm?UKtMl`3/1JZrog9'P:4D;6)<K%:h?q#.b<WehS9C2)hE#CZ1oH:.N"eoeaVW!SeNX0Wmb_#9#i\e2&o_LFBaq><+H"6-#YU.4`@1m=^CDth#Ku_j_;E]5B(>ojJrZu%6Edn@@oQRT8:qh&-'*'+E>'J<TdE/hqi2<6E3;#'OTsO6T+LUA@#VSu5s[dFmB3dumElAo2Mct1_2boTR!5rA-4iWmi^sUG-u"Tk%ie_>1>ih;_:o50Lr/Ygff61F^#?IDLrHr0g%;H<A.rX&Fq@\!6XfLY*$r9YB8eKep+GS7o]%I<ZqeBKWqU(d0;0N$\U;1L*&K[<\%Tr(f]9jZF7+m6_IEI<YrlP4\s]aaTU0eEM)#jnCK;MPYu&NUdF2,!N`Mg+9.ITQam,`kjF.-b'IJnkhO(huOE-mN_c-GXJL+;aBO%/8-Bb_\t`_MOooO60`Hpo]&J'^`YqI<L$Vfl=R.qMJ'qO3^s;\-SqfAVl4r=\m=JKP,+Hh*V"Zi/Bg\T%Qdokcu:\N3C'l8c8P>G%.C'jA+d?7&(SA5*8qAmWa&oX)@J(ORFG7h!:mVUpG,[\R78GTD>bt24V,j'LM.3a?hGdH70%'Ld;![bq_p\-bKUB[a)Hbf<ncBIT%+aF,;(2$1,3*)-S['kNGDhT.s@(%e+`.X?iGP:/4p[C1<>3HQDG6<K&i1G*gYp&X&^cbiRUj4g2#E@h&*'u_`(G'14$5XGfHiT)U%*l-75rl3Ggpd^opJ5Xdq\^*?.5p;W,P:.SVpdNFMR1DA_aXGP+1@Lk1bpKp#Zm+Y5JHFIl/Ue+o!98&D@iS2g-]sVq9S^io)62]G%\V<idYI5!ZXeFS/B`K>?6=Su2Pkn*caN&2`C#LCK*=/J.^s2;MP:%ga$KJcdY[X)RY5j5EI4G[!SPig1jghtEc%ah.D'!4/LKTJJ%2T7?7&-Z2PC3A@+Z^7CIcjJp=9RTlt71J^u0\5ct^c.Xf"gXO_,&ep7YY>m&NXE@hO@^/T8Znc>9S'l\:us'$$4$<"1i,7A\--W"%br$%8fec@&'MK^VDW>%D;T=D4H3<78>kNXGN<J+r%(1Qj4L#R;7@r?M7%Bd&:?SLdm10AE^<tc0#Td`:M-f!1ZfY,=%8:-nI]BaY%$:c(iCN`Vth_n\cj>/L*'35u=>fm85k#433R>1BSJr3bk9>nZ1#A:MD+_g=/\]5nsXKb>BW&@RC0jVGXFre.i9]cEtNL:rg;BX^e%gpmNf"fF;%UY.eHJZ/pBJ\u>#:R&ph+AYFk?fB;=a752%C$_"@)SSiRLX=?-01!6>7(>'FJI3\.56c]RDVee:P=.tMPK=bX.$Hjr%!QP12n7\S:)gT4<'jOnd!t,.heA^l4'O7E2S17(m_od'$l$8uL-4>[A!Ru8uGF?/^_)!M%k-3SVE)VlA)6+i\mN^hp6;H5i-'ahj%E05r:4UhrR4]^05#WC"@crCoIGoHJeck`oW2mLl/'Fr)b_Wmu"NjE4+$6p7#PiJ-69Ud('q1Fcf!OXidZ.?7GS7GI<F9k0lB+B8X%oJ*'h0ZBRK!*49<(8WG#C@od/'q<]V&Q.a]._BL(Z'_NN:nK)t`>oi1?l:Ao1F_OVJ>&JajMt-%>R*r19$JVc@uF>(J:>gB>RUVU%gtG<AVVpaq8@4adk$ce'^,6$OM%oU"C16(s/Z@mN:cEfq4Va2ViM[O07O8$U'L8IL[uXRD@l'@0d1;38Z>"m[a;e7]=]$`7bt:dj%f-kkD;(J=i64:K?=uRtcc+kBH#<+;]'p-TG&`k\lUE"KS8n:-5#*i1%O>`],c&`Q1lNm3\./2,F5+#sE`GVksfj0>=PmHZ52&Nf"%FL0fkDe]Xj^QhVT.1H1p9Rqo5r[\M-Q3KQHK7@gfi;8AAnb1dE&HI&Y#eYSp/dCh(<C$Ug`hFkpY:^1b>_"A`"'gAX$3\#R-kb%l%7A6B@Qc&ro]IXnAe$LG?nF!T$d-=^I%p76&!WmQVb9@#bE*5`im_K6A(r`Q4<k\8?=$JMLL]a*d/9uj?rTT=1k=6;H/$*S./Xtta%:;68?EY<`WbmG$3pI%!(b2m"_7i#il,EgFWr%3^:fP9q5,_NWI:PI=2U%QAeqiUa]QS9\-,Gp#uAQ<nibCO4Y5l>%>mn-bCIZ*9/%hUE[$$K'l$+RA`O?k,C+=nAY98YS&!>TCW)@J:1(AJ')F%<6ZKr.WAW7Kcs<7F;5]<M;U5Sqa9&U>qbp>qE7F/L1h/VaJ,u&V"<X%":-(FfH>cb*rt@-V[sVHTp2S.Fs^)FpQPuJ-#DPX:W@S<.'TAjm6#mn0l#Y`NuPi;leal'nfNAVmd&2KGkg9"^\[N=LHg:bmC,<m%a0X63Ood11"QV_M9Hq11TAC^3UoG-hWCtoW0P'8e!(O[D>\1Rl-%^@e"CnYi!0CK+jp5ef:Z3&oTbo94_t\WW:p^e_S\?2/_Vku;%jV$.cKMZ)B6.gl:6j4`cj5=J,oK$-j*;/MFS.@)i\`nHtbFbMdXgGZSW+B*K@=sMB>/qAga0:5YSL_P.!@Y`,KWJKG/I7LCL\[(7%GT'e:i@J4TeZqC_LY<=K+d)d5<[;4BM[6N&)nna,GmC)W2uQ;JUS)S"V'Q9]9AtlbfrsR97MDq+I#YVbkV$_"]U[oPE;A;9p4j3+%rmdLI?iE+$qhNL)4hq$Oa6t&khn4C7S+hF-pclN?s7J;m^O,R-n)+0,j2:c?TCL)Hs4%&0i=Fgor;MIi^\dfqr?&fQ/!0I^5Q:BD%5Q$TBo&frRr@uUR~>%AI9_PrivateDataEnd